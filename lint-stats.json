{"results":[{"filePath":"/Users/asadriaz/Documents/comparison-slider/src/App.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]}]},{"filePath":"/Users/asadriaz/Documents/comparison-slider/src/App.test.js","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `⏎`","line":30,"column":4,"nodeType":null,"messageId":"insert","endLine":30,"endColumn":4,"fix":{"range":[874,874],"text":"\n"}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { render, screen } from '@testing-library/react';\nimport App from './App';\n\ndescribe('App Component', () => {\n  test('renders the image comparison slider heading', () => {\n    render(<App />);\n    const headingElement = screen.getByText(/image comparison slider/i);\n    expect(headingElement).toBeInTheDocument();\n  });\n\n  test('renders with correct styling', () => {\n    const { container } = render(<App />);\n    const appContainer = container.firstChild;\n\n    expect(appContainer).toHaveStyle({\n      width: '100%',\n      minHeight: '100vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#f5f5f5',\n    });\n  });\n\n  test('renders heading with correct HTML tag', () => {\n    render(<App />);\n    const heading = screen.getByRole('heading', { level: 1 });\n    expect(heading).toBeInTheDocument();\n  });\n});","usedDeprecatedRules":[{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]}]},{"filePath":"/Users/asadriaz/Documents/comparison-slider/src/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]}]},{"filePath":"/Users/asadriaz/Documents/comparison-slider/src/index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'render' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'screen' is defined but never used.","line":2,"column":18,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":24},{"ruleId":"no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `⏎`","line":25,"column":4,"nodeType":null,"messageId":"insert","endLine":25,"endColumn":4,"fix":{"range":[590,590],"text":"\n"}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport App from './App';\n\n// Mock the index.js file\njest.mock('./index.js', () => {\n  return () => {\n    return null;\n  };\n});\n\ndescribe('Index', () => {\n  test('renders App component inside root element', () => {\n    // Create a root element\n    const rootElement = document.createElement('div');\n    rootElement.id = 'root';\n    document.body.appendChild(rootElement);\n\n    // Import and render the index\n    require('./index.js')();\n\n    // Clean up\n    document.body.removeChild(rootElement);\n  });\n});","usedDeprecatedRules":[{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]}]},{"filePath":"/Users/asadriaz/Documents/comparison-slider/src/setupTests.js","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `⏎`","line":1,"column":36,"nodeType":null,"messageId":"insert","endLine":1,"endColumn":36,"fix":{"range":[35,35],"text":"\n"}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import '@testing-library/jest-dom';","usedDeprecatedRules":[{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]}]}],"metadata":{"cwd":"/Users/asadriaz/Documents/comparison-slider","rulesMeta":{"accessor-pairs":{"type":"suggestion","docs":{"description":"Enforce getter and setter pairs in objects and classes","recommended":false,"url":"https://eslint.org/docs/latest/rules/accessor-pairs"},"schema":[{"type":"object","properties":{"getWithoutSet":{"type":"boolean","default":false},"setWithoutGet":{"type":"boolean","default":true},"enforceForClassMembers":{"type":"boolean","default":true}},"additionalProperties":false}],"messages":{"missingGetterInPropertyDescriptor":"Getter is not present in property descriptor.","missingSetterInPropertyDescriptor":"Setter is not present in property descriptor.","missingGetterInObjectLiteral":"Getter is not present for {{ name }}.","missingSetterInObjectLiteral":"Setter is not present for {{ name }}.","missingGetterInClass":"Getter is not present for class {{ name }}.","missingSetterInClass":"Setter is not present for class {{ name }}."}},"array-bracket-newline":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce linebreaks after opening and before closing array brackets","recommended":false,"url":"https://eslint.org/docs/latest/rules/array-bracket-newline"},"fixable":"whitespace","schema":[{"oneOf":[{"enum":["always","never","consistent"]},{"type":"object","properties":{"multiline":{"type":"boolean"},"minItems":{"type":["integer","null"],"minimum":0}},"additionalProperties":false}]}],"messages":{"unexpectedOpeningLinebreak":"There should be no linebreak after '['.","unexpectedClosingLinebreak":"There should be no linebreak before ']'.","missingOpeningLinebreak":"A linebreak is required after '['.","missingClosingLinebreak":"A linebreak is required before ']'."}},"array-bracket-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent spacing inside array brackets","recommended":false,"url":"https://eslint.org/docs/latest/rules/array-bracket-spacing"},"fixable":"whitespace","schema":[{"enum":["always","never"]},{"type":"object","properties":{"singleValue":{"type":"boolean"},"objectsInArrays":{"type":"boolean"},"arraysInArrays":{"type":"boolean"}},"additionalProperties":false}],"messages":{"unexpectedSpaceAfter":"There should be no space after '{{tokenValue}}'.","unexpectedSpaceBefore":"There should be no space before '{{tokenValue}}'.","missingSpaceAfter":"A space is required after '{{tokenValue}}'.","missingSpaceBefore":"A space is required before '{{tokenValue}}'."}},"array-callback-return":{"type":"problem","docs":{"description":"Enforce `return` statements in callbacks of array methods","recommended":false,"url":"https://eslint.org/docs/latest/rules/array-callback-return"},"hasSuggestions":true,"schema":[{"type":"object","properties":{"allowImplicit":{"type":"boolean","default":false},"checkForEach":{"type":"boolean","default":false},"allowVoid":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"expectedAtEnd":"{{arrayMethodName}}() expects a value to be returned at the end of {{name}}.","expectedInside":"{{arrayMethodName}}() expects a return value from {{name}}.","expectedReturnValue":"{{arrayMethodName}}() expects a return value from {{name}}.","expectedNoReturnValue":"{{arrayMethodName}}() expects no useless return value from {{name}}.","wrapBraces":"Wrap the expression in `{}`.","prependVoid":"Prepend `void` to the expression."}},"array-element-newline":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce line breaks after each array element","recommended":false,"url":"https://eslint.org/docs/latest/rules/array-element-newline"},"fixable":"whitespace","schema":{"definitions":{"basicConfig":{"oneOf":[{"enum":["always","never","consistent"]},{"type":"object","properties":{"multiline":{"type":"boolean"},"minItems":{"type":["integer","null"],"minimum":0}},"additionalProperties":false}]}},"type":"array","items":[{"oneOf":[{"$ref":"#/definitions/basicConfig"},{"type":"object","properties":{"ArrayExpression":{"$ref":"#/definitions/basicConfig"},"ArrayPattern":{"$ref":"#/definitions/basicConfig"}},"additionalProperties":false,"minProperties":1}]}]},"messages":{"unexpectedLineBreak":"There should be no linebreak here.","missingLineBreak":"There should be a linebreak after this element."}},"arrow-body-style":{"type":"suggestion","docs":{"description":"Require braces around arrow function bodies","recommended":false,"url":"https://eslint.org/docs/latest/rules/arrow-body-style"},"schema":{"anyOf":[{"type":"array","items":[{"enum":["always","never"]}],"minItems":0,"maxItems":1},{"type":"array","items":[{"enum":["as-needed"]},{"type":"object","properties":{"requireReturnForObjectLiteral":{"type":"boolean"}},"additionalProperties":false}],"minItems":0,"maxItems":2}]},"fixable":"code","messages":{"unexpectedOtherBlock":"Unexpected block statement surrounding arrow body.","unexpectedEmptyBlock":"Unexpected block statement surrounding arrow body; put a value of `undefined` immediately after the `=>`.","unexpectedObjectBlock":"Unexpected block statement surrounding arrow body; parenthesize the returned value and move it immediately after the `=>`.","unexpectedSingleBlock":"Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","expectedBlock":"Expected block statement surrounding arrow body."}},"arrow-parens":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require parentheses around arrow function arguments","recommended":false,"url":"https://eslint.org/docs/latest/rules/arrow-parens"},"fixable":"code","schema":[{"enum":["always","as-needed"]},{"type":"object","properties":{"requireForBlockBody":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"unexpectedParens":"Unexpected parentheses around single function argument.","expectedParens":"Expected parentheses around arrow function argument.","unexpectedParensInline":"Unexpected parentheses around single function argument having a body with no curly braces.","expectedParensBlock":"Expected parentheses around arrow function argument having a body with curly braces."}},"arrow-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent spacing before and after the arrow in arrow functions","recommended":false,"url":"https://eslint.org/docs/latest/rules/arrow-spacing"},"fixable":"whitespace","schema":[{"type":"object","properties":{"before":{"type":"boolean","default":true},"after":{"type":"boolean","default":true}},"additionalProperties":false}],"messages":{"expectedBefore":"Missing space before =>.","unexpectedBefore":"Unexpected space before =>.","expectedAfter":"Missing space after =>.","unexpectedAfter":"Unexpected space after =>."}},"block-scoped-var":{"type":"suggestion","docs":{"description":"Enforce the use of variables within the scope they are defined","recommended":false,"url":"https://eslint.org/docs/latest/rules/block-scoped-var"},"schema":[],"messages":{"outOfScope":"'{{name}}' declared on line {{definitionLine}} column {{definitionColumn}} is used outside of binding context."}},"block-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Disallow or enforce spaces inside of blocks after opening block and before closing block","recommended":false,"url":"https://eslint.org/docs/latest/rules/block-spacing"},"fixable":"whitespace","schema":[{"enum":["always","never"]}],"messages":{"missing":"Requires a space {{location}} '{{token}}'.","extra":"Unexpected space(s) {{location}} '{{token}}'."}},"brace-style":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent brace style for blocks","recommended":false,"url":"https://eslint.org/docs/latest/rules/brace-style"},"schema":[{"enum":["1tbs","stroustrup","allman"]},{"type":"object","properties":{"allowSingleLine":{"type":"boolean","default":false}},"additionalProperties":false}],"fixable":"whitespace","messages":{"nextLineOpen":"Opening curly brace does not appear on the same line as controlling statement.","sameLineOpen":"Opening curly brace appears on the same line as controlling statement.","blockSameLine":"Statement inside of curly braces should be on next line.","nextLineClose":"Closing curly brace does not appear on the same line as the subsequent block.","singleLineClose":"Closing curly brace should be on the same line as opening curly brace or on the line after the previous block.","sameLineClose":"Closing curly brace appears on the same line as the subsequent block."}},"callback-return":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Require `return` statements after callbacks","recommended":false,"url":"https://eslint.org/docs/latest/rules/callback-return"},"schema":[{"type":"array","items":{"type":"string"}}],"messages":{"missingReturn":"Expected return with your callback function."}},"camelcase":{"type":"suggestion","docs":{"description":"Enforce camelcase naming convention","recommended":false,"url":"https://eslint.org/docs/latest/rules/camelcase"},"schema":[{"type":"object","properties":{"ignoreDestructuring":{"type":"boolean","default":false},"ignoreImports":{"type":"boolean","default":false},"ignoreGlobals":{"type":"boolean","default":false},"properties":{"enum":["always","never"]},"allow":{"type":"array","items":[{"type":"string"}],"minItems":0,"uniqueItems":true}},"additionalProperties":false}],"messages":{"notCamelCase":"Identifier '{{name}}' is not in camel case.","notCamelCasePrivate":"#{{name}} is not in camel case."}},"capitalized-comments":{"type":"suggestion","docs":{"description":"Enforce or disallow capitalization of the first letter of a comment","recommended":false,"url":"https://eslint.org/docs/latest/rules/capitalized-comments"},"fixable":"code","schema":[{"enum":["always","never"]},{"oneOf":[{"type":"object","properties":{"ignorePattern":{"type":"string"},"ignoreInlineComments":{"type":"boolean"},"ignoreConsecutiveComments":{"type":"boolean"}},"additionalProperties":false},{"type":"object","properties":{"line":{"type":"object","properties":{"ignorePattern":{"type":"string"},"ignoreInlineComments":{"type":"boolean"},"ignoreConsecutiveComments":{"type":"boolean"}},"additionalProperties":false},"block":{"type":"object","properties":{"ignorePattern":{"type":"string"},"ignoreInlineComments":{"type":"boolean"},"ignoreConsecutiveComments":{"type":"boolean"}},"additionalProperties":false}},"additionalProperties":false}]}],"messages":{"unexpectedLowercaseComment":"Comments should not begin with a lowercase character.","unexpectedUppercaseComment":"Comments should not begin with an uppercase character."}},"class-methods-use-this":{"type":"suggestion","docs":{"description":"Enforce that class methods utilize `this`","recommended":false,"url":"https://eslint.org/docs/latest/rules/class-methods-use-this"},"schema":[{"type":"object","properties":{"exceptMethods":{"type":"array","items":{"type":"string"}},"enforceForClassFields":{"type":"boolean","default":true}},"additionalProperties":false}],"messages":{"missingThis":"Expected 'this' to be used by class {{name}}."}},"comma-dangle":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require or disallow trailing commas","recommended":false,"url":"https://eslint.org/docs/latest/rules/comma-dangle"},"fixable":"code","schema":{"definitions":{"value":{"enum":["always-multiline","always","never","only-multiline"]},"valueWithIgnore":{"enum":["always-multiline","always","ignore","never","only-multiline"]}},"type":"array","items":[{"oneOf":[{"$ref":"#/definitions/value"},{"type":"object","properties":{"arrays":{"$ref":"#/definitions/valueWithIgnore"},"objects":{"$ref":"#/definitions/valueWithIgnore"},"imports":{"$ref":"#/definitions/valueWithIgnore"},"exports":{"$ref":"#/definitions/valueWithIgnore"},"functions":{"$ref":"#/definitions/valueWithIgnore"}},"additionalProperties":false}]}],"additionalItems":false},"messages":{"unexpected":"Unexpected trailing comma.","missing":"Missing trailing comma."}},"comma-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent spacing before and after commas","recommended":false,"url":"https://eslint.org/docs/latest/rules/comma-spacing"},"fixable":"whitespace","schema":[{"type":"object","properties":{"before":{"type":"boolean","default":false},"after":{"type":"boolean","default":true}},"additionalProperties":false}],"messages":{"missing":"A space is required {{loc}} ','.","unexpected":"There should be no space {{loc}} ','."}},"comma-style":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent comma style","recommended":false,"url":"https://eslint.org/docs/latest/rules/comma-style"},"fixable":"code","schema":[{"enum":["first","last"]},{"type":"object","properties":{"exceptions":{"type":"object","additionalProperties":{"type":"boolean"}}},"additionalProperties":false}],"messages":{"unexpectedLineBeforeAndAfterComma":"Bad line breaking before and after ','.","expectedCommaFirst":"',' should be placed first.","expectedCommaLast":"',' should be placed last."}},"complexity":{"type":"suggestion","docs":{"description":"Enforce a maximum cyclomatic complexity allowed in a program","recommended":false,"url":"https://eslint.org/docs/latest/rules/complexity"},"schema":[{"oneOf":[{"type":"integer","minimum":0},{"type":"object","properties":{"maximum":{"type":"integer","minimum":0},"max":{"type":"integer","minimum":0}},"additionalProperties":false}]}],"messages":{"complex":"{{name}} has a complexity of {{complexity}}. Maximum allowed is {{max}}."}},"computed-property-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent spacing inside computed property brackets","recommended":false,"url":"https://eslint.org/docs/latest/rules/computed-property-spacing"},"fixable":"whitespace","schema":[{"enum":["always","never"]},{"type":"object","properties":{"enforceForClassMembers":{"type":"boolean","default":true}},"additionalProperties":false}],"messages":{"unexpectedSpaceBefore":"There should be no space before '{{tokenValue}}'.","unexpectedSpaceAfter":"There should be no space after '{{tokenValue}}'.","missingSpaceBefore":"A space is required before '{{tokenValue}}'.","missingSpaceAfter":"A space is required after '{{tokenValue}}'."}},"consistent-return":{"type":"suggestion","docs":{"description":"Require `return` statements to either always or never specify values","recommended":false,"url":"https://eslint.org/docs/latest/rules/consistent-return"},"schema":[{"type":"object","properties":{"treatUndefinedAsUnspecified":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"missingReturn":"Expected to return a value at the end of {{name}}.","missingReturnValue":"{{name}} expected a return value.","unexpectedReturnValue":"{{name}} expected no return value."}},"consistent-this":{"type":"suggestion","docs":{"description":"Enforce consistent naming when capturing the current execution context","recommended":false,"url":"https://eslint.org/docs/latest/rules/consistent-this"},"schema":{"type":"array","items":{"type":"string","minLength":1},"uniqueItems":true},"messages":{"aliasNotAssignedToThis":"Designated alias '{{name}}' is not assigned to 'this'.","unexpectedAlias":"Unexpected alias '{{name}}' for 'this'."}},"constructor-super":{"type":"problem","docs":{"description":"Require `super()` calls in constructors","recommended":true,"url":"https://eslint.org/docs/latest/rules/constructor-super"},"schema":[],"messages":{"missingSome":"Lacked a call of 'super()' in some code paths.","missingAll":"Expected to call 'super()'.","duplicate":"Unexpected duplicate 'super()'.","badSuper":"Unexpected 'super()' because 'super' is not a constructor.","unexpected":"Unexpected 'super()'."}},"curly":{"type":"suggestion","docs":{"description":"Enforce consistent brace style for all control statements","recommended":false,"url":"https://eslint.org/docs/latest/rules/curly"},"schema":{"anyOf":[{"type":"array","items":[{"enum":["all"]}],"minItems":0,"maxItems":1},{"type":"array","items":[{"enum":["multi","multi-line","multi-or-nest"]},{"enum":["consistent"]}],"minItems":0,"maxItems":2}]},"fixable":"code","messages":{"missingCurlyAfter":"Expected { after '{{name}}'.","missingCurlyAfterCondition":"Expected { after '{{name}}' condition.","unexpectedCurlyAfter":"Unnecessary { after '{{name}}'.","unexpectedCurlyAfterCondition":"Unnecessary { after '{{name}}' condition."}},"default-case":{"type":"suggestion","docs":{"description":"Require `default` cases in `switch` statements","recommended":false,"url":"https://eslint.org/docs/latest/rules/default-case"},"schema":[{"type":"object","properties":{"commentPattern":{"type":"string"}},"additionalProperties":false}],"messages":{"missingDefaultCase":"Expected a default case."}},"default-case-last":{"type":"suggestion","docs":{"description":"Enforce default clauses in switch statements to be last","recommended":false,"url":"https://eslint.org/docs/latest/rules/default-case-last"},"schema":[],"messages":{"notLast":"Default clause should be the last clause."}},"default-param-last":{"type":"suggestion","docs":{"description":"Enforce default parameters to be last","recommended":false,"url":"https://eslint.org/docs/latest/rules/default-param-last"},"schema":[],"messages":{"shouldBeLast":"Default parameters should be last."}},"dot-location":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent newlines before and after dots","recommended":false,"url":"https://eslint.org/docs/latest/rules/dot-location"},"schema":[{"enum":["object","property"]}],"fixable":"code","messages":{"expectedDotAfterObject":"Expected dot to be on same line as object.","expectedDotBeforeProperty":"Expected dot to be on same line as property."}},"dot-notation":{"type":"suggestion","docs":{"description":"Enforce dot notation whenever possible","recommended":false,"url":"https://eslint.org/docs/latest/rules/dot-notation"},"schema":[{"type":"object","properties":{"allowKeywords":{"type":"boolean","default":true},"allowPattern":{"type":"string","default":""}},"additionalProperties":false}],"fixable":"code","messages":{"useDot":"[{{key}}] is better written in dot notation.","useBrackets":".{{key}} is a syntax error."}},"eol-last":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require or disallow newline at the end of files","recommended":false,"url":"https://eslint.org/docs/latest/rules/eol-last"},"fixable":"whitespace","schema":[{"enum":["always","never","unix","windows"]}],"messages":{"missing":"Newline required at end of file but not found.","unexpected":"Newline not allowed at end of file."}},"eqeqeq":{"type":"suggestion","docs":{"description":"Require the use of `===` and `!==`","recommended":false,"url":"https://eslint.org/docs/latest/rules/eqeqeq"},"schema":{"anyOf":[{"type":"array","items":[{"enum":["always"]},{"type":"object","properties":{"null":{"enum":["always","never","ignore"]}},"additionalProperties":false}],"additionalItems":false},{"type":"array","items":[{"enum":["smart","allow-null"]}],"additionalItems":false}]},"fixable":"code","messages":{"unexpected":"Expected '{{expectedOperator}}' and instead saw '{{actualOperator}}'."}},"for-direction":{"type":"problem","docs":{"description":"Enforce \"for\" loop update clause moving the counter in the right direction","recommended":true,"url":"https://eslint.org/docs/latest/rules/for-direction"},"fixable":null,"schema":[],"messages":{"incorrectDirection":"The update clause in this loop moves the variable in the wrong direction."}},"func-call-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require or disallow spacing between function identifiers and their invocations","recommended":false,"url":"https://eslint.org/docs/latest/rules/func-call-spacing"},"fixable":"whitespace","schema":{"anyOf":[{"type":"array","items":[{"enum":["never"]}],"minItems":0,"maxItems":1},{"type":"array","items":[{"enum":["always"]},{"type":"object","properties":{"allowNewlines":{"type":"boolean"}},"additionalProperties":false}],"minItems":0,"maxItems":2}]},"messages":{"unexpectedWhitespace":"Unexpected whitespace between function name and paren.","unexpectedNewline":"Unexpected newline between function name and paren.","missing":"Missing space between function name and paren."}},"func-name-matching":{"type":"suggestion","docs":{"description":"Require function names to match the name of the variable or property to which they are assigned","recommended":false,"url":"https://eslint.org/docs/latest/rules/func-name-matching"},"schema":{"anyOf":[{"type":"array","additionalItems":false,"items":[{"enum":["always","never"]},{"type":"object","properties":{"considerPropertyDescriptor":{"type":"boolean"},"includeCommonJSModuleExports":{"type":"boolean"}},"additionalProperties":false}]},{"type":"array","additionalItems":false,"items":[{"type":"object","properties":{"considerPropertyDescriptor":{"type":"boolean"},"includeCommonJSModuleExports":{"type":"boolean"}},"additionalProperties":false}]}]},"messages":{"matchProperty":"Function name `{{funcName}}` should match property name `{{name}}`.","matchVariable":"Function name `{{funcName}}` should match variable name `{{name}}`.","notMatchProperty":"Function name `{{funcName}}` should not match property name `{{name}}`.","notMatchVariable":"Function name `{{funcName}}` should not match variable name `{{name}}`."}},"func-names":{"type":"suggestion","docs":{"description":"Require or disallow named `function` expressions","recommended":false,"url":"https://eslint.org/docs/latest/rules/func-names"},"schema":{"definitions":{"value":{"enum":["always","as-needed","never"]}},"items":[{"$ref":"#/definitions/value"},{"type":"object","properties":{"generators":{"$ref":"#/definitions/value"}},"additionalProperties":false}]},"messages":{"unnamed":"Unexpected unnamed {{name}}.","named":"Unexpected named {{name}}."}},"func-style":{"type":"suggestion","docs":{"description":"Enforce the consistent use of either `function` declarations or expressions","recommended":false,"url":"https://eslint.org/docs/latest/rules/func-style"},"schema":[{"enum":["declaration","expression"]},{"type":"object","properties":{"allowArrowFunctions":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"expression":"Expected a function expression.","declaration":"Expected a function declaration."}},"function-call-argument-newline":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce line breaks between arguments of a function call","recommended":false,"url":"https://eslint.org/docs/latest/rules/function-call-argument-newline"},"fixable":"whitespace","schema":[{"enum":["always","never","consistent"]}],"messages":{"unexpectedLineBreak":"There should be no line break here.","missingLineBreak":"There should be a line break after this argument."}},"function-paren-newline":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent line breaks inside function parentheses","recommended":false,"url":"https://eslint.org/docs/latest/rules/function-paren-newline"},"fixable":"whitespace","schema":[{"oneOf":[{"enum":["always","never","consistent","multiline","multiline-arguments"]},{"type":"object","properties":{"minItems":{"type":"integer","minimum":0}},"additionalProperties":false}]}],"messages":{"expectedBefore":"Expected newline before ')'.","expectedAfter":"Expected newline after '('.","expectedBetween":"Expected newline between arguments/params.","unexpectedBefore":"Unexpected newline before ')'.","unexpectedAfter":"Unexpected newline after '('."}},"generator-star-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent spacing around `*` operators in generator functions","recommended":false,"url":"https://eslint.org/docs/latest/rules/generator-star-spacing"},"fixable":"whitespace","schema":[{"oneOf":[{"enum":["before","after","both","neither"]},{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"},"named":{"oneOf":[{"enum":["before","after","both","neither"]},{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false}]},"anonymous":{"oneOf":[{"enum":["before","after","both","neither"]},{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false}]},"method":{"oneOf":[{"enum":["before","after","both","neither"]},{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false}]}},"additionalProperties":false}]}],"messages":{"missingBefore":"Missing space before *.","missingAfter":"Missing space after *.","unexpectedBefore":"Unexpected space before *.","unexpectedAfter":"Unexpected space after *."}},"getter-return":{"type":"problem","docs":{"description":"Enforce `return` statements in getters","recommended":true,"url":"https://eslint.org/docs/latest/rules/getter-return"},"fixable":null,"schema":[{"type":"object","properties":{"allowImplicit":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"expected":"Expected to return a value in {{name}}.","expectedAlways":"Expected {{name}} to always return a value."}},"global-require":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Require `require()` calls to be placed at top-level module scope","recommended":false,"url":"https://eslint.org/docs/latest/rules/global-require"},"schema":[],"messages":{"unexpected":"Unexpected require()."}},"grouped-accessor-pairs":{"type":"suggestion","docs":{"description":"Require grouped accessor pairs in object literals and classes","recommended":false,"url":"https://eslint.org/docs/latest/rules/grouped-accessor-pairs"},"schema":[{"enum":["anyOrder","getBeforeSet","setBeforeGet"]}],"messages":{"notGrouped":"Accessor pair {{ formerName }} and {{ latterName }} should be grouped.","invalidOrder":"Expected {{ latterName }} to be before {{ formerName }}."}},"guard-for-in":{"type":"suggestion","docs":{"description":"Require `for-in` loops to include an `if` statement","recommended":false,"url":"https://eslint.org/docs/latest/rules/guard-for-in"},"schema":[],"messages":{"wrap":"The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}},"handle-callback-err":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Require error handling in callbacks","recommended":false,"url":"https://eslint.org/docs/latest/rules/handle-callback-err"},"schema":[{"type":"string"}],"messages":{"expected":"Expected error to be handled."}},"id-blacklist":{"deprecated":true,"replacedBy":["id-denylist"],"type":"suggestion","docs":{"description":"Disallow specified identifiers","recommended":false,"url":"https://eslint.org/docs/latest/rules/id-blacklist"},"schema":{"type":"array","items":{"type":"string"},"uniqueItems":true},"messages":{"restricted":"Identifier '{{name}}' is restricted."}},"id-denylist":{"type":"suggestion","docs":{"description":"Disallow specified identifiers","recommended":false,"url":"https://eslint.org/docs/latest/rules/id-denylist"},"schema":{"type":"array","items":{"type":"string"},"uniqueItems":true},"messages":{"restricted":"Identifier '{{name}}' is restricted.","restrictedPrivate":"Identifier '#{{name}}' is restricted."}},"id-length":{"type":"suggestion","docs":{"description":"Enforce minimum and maximum identifier lengths","recommended":false,"url":"https://eslint.org/docs/latest/rules/id-length"},"schema":[{"type":"object","properties":{"min":{"type":"integer","default":2},"max":{"type":"integer"},"exceptions":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"exceptionPatterns":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"properties":{"enum":["always","never"]}},"additionalProperties":false}],"messages":{"tooShort":"Identifier name '{{name}}' is too short (< {{min}}).","tooShortPrivate":"Identifier name '#{{name}}' is too short (< {{min}}).","tooLong":"Identifier name '{{name}}' is too long (> {{max}}).","tooLongPrivate":"Identifier name #'{{name}}' is too long (> {{max}})."}},"id-match":{"type":"suggestion","docs":{"description":"Require identifiers to match a specified regular expression","recommended":false,"url":"https://eslint.org/docs/latest/rules/id-match"},"schema":[{"type":"string"},{"type":"object","properties":{"properties":{"type":"boolean","default":false},"classFields":{"type":"boolean","default":false},"onlyDeclarations":{"type":"boolean","default":false},"ignoreDestructuring":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"notMatch":"Identifier '{{name}}' does not match the pattern '{{pattern}}'.","notMatchPrivate":"Identifier '#{{name}}' does not match the pattern '{{pattern}}'."}},"implicit-arrow-linebreak":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce the location of arrow function bodies","recommended":false,"url":"https://eslint.org/docs/latest/rules/implicit-arrow-linebreak"},"fixable":"whitespace","schema":[{"enum":["beside","below"]}],"messages":{"expected":"Expected a linebreak before this expression.","unexpected":"Expected no linebreak before this expression."}},"indent":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent indentation","recommended":false,"url":"https://eslint.org/docs/latest/rules/indent"},"fixable":"whitespace","schema":[{"oneOf":[{"enum":["tab"]},{"type":"integer","minimum":0}]},{"type":"object","properties":{"SwitchCase":{"type":"integer","minimum":0,"default":0},"VariableDeclarator":{"oneOf":[{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},{"type":"object","properties":{"var":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},"let":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},"const":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]}},"additionalProperties":false}]},"outerIIFEBody":{"oneOf":[{"type":"integer","minimum":0},{"enum":["off"]}]},"MemberExpression":{"oneOf":[{"type":"integer","minimum":0},{"enum":["off"]}]},"FunctionDeclaration":{"type":"object","properties":{"parameters":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},"body":{"type":"integer","minimum":0}},"additionalProperties":false},"FunctionExpression":{"type":"object","properties":{"parameters":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},"body":{"type":"integer","minimum":0}},"additionalProperties":false},"StaticBlock":{"type":"object","properties":{"body":{"type":"integer","minimum":0}},"additionalProperties":false},"CallExpression":{"type":"object","properties":{"arguments":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]}},"additionalProperties":false},"ArrayExpression":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},"ObjectExpression":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},"ImportDeclaration":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},"flatTernaryExpressions":{"type":"boolean","default":false},"offsetTernaryExpressions":{"type":"boolean","default":false},"ignoredNodes":{"type":"array","items":{"type":"string","not":{"pattern":":exit$"}}},"ignoreComments":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"wrongIndentation":"Expected indentation of {{expected}} but found {{actual}}."}},"indent-legacy":{"type":"layout","docs":{"description":"Enforce consistent indentation","recommended":false,"url":"https://eslint.org/docs/latest/rules/indent-legacy"},"deprecated":true,"replacedBy":["indent"],"fixable":"whitespace","schema":[{"oneOf":[{"enum":["tab"]},{"type":"integer","minimum":0}]},{"type":"object","properties":{"SwitchCase":{"type":"integer","minimum":0},"VariableDeclarator":{"oneOf":[{"type":"integer","minimum":0},{"type":"object","properties":{"var":{"type":"integer","minimum":0},"let":{"type":"integer","minimum":0},"const":{"type":"integer","minimum":0}}}]},"outerIIFEBody":{"type":"integer","minimum":0},"MemberExpression":{"type":"integer","minimum":0},"FunctionDeclaration":{"type":"object","properties":{"parameters":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first"]}]},"body":{"type":"integer","minimum":0}}},"FunctionExpression":{"type":"object","properties":{"parameters":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first"]}]},"body":{"type":"integer","minimum":0}}},"CallExpression":{"type":"object","properties":{"parameters":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first"]}]}}},"ArrayExpression":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first"]}]},"ObjectExpression":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first"]}]}},"additionalProperties":false}],"messages":{"expected":"Expected indentation of {{expected}} but found {{actual}}."}},"init-declarations":{"type":"suggestion","docs":{"description":"Require or disallow initialization in variable declarations","recommended":false,"url":"https://eslint.org/docs/latest/rules/init-declarations"},"schema":{"anyOf":[{"type":"array","items":[{"enum":["always"]}],"minItems":0,"maxItems":1},{"type":"array","items":[{"enum":["never"]},{"type":"object","properties":{"ignoreForLoopInit":{"type":"boolean"}},"additionalProperties":false}],"minItems":0,"maxItems":2}]},"messages":{"initialized":"Variable '{{idName}}' should be initialized on declaration.","notInitialized":"Variable '{{idName}}' should not be initialized on declaration."}},"jsx-quotes":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce the consistent use of either double or single quotes in JSX attributes","recommended":false,"url":"https://eslint.org/docs/latest/rules/jsx-quotes"},"fixable":"whitespace","schema":[{"enum":["prefer-single","prefer-double"]}],"messages":{"unexpected":"Unexpected usage of {{description}}."}},"key-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent spacing between keys and values in object literal properties","recommended":false,"url":"https://eslint.org/docs/latest/rules/key-spacing"},"fixable":"whitespace","schema":[{"anyOf":[{"type":"object","properties":{"align":{"anyOf":[{"enum":["colon","value"]},{"type":"object","properties":{"mode":{"enum":["strict","minimum"]},"on":{"enum":["colon","value"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false}]},"mode":{"enum":["strict","minimum"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false},{"type":"object","properties":{"singleLine":{"type":"object","properties":{"mode":{"enum":["strict","minimum"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false},"multiLine":{"type":"object","properties":{"align":{"anyOf":[{"enum":["colon","value"]},{"type":"object","properties":{"mode":{"enum":["strict","minimum"]},"on":{"enum":["colon","value"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false}]},"mode":{"enum":["strict","minimum"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false}},"additionalProperties":false},{"type":"object","properties":{"singleLine":{"type":"object","properties":{"mode":{"enum":["strict","minimum"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false},"multiLine":{"type":"object","properties":{"mode":{"enum":["strict","minimum"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false},"align":{"type":"object","properties":{"mode":{"enum":["strict","minimum"]},"on":{"enum":["colon","value"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false}},"additionalProperties":false}]}],"messages":{"extraKey":"Extra space after {{computed}}key '{{key}}'.","extraValue":"Extra space before value for {{computed}}key '{{key}}'.","missingKey":"Missing space after {{computed}}key '{{key}}'.","missingValue":"Missing space before value for {{computed}}key '{{key}}'."}},"keyword-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent spacing before and after keywords","recommended":false,"url":"https://eslint.org/docs/latest/rules/keyword-spacing"},"fixable":"whitespace","schema":[{"type":"object","properties":{"before":{"type":"boolean","default":true},"after":{"type":"boolean","default":true},"overrides":{"type":"object","properties":{"abstract":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"as":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"async":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"await":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"boolean":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"break":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"byte":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"case":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"catch":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"char":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"class":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"const":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"continue":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"debugger":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"default":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"delete":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"do":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"double":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"else":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"enum":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"export":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"extends":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"false":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"final":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"finally":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"float":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"for":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"from":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"function":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"get":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"goto":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"if":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"implements":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"import":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"in":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"instanceof":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"int":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"interface":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"let":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"long":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"native":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"new":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"null":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"of":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"package":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"private":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"protected":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"public":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"return":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"set":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"short":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"static":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"super":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"switch":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"synchronized":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"this":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"throw":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"throws":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"transient":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"true":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"try":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"typeof":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"var":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"void":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"volatile":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"while":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"with":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"yield":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false}},"additionalProperties":false}},"additionalProperties":false}],"messages":{"expectedBefore":"Expected space(s) before \"{{value}}\".","expectedAfter":"Expected space(s) after \"{{value}}\".","unexpectedBefore":"Unexpected space(s) before \"{{value}}\".","unexpectedAfter":"Unexpected space(s) after \"{{value}}\"."}},"line-comment-position":{"type":"layout","docs":{"description":"Enforce position of line comments","recommended":false,"url":"https://eslint.org/docs/latest/rules/line-comment-position"},"schema":[{"oneOf":[{"enum":["above","beside"]},{"type":"object","properties":{"position":{"enum":["above","beside"]},"ignorePattern":{"type":"string"},"applyDefaultPatterns":{"type":"boolean"},"applyDefaultIgnorePatterns":{"type":"boolean"}},"additionalProperties":false}]}],"messages":{"above":"Expected comment to be above code.","beside":"Expected comment to be beside code."}},"linebreak-style":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent linebreak style","recommended":false,"url":"https://eslint.org/docs/latest/rules/linebreak-style"},"fixable":"whitespace","schema":[{"enum":["unix","windows"]}],"messages":{"expectedLF":"Expected linebreaks to be 'LF' but found 'CRLF'.","expectedCRLF":"Expected linebreaks to be 'CRLF' but found 'LF'."}},"lines-around-comment":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require empty lines around comments","recommended":false,"url":"https://eslint.org/docs/latest/rules/lines-around-comment"},"fixable":"whitespace","schema":[{"type":"object","properties":{"beforeBlockComment":{"type":"boolean","default":true},"afterBlockComment":{"type":"boolean","default":false},"beforeLineComment":{"type":"boolean","default":false},"afterLineComment":{"type":"boolean","default":false},"allowBlockStart":{"type":"boolean","default":false},"allowBlockEnd":{"type":"boolean","default":false},"allowClassStart":{"type":"boolean"},"allowClassEnd":{"type":"boolean"},"allowObjectStart":{"type":"boolean"},"allowObjectEnd":{"type":"boolean"},"allowArrayStart":{"type":"boolean"},"allowArrayEnd":{"type":"boolean"},"ignorePattern":{"type":"string"},"applyDefaultIgnorePatterns":{"type":"boolean"},"afterHashbangComment":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"after":"Expected line after comment.","before":"Expected line before comment."}},"lines-around-directive":{"type":"layout","docs":{"description":"Require or disallow newlines around directives","recommended":false,"url":"https://eslint.org/docs/latest/rules/lines-around-directive"},"schema":[{"oneOf":[{"enum":["always","never"]},{"type":"object","properties":{"before":{"enum":["always","never"]},"after":{"enum":["always","never"]}},"additionalProperties":false,"minProperties":2}]}],"fixable":"whitespace","messages":{"expected":"Expected newline {{location}} \"{{value}}\" directive.","unexpected":"Unexpected newline {{location}} \"{{value}}\" directive."},"deprecated":true,"replacedBy":["padding-line-between-statements"]},"lines-between-class-members":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require or disallow an empty line between class members","recommended":false,"url":"https://eslint.org/docs/latest/rules/lines-between-class-members"},"fixable":"whitespace","schema":[{"anyOf":[{"type":"object","properties":{"enforce":{"type":"array","items":{"type":"object","properties":{"blankLine":{"enum":["always","never"]},"prev":{"enum":["method","field","*"]},"next":{"enum":["method","field","*"]}},"additionalProperties":false,"required":["blankLine","prev","next"]},"minItems":1}},"additionalProperties":false,"required":["enforce"]},{"enum":["always","never"]}]},{"type":"object","properties":{"exceptAfterSingleLine":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"never":"Unexpected blank line between class members.","always":"Expected blank line between class members."}},"logical-assignment-operators":{"type":"suggestion","docs":{"description":"Require or disallow logical assignment operator shorthand","recommended":false,"url":"https://eslint.org/docs/latest/rules/logical-assignment-operators"},"schema":{"type":"array","oneOf":[{"items":[{"const":"always"},{"type":"object","properties":{"enforceForIfStatements":{"type":"boolean"}},"additionalProperties":false}],"minItems":0,"maxItems":2},{"items":[{"const":"never"}],"minItems":1,"maxItems":1}]},"fixable":"code","hasSuggestions":true,"messages":{"assignment":"Assignment (=) can be replaced with operator assignment ({{operator}}).","useLogicalOperator":"Convert this assignment to use the operator {{ operator }}.","logical":"Logical expression can be replaced with an assignment ({{ operator }}).","convertLogical":"Replace this logical expression with an assignment with the operator {{ operator }}.","if":"'if' statement can be replaced with a logical operator assignment with operator {{ operator }}.","convertIf":"Replace this 'if' statement with a logical assignment with operator {{ operator }}.","unexpected":"Unexpected logical operator assignment ({{operator}}) shorthand.","separate":"Separate the logical assignment into an assignment with a logical operator."}},"max-classes-per-file":{"type":"suggestion","docs":{"description":"Enforce a maximum number of classes per file","recommended":false,"url":"https://eslint.org/docs/latest/rules/max-classes-per-file"},"schema":[{"oneOf":[{"type":"integer","minimum":1},{"type":"object","properties":{"ignoreExpressions":{"type":"boolean"},"max":{"type":"integer","minimum":1}},"additionalProperties":false}]}],"messages":{"maximumExceeded":"File has too many classes ({{ classCount }}). Maximum allowed is {{ max }}."}},"max-depth":{"type":"suggestion","docs":{"description":"Enforce a maximum depth that blocks can be nested","recommended":false,"url":"https://eslint.org/docs/latest/rules/max-depth"},"schema":[{"oneOf":[{"type":"integer","minimum":0},{"type":"object","properties":{"maximum":{"type":"integer","minimum":0},"max":{"type":"integer","minimum":0}},"additionalProperties":false}]}],"messages":{"tooDeeply":"Blocks are nested too deeply ({{depth}}). Maximum allowed is {{maxDepth}}."}},"max-len":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce a maximum line length","recommended":false,"url":"https://eslint.org/docs/latest/rules/max-len"},"schema":[{"anyOf":[{"type":"object","properties":{"code":{"type":"integer","minimum":0},"comments":{"type":"integer","minimum":0},"tabWidth":{"type":"integer","minimum":0},"ignorePattern":{"type":"string"},"ignoreComments":{"type":"boolean"},"ignoreStrings":{"type":"boolean"},"ignoreUrls":{"type":"boolean"},"ignoreTemplateLiterals":{"type":"boolean"},"ignoreRegExpLiterals":{"type":"boolean"},"ignoreTrailingComments":{"type":"boolean"}},"additionalProperties":false},{"type":"integer","minimum":0}]},{"anyOf":[{"type":"object","properties":{"code":{"type":"integer","minimum":0},"comments":{"type":"integer","minimum":0},"tabWidth":{"type":"integer","minimum":0},"ignorePattern":{"type":"string"},"ignoreComments":{"type":"boolean"},"ignoreStrings":{"type":"boolean"},"ignoreUrls":{"type":"boolean"},"ignoreTemplateLiterals":{"type":"boolean"},"ignoreRegExpLiterals":{"type":"boolean"},"ignoreTrailingComments":{"type":"boolean"}},"additionalProperties":false},{"type":"integer","minimum":0}]},{"type":"object","properties":{"code":{"type":"integer","minimum":0},"comments":{"type":"integer","minimum":0},"tabWidth":{"type":"integer","minimum":0},"ignorePattern":{"type":"string"},"ignoreComments":{"type":"boolean"},"ignoreStrings":{"type":"boolean"},"ignoreUrls":{"type":"boolean"},"ignoreTemplateLiterals":{"type":"boolean"},"ignoreRegExpLiterals":{"type":"boolean"},"ignoreTrailingComments":{"type":"boolean"}},"additionalProperties":false}],"messages":{"max":"This line has a length of {{lineLength}}. Maximum allowed is {{maxLength}}.","maxComment":"This line has a comment length of {{lineLength}}. Maximum allowed is {{maxCommentLength}}."}},"max-lines":{"type":"suggestion","docs":{"description":"Enforce a maximum number of lines per file","recommended":false,"url":"https://eslint.org/docs/latest/rules/max-lines"},"schema":[{"oneOf":[{"type":"integer","minimum":0},{"type":"object","properties":{"max":{"type":"integer","minimum":0},"skipComments":{"type":"boolean"},"skipBlankLines":{"type":"boolean"}},"additionalProperties":false}]}],"messages":{"exceed":"File has too many lines ({{actual}}). Maximum allowed is {{max}}."}},"max-lines-per-function":{"type":"suggestion","docs":{"description":"Enforce a maximum number of lines of code in a function","recommended":false,"url":"https://eslint.org/docs/latest/rules/max-lines-per-function"},"schema":[{"oneOf":[{"type":"object","properties":{"max":{"type":"integer","minimum":0},"skipComments":{"type":"boolean"},"skipBlankLines":{"type":"boolean"},"IIFEs":{"type":"boolean"}},"additionalProperties":false},{"type":"integer","minimum":1}]}],"messages":{"exceed":"{{name}} has too many lines ({{lineCount}}). Maximum allowed is {{maxLines}}."}},"max-nested-callbacks":{"type":"suggestion","docs":{"description":"Enforce a maximum depth that callbacks can be nested","recommended":false,"url":"https://eslint.org/docs/latest/rules/max-nested-callbacks"},"schema":[{"oneOf":[{"type":"integer","minimum":0},{"type":"object","properties":{"maximum":{"type":"integer","minimum":0},"max":{"type":"integer","minimum":0}},"additionalProperties":false}]}],"messages":{"exceed":"Too many nested callbacks ({{num}}). Maximum allowed is {{max}}."}},"max-params":{"type":"suggestion","docs":{"description":"Enforce a maximum number of parameters in function definitions","recommended":false,"url":"https://eslint.org/docs/latest/rules/max-params"},"schema":[{"oneOf":[{"type":"integer","minimum":0},{"type":"object","properties":{"maximum":{"type":"integer","minimum":0},"max":{"type":"integer","minimum":0}},"additionalProperties":false}]}],"messages":{"exceed":"{{name}} has too many parameters ({{count}}). Maximum allowed is {{max}}."}},"max-statements":{"type":"suggestion","docs":{"description":"Enforce a maximum number of statements allowed in function blocks","recommended":false,"url":"https://eslint.org/docs/latest/rules/max-statements"},"schema":[{"oneOf":[{"type":"integer","minimum":0},{"type":"object","properties":{"maximum":{"type":"integer","minimum":0},"max":{"type":"integer","minimum":0}},"additionalProperties":false}]},{"type":"object","properties":{"ignoreTopLevelFunctions":{"type":"boolean"}},"additionalProperties":false}],"messages":{"exceed":"{{name}} has too many statements ({{count}}). Maximum allowed is {{max}}."}},"max-statements-per-line":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce a maximum number of statements allowed per line","recommended":false,"url":"https://eslint.org/docs/latest/rules/max-statements-per-line"},"schema":[{"type":"object","properties":{"max":{"type":"integer","minimum":1,"default":1}},"additionalProperties":false}],"messages":{"exceed":"This line has {{numberOfStatementsOnThisLine}} {{statements}}. Maximum allowed is {{maxStatementsPerLine}}."}},"multiline-comment-style":{"type":"suggestion","docs":{"description":"Enforce a particular style for multiline comments","recommended":false,"url":"https://eslint.org/docs/latest/rules/multiline-comment-style"},"fixable":"whitespace","schema":{"anyOf":[{"type":"array","items":[{"enum":["starred-block","bare-block"]}],"additionalItems":false},{"type":"array","items":[{"enum":["separate-lines"]},{"type":"object","properties":{"checkJSDoc":{"type":"boolean"}},"additionalProperties":false}],"additionalItems":false}]},"messages":{"expectedBlock":"Expected a block comment instead of consecutive line comments.","expectedBareBlock":"Expected a block comment without padding stars.","startNewline":"Expected a linebreak after '/*'.","endNewline":"Expected a linebreak before '*/'.","missingStar":"Expected a '*' at the start of this line.","alignment":"Expected this line to be aligned with the start of the comment.","expectedLines":"Expected multiple line comments instead of a block comment."}},"multiline-ternary":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce newlines between operands of ternary expressions","recommended":false,"url":"https://eslint.org/docs/latest/rules/multiline-ternary"},"schema":[{"enum":["always","always-multiline","never"]}],"messages":{"expectedTestCons":"Expected newline between test and consequent of ternary expression.","expectedConsAlt":"Expected newline between consequent and alternate of ternary expression.","unexpectedTestCons":"Unexpected newline between test and consequent of ternary expression.","unexpectedConsAlt":"Unexpected newline between consequent and alternate of ternary expression."},"fixable":"whitespace"},"new-cap":{"type":"suggestion","docs":{"description":"Require constructor names to begin with a capital letter","recommended":false,"url":"https://eslint.org/docs/latest/rules/new-cap"},"schema":[{"type":"object","properties":{"newIsCap":{"type":"boolean","default":true},"capIsNew":{"type":"boolean","default":true},"newIsCapExceptions":{"type":"array","items":{"type":"string"}},"newIsCapExceptionPattern":{"type":"string"},"capIsNewExceptions":{"type":"array","items":{"type":"string"}},"capIsNewExceptionPattern":{"type":"string"},"properties":{"type":"boolean","default":true}},"additionalProperties":false}],"messages":{"upper":"A function with a name starting with an uppercase letter should only be used as a constructor.","lower":"A constructor name should not start with a lowercase letter."}},"new-parens":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce or disallow parentheses when invoking a constructor with no arguments","recommended":false,"url":"https://eslint.org/docs/latest/rules/new-parens"},"fixable":"code","schema":[{"enum":["always","never"]}],"messages":{"missing":"Missing '()' invoking a constructor.","unnecessary":"Unnecessary '()' invoking a constructor with no arguments."}},"newline-after-var":{"type":"layout","docs":{"description":"Require or disallow an empty line after variable declarations","recommended":false,"url":"https://eslint.org/docs/latest/rules/newline-after-var"},"schema":[{"enum":["never","always"]}],"fixable":"whitespace","messages":{"expected":"Expected blank line after variable declarations.","unexpected":"Unexpected blank line after variable declarations."},"deprecated":true,"replacedBy":["padding-line-between-statements"]},"newline-before-return":{"type":"layout","docs":{"description":"Require an empty line before `return` statements","recommended":false,"url":"https://eslint.org/docs/latest/rules/newline-before-return"},"fixable":"whitespace","schema":[],"messages":{"expected":"Expected newline before return statement."},"deprecated":true,"replacedBy":["padding-line-between-statements"]},"newline-per-chained-call":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require a newline after each call in a method chain","recommended":false,"url":"https://eslint.org/docs/latest/rules/newline-per-chained-call"},"fixable":"whitespace","schema":[{"type":"object","properties":{"ignoreChainWithDepth":{"type":"integer","minimum":1,"maximum":10,"default":2}},"additionalProperties":false}],"messages":{"expected":"Expected line break before `{{callee}}`."}},"no-alert":{"type":"suggestion","docs":{"description":"Disallow the use of `alert`, `confirm`, and `prompt`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-alert"},"schema":[],"messages":{"unexpected":"Unexpected {{name}}."}},"no-array-constructor":{"type":"suggestion","docs":{"description":"Disallow `Array` constructors","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-array-constructor"},"hasSuggestions":true,"schema":[],"messages":{"preferLiteral":"The array literal notation [] is preferable.","useLiteral":"Replace with an array literal.","useLiteralAfterSemicolon":"Replace with an array literal, add preceding semicolon."}},"no-async-promise-executor":{"type":"problem","docs":{"description":"Disallow using an async function as a Promise executor","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-async-promise-executor"},"fixable":null,"schema":[],"messages":{"async":"Promise executor functions should not be async."}},"no-await-in-loop":{"type":"problem","docs":{"description":"Disallow `await` inside of loops","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-await-in-loop"},"schema":[],"messages":{"unexpectedAwait":"Unexpected `await` inside a loop."}},"no-bitwise":{"type":"suggestion","docs":{"description":"Disallow bitwise operators","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-bitwise"},"schema":[{"type":"object","properties":{"allow":{"type":"array","items":{"enum":["^","|","&","<<",">>",">>>","^=","|=","&=","<<=",">>=",">>>=","~"]},"uniqueItems":true},"int32Hint":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"unexpected":"Unexpected use of '{{operator}}'."}},"no-buffer-constructor":{"deprecated":true,"replacedBy":[],"type":"problem","docs":{"description":"Disallow use of the `Buffer()` constructor","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-buffer-constructor"},"schema":[],"messages":{"deprecated":"{{expr}} is deprecated. Use Buffer.from(), Buffer.alloc(), or Buffer.allocUnsafe() instead."}},"no-caller":{"type":"suggestion","docs":{"description":"Disallow the use of `arguments.caller` or `arguments.callee`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-caller"},"schema":[],"messages":{"unexpected":"Avoid arguments.{{prop}}."}},"no-case-declarations":{"type":"suggestion","docs":{"description":"Disallow lexical declarations in case clauses","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-case-declarations"},"schema":[],"messages":{"unexpected":"Unexpected lexical declaration in case block."}},"no-catch-shadow":{"type":"suggestion","docs":{"description":"Disallow `catch` clause parameters from shadowing variables in the outer scope","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-catch-shadow"},"replacedBy":["no-shadow"],"deprecated":true,"schema":[],"messages":{"mutable":"Value of '{{name}}' may be overwritten in IE 8 and earlier."}},"no-class-assign":{"type":"problem","docs":{"description":"Disallow reassigning class members","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-class-assign"},"schema":[],"messages":{"class":"'{{name}}' is a class."}},"no-compare-neg-zero":{"type":"problem","docs":{"description":"Disallow comparing against -0","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-compare-neg-zero"},"fixable":null,"schema":[],"messages":{"unexpected":"Do not use the '{{operator}}' operator to compare against -0."}},"no-cond-assign":{"type":"problem","docs":{"description":"Disallow assignment operators in conditional expressions","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-cond-assign"},"schema":[{"enum":["except-parens","always"]}],"messages":{"unexpected":"Unexpected assignment within {{type}}.","missing":"Expected a conditional expression and instead saw an assignment."}},"no-confusing-arrow":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Disallow arrow functions where they could be confused with comparisons","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-confusing-arrow"},"fixable":"code","schema":[{"type":"object","properties":{"allowParens":{"type":"boolean","default":true},"onlyOneSimpleParam":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"confusing":"Arrow function used ambiguously with a conditional expression."}},"no-console":{"type":"suggestion","docs":{"description":"Disallow the use of `console`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-console"},"schema":[{"type":"object","properties":{"allow":{"type":"array","items":{"type":"string"},"minItems":1,"uniqueItems":true}},"additionalProperties":false}],"hasSuggestions":true,"messages":{"unexpected":"Unexpected console statement.","removeConsole":"Remove the console.{{ propertyName }}()."}},"no-const-assign":{"type":"problem","docs":{"description":"Disallow reassigning `const` variables","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-const-assign"},"schema":[],"messages":{"const":"'{{name}}' is constant."}},"no-constant-binary-expression":{"type":"problem","docs":{"description":"Disallow expressions where the operation doesn't affect the value","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-constant-binary-expression"},"schema":[],"messages":{"constantBinaryOperand":"Unexpected constant binary expression. Compares constantly with the {{otherSide}}-hand side of the `{{operator}}`.","constantShortCircuit":"Unexpected constant {{property}} on the left-hand side of a `{{operator}}` expression.","alwaysNew":"Unexpected comparison to newly constructed object. These two values can never be equal.","bothAlwaysNew":"Unexpected comparison of two newly constructed objects. These two values can never be equal."}},"no-constant-condition":{"type":"problem","docs":{"description":"Disallow constant expressions in conditions","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-constant-condition"},"schema":[{"type":"object","properties":{"checkLoops":{"type":"boolean","default":true}},"additionalProperties":false}],"messages":{"unexpected":"Unexpected constant condition."}},"no-constructor-return":{"type":"problem","docs":{"description":"Disallow returning value from constructor","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-constructor-return"},"schema":{},"fixable":null,"messages":{"unexpected":"Unexpected return statement in constructor."}},"no-continue":{"type":"suggestion","docs":{"description":"Disallow `continue` statements","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-continue"},"schema":[],"messages":{"unexpected":"Unexpected use of continue statement."}},"no-control-regex":{"type":"problem","docs":{"description":"Disallow control characters in regular expressions","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-control-regex"},"schema":[],"messages":{"unexpected":"Unexpected control character(s) in regular expression: {{controlChars}}."}},"no-debugger":{"type":"problem","docs":{"description":"Disallow the use of `debugger`","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-debugger"},"fixable":null,"schema":[],"messages":{"unexpected":"Unexpected 'debugger' statement."}},"no-delete-var":{"type":"suggestion","docs":{"description":"Disallow deleting variables","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-delete-var"},"schema":[],"messages":{"unexpected":"Variables should not be deleted."}},"no-div-regex":{"type":"suggestion","docs":{"description":"Disallow equal signs explicitly at the beginning of regular expressions","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-div-regex"},"fixable":"code","schema":[],"messages":{"unexpected":"A regular expression literal can be confused with '/='."}},"no-dupe-args":{"type":"problem","docs":{"description":"Disallow duplicate arguments in `function` definitions","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-dupe-args"},"schema":[],"messages":{"unexpected":"Duplicate param '{{name}}'."}},"no-dupe-class-members":{"type":"problem","docs":{"description":"Disallow duplicate class members","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-dupe-class-members"},"schema":[],"messages":{"unexpected":"Duplicate name '{{name}}'."}},"no-dupe-else-if":{"type":"problem","docs":{"description":"Disallow duplicate conditions in if-else-if chains","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-dupe-else-if"},"schema":[],"messages":{"unexpected":"This branch can never execute. Its condition is a duplicate or covered by previous conditions in the if-else-if chain."}},"no-dupe-keys":{"type":"problem","docs":{"description":"Disallow duplicate keys in object literals","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-dupe-keys"},"schema":[],"messages":{"unexpected":"Duplicate key '{{name}}'."}},"no-duplicate-case":{"type":"problem","docs":{"description":"Disallow duplicate case labels","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-duplicate-case"},"schema":[],"messages":{"unexpected":"Duplicate case label."}},"no-duplicate-imports":{"type":"problem","docs":{"description":"Disallow duplicate module imports","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-duplicate-imports"},"schema":[{"type":"object","properties":{"includeExports":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"import":"'{{module}}' import is duplicated.","importAs":"'{{module}}' import is duplicated as export.","export":"'{{module}}' export is duplicated.","exportAs":"'{{module}}' export is duplicated as import."}},"no-else-return":{"type":"suggestion","docs":{"description":"Disallow `else` blocks after `return` statements in `if` statements","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-else-return"},"schema":[{"type":"object","properties":{"allowElseIf":{"type":"boolean","default":true}},"additionalProperties":false}],"fixable":"code","messages":{"unexpected":"Unnecessary 'else' after 'return'."}},"no-empty":{"hasSuggestions":true,"type":"suggestion","docs":{"description":"Disallow empty block statements","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-empty"},"schema":[{"type":"object","properties":{"allowEmptyCatch":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"unexpected":"Empty {{type}} statement.","suggestComment":"Add comment inside empty {{type}} statement."}},"no-empty-character-class":{"type":"problem","docs":{"description":"Disallow empty character classes in regular expressions","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-empty-character-class"},"schema":[],"messages":{"unexpected":"Empty class."}},"no-empty-function":{"type":"suggestion","docs":{"description":"Disallow empty functions","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-empty-function"},"schema":[{"type":"object","properties":{"allow":{"type":"array","items":{"enum":["functions","arrowFunctions","generatorFunctions","methods","generatorMethods","getters","setters","constructors","asyncFunctions","asyncMethods"]},"uniqueItems":true}},"additionalProperties":false}],"messages":{"unexpected":"Unexpected empty {{name}}."}},"no-empty-pattern":{"type":"problem","docs":{"description":"Disallow empty destructuring patterns","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-empty-pattern"},"schema":[{"type":"object","properties":{"allowObjectPatternsAsParameters":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"unexpected":"Unexpected empty {{type}} pattern."}},"no-empty-static-block":{"type":"suggestion","docs":{"description":"Disallow empty static blocks","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-empty-static-block"},"schema":[],"messages":{"unexpected":"Unexpected empty static block."}},"no-eq-null":{"type":"suggestion","docs":{"description":"Disallow `null` comparisons without type-checking operators","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-eq-null"},"schema":[],"messages":{"unexpected":"Use '===' to compare with null."}},"no-eval":{"type":"suggestion","docs":{"description":"Disallow the use of `eval()`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-eval"},"schema":[{"type":"object","properties":{"allowIndirect":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"unexpected":"eval can be harmful."}},"no-ex-assign":{"type":"problem","docs":{"description":"Disallow reassigning exceptions in `catch` clauses","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-ex-assign"},"schema":[],"messages":{"unexpected":"Do not assign to the exception parameter."}},"no-extend-native":{"type":"suggestion","docs":{"description":"Disallow extending native types","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-extend-native"},"schema":[{"type":"object","properties":{"exceptions":{"type":"array","items":{"type":"string"},"uniqueItems":true}},"additionalProperties":false}],"messages":{"unexpected":"{{builtin}} prototype is read only, properties should not be added."}},"no-extra-bind":{"type":"suggestion","docs":{"description":"Disallow unnecessary calls to `.bind()`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-extra-bind"},"schema":[],"fixable":"code","messages":{"unexpected":"The function binding is unnecessary."}},"no-extra-boolean-cast":{"type":"suggestion","docs":{"description":"Disallow unnecessary boolean casts","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-extra-boolean-cast"},"schema":[{"type":"object","properties":{"enforceForLogicalOperands":{"type":"boolean","default":false}},"additionalProperties":false}],"fixable":"code","messages":{"unexpectedCall":"Redundant Boolean call.","unexpectedNegation":"Redundant double negation."}},"no-extra-label":{"type":"suggestion","docs":{"description":"Disallow unnecessary labels","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-extra-label"},"schema":[],"fixable":"code","messages":{"unexpected":"This label '{{name}}' is unnecessary."}},"no-extra-parens":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Disallow unnecessary parentheses","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-extra-parens"},"fixable":"code","schema":{"anyOf":[{"type":"array","items":[{"enum":["functions"]}],"minItems":0,"maxItems":1},{"type":"array","items":[{"enum":["all"]},{"type":"object","properties":{"conditionalAssign":{"type":"boolean"},"ternaryOperandBinaryExpressions":{"type":"boolean"},"nestedBinaryExpressions":{"type":"boolean"},"returnAssign":{"type":"boolean"},"ignoreJSX":{"enum":["none","all","single-line","multi-line"]},"enforceForArrowConditionals":{"type":"boolean"},"enforceForSequenceExpressions":{"type":"boolean"},"enforceForNewInMemberExpressions":{"type":"boolean"},"enforceForFunctionPrototypeMethods":{"type":"boolean"},"allowParensAfterCommentPattern":{"type":"string"}},"additionalProperties":false}],"minItems":0,"maxItems":2}]},"messages":{"unexpected":"Unnecessary parentheses around expression."}},"no-extra-semi":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Disallow unnecessary semicolons","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-extra-semi"},"fixable":"code","schema":[],"messages":{"unexpected":"Unnecessary semicolon."}},"no-fallthrough":{"type":"problem","docs":{"description":"Disallow fallthrough of `case` statements","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-fallthrough"},"schema":[{"type":"object","properties":{"commentPattern":{"type":"string","default":""},"allowEmptyCase":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"case":"Expected a 'break' statement before 'case'.","default":"Expected a 'break' statement before 'default'."}},"no-floating-decimal":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Disallow leading or trailing decimal points in numeric literals","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-floating-decimal"},"schema":[],"fixable":"code","messages":{"leading":"A leading decimal point can be confused with a dot.","trailing":"A trailing decimal point can be confused with a dot."}},"no-func-assign":{"type":"problem","docs":{"description":"Disallow reassigning `function` declarations","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-func-assign"},"schema":[],"messages":{"isAFunction":"'{{name}}' is a function."}},"no-global-assign":{"type":"suggestion","docs":{"description":"Disallow assignments to native objects or read-only global variables","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-global-assign"},"schema":[{"type":"object","properties":{"exceptions":{"type":"array","items":{"type":"string"},"uniqueItems":true}},"additionalProperties":false}],"messages":{"globalShouldNotBeModified":"Read-only global '{{name}}' should not be modified."}},"no-implicit-coercion":{"type":"suggestion","docs":{"description":"Disallow shorthand type conversions","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-implicit-coercion"},"fixable":"code","schema":[{"type":"object","properties":{"boolean":{"type":"boolean","default":true},"number":{"type":"boolean","default":true},"string":{"type":"boolean","default":true},"disallowTemplateShorthand":{"type":"boolean","default":false},"allow":{"type":"array","items":{"enum":["~","!!","+","*"]},"uniqueItems":true}},"additionalProperties":false}],"messages":{"useRecommendation":"use `{{recommendation}}` instead."}},"no-implicit-globals":{"type":"suggestion","docs":{"description":"Disallow declarations in the global scope","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-implicit-globals"},"schema":[{"type":"object","properties":{"lexicalBindings":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"globalNonLexicalBinding":"Unexpected {{kind}} declaration in the global scope, wrap in an IIFE for a local variable, assign as global property for a global variable.","globalLexicalBinding":"Unexpected {{kind}} declaration in the global scope, wrap in a block or in an IIFE.","globalVariableLeak":"Global variable leak, declare the variable if it is intended to be local.","assignmentToReadonlyGlobal":"Unexpected assignment to read-only global variable.","redeclarationOfReadonlyGlobal":"Unexpected redeclaration of read-only global variable."}},"no-implied-eval":{"type":"suggestion","docs":{"description":"Disallow the use of `eval()`-like methods","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-implied-eval"},"schema":[],"messages":{"impliedEval":"Implied eval. Consider passing a function instead of a string."}},"no-import-assign":{"type":"problem","docs":{"description":"Disallow assigning to imported bindings","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-import-assign"},"schema":[],"messages":{"readonly":"'{{name}}' is read-only.","readonlyMember":"The members of '{{name}}' are read-only."}},"no-inline-comments":{"type":"suggestion","docs":{"description":"Disallow inline comments after code","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-inline-comments"},"schema":[{"type":"object","properties":{"ignorePattern":{"type":"string"}},"additionalProperties":false}],"messages":{"unexpectedInlineComment":"Unexpected comment inline with code."}},"no-inner-declarations":{"type":"problem","docs":{"description":"Disallow variable or `function` declarations in nested blocks","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-inner-declarations"},"schema":[{"enum":["functions","both"]}],"messages":{"moveDeclToRoot":"Move {{type}} declaration to {{body}} root."}},"no-invalid-regexp":{"type":"problem","docs":{"description":"Disallow invalid regular expression strings in `RegExp` constructors","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-invalid-regexp"},"schema":[{"type":"object","properties":{"allowConstructorFlags":{"type":"array","items":{"type":"string"}}},"additionalProperties":false}],"messages":{"regexMessage":"{{message}}."}},"no-invalid-this":{"type":"suggestion","docs":{"description":"Disallow use of `this` in contexts where the value of `this` is `undefined`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-invalid-this"},"schema":[{"type":"object","properties":{"capIsConstructor":{"type":"boolean","default":true}},"additionalProperties":false}],"messages":{"unexpectedThis":"Unexpected 'this'."}},"no-irregular-whitespace":{"type":"problem","docs":{"description":"Disallow irregular whitespace","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-irregular-whitespace"},"schema":[{"type":"object","properties":{"skipComments":{"type":"boolean","default":false},"skipStrings":{"type":"boolean","default":true},"skipTemplates":{"type":"boolean","default":false},"skipRegExps":{"type":"boolean","default":false},"skipJSXText":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"noIrregularWhitespace":"Irregular whitespace not allowed."}},"no-iterator":{"type":"suggestion","docs":{"description":"Disallow the use of the `__iterator__` property","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-iterator"},"schema":[],"messages":{"noIterator":"Reserved name '__iterator__'."}},"no-label-var":{"type":"suggestion","docs":{"description":"Disallow labels that share a name with a variable","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-label-var"},"schema":[],"messages":{"identifierClashWithLabel":"Found identifier with same name as label."}},"no-labels":{"type":"suggestion","docs":{"description":"Disallow labeled statements","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-labels"},"schema":[{"type":"object","properties":{"allowLoop":{"type":"boolean","default":false},"allowSwitch":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"unexpectedLabel":"Unexpected labeled statement.","unexpectedLabelInBreak":"Unexpected label in break statement.","unexpectedLabelInContinue":"Unexpected label in continue statement."}},"no-lone-blocks":{"type":"suggestion","docs":{"description":"Disallow unnecessary nested blocks","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-lone-blocks"},"schema":[],"messages":{"redundantBlock":"Block is redundant.","redundantNestedBlock":"Nested block is redundant."}},"no-lonely-if":{"type":"suggestion","docs":{"description":"Disallow `if` statements as the only statement in `else` blocks","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-lonely-if"},"schema":[],"fixable":"code","messages":{"unexpectedLonelyIf":"Unexpected if as the only statement in an else block."}},"no-loop-func":{"type":"suggestion","docs":{"description":"Disallow function declarations that contain unsafe references inside loop statements","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-loop-func"},"schema":[],"messages":{"unsafeRefs":"Function declared in a loop contains unsafe references to variable(s) {{ varNames }}."}},"no-loss-of-precision":{"type":"problem","docs":{"description":"Disallow literal numbers that lose precision","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-loss-of-precision"},"schema":[],"messages":{"noLossOfPrecision":"This number literal will lose precision at runtime."}},"no-magic-numbers":{"type":"suggestion","docs":{"description":"Disallow magic numbers","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-magic-numbers"},"schema":[{"type":"object","properties":{"detectObjects":{"type":"boolean","default":false},"enforceConst":{"type":"boolean","default":false},"ignore":{"type":"array","items":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^[+-]?(?:0|[1-9][0-9]*)n$"}]},"uniqueItems":true},"ignoreArrayIndexes":{"type":"boolean","default":false},"ignoreDefaultValues":{"type":"boolean","default":false},"ignoreClassFieldInitialValues":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"useConst":"Number constants declarations must use 'const'.","noMagic":"No magic number: {{raw}}."}},"no-misleading-character-class":{"type":"problem","docs":{"description":"Disallow characters which are made with multiple code points in character class syntax","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-misleading-character-class"},"hasSuggestions":true,"schema":[],"messages":{"surrogatePairWithoutUFlag":"Unexpected surrogate pair in character class. Use 'u' flag.","surrogatePair":"Unexpected surrogate pair in character class.","combiningClass":"Unexpected combined character in character class.","emojiModifier":"Unexpected modified Emoji in character class.","regionalIndicatorSymbol":"Unexpected national flag in character class.","zwj":"Unexpected joined character sequence in character class.","suggestUnicodeFlag":"Add unicode 'u' flag to regex."}},"no-mixed-operators":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Disallow mixed binary operators","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-mixed-operators"},"schema":[{"type":"object","properties":{"groups":{"type":"array","items":{"type":"array","items":{"enum":["+","-","*","/","%","**","&","|","^","~","<<",">>",">>>","==","!=","===","!==",">",">=","<","<=","&&","||","in","instanceof","?:","??"]},"minItems":2,"uniqueItems":true},"uniqueItems":true},"allowSamePrecedence":{"type":"boolean","default":true}},"additionalProperties":false}],"messages":{"unexpectedMixedOperator":"Unexpected mix of '{{leftOperator}}' and '{{rightOperator}}'. Use parentheses to clarify the intended order of operations."}},"no-mixed-requires":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Disallow `require` calls to be mixed with regular variable declarations","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-mixed-requires"},"schema":[{"oneOf":[{"type":"boolean"},{"type":"object","properties":{"grouping":{"type":"boolean"},"allowCall":{"type":"boolean"}},"additionalProperties":false}]}],"messages":{"noMixRequire":"Do not mix 'require' and other declarations.","noMixCoreModuleFileComputed":"Do not mix core, module, file and computed requires."}},"no-mixed-spaces-and-tabs":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Disallow mixed spaces and tabs for indentation","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-mixed-spaces-and-tabs"},"schema":[{"enum":["smart-tabs",true,false]}],"messages":{"mixedSpacesAndTabs":"Mixed spaces and tabs."}},"no-multi-assign":{"type":"suggestion","docs":{"description":"Disallow use of chained assignment expressions","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-multi-assign"},"schema":[{"type":"object","properties":{"ignoreNonDeclaration":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"unexpectedChain":"Unexpected chained assignment."}},"no-multi-spaces":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Disallow multiple spaces","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-multi-spaces"},"fixable":"whitespace","schema":[{"type":"object","properties":{"exceptions":{"type":"object","patternProperties":{"^([A-Z][a-z]*)+$":{"type":"boolean"}},"additionalProperties":false},"ignoreEOLComments":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"multipleSpaces":"Multiple spaces found before '{{displayValue}}'."}},"no-multi-str":{"type":"suggestion","docs":{"description":"Disallow multiline strings","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-multi-str"},"schema":[],"messages":{"multilineString":"Multiline support is limited to browsers supporting ES5 only."}},"no-multiple-empty-lines":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Disallow multiple empty lines","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-multiple-empty-lines"},"fixable":"whitespace","schema":[{"type":"object","properties":{"max":{"type":"integer","minimum":0},"maxEOF":{"type":"integer","minimum":0},"maxBOF":{"type":"integer","minimum":0}},"required":["max"],"additionalProperties":false}],"messages":{"blankBeginningOfFile":"Too many blank lines at the beginning of file. Max of {{max}} allowed.","blankEndOfFile":"Too many blank lines at the end of file. Max of {{max}} allowed.","consecutiveBlank":"More than {{max}} blank {{pluralizedLines}} not allowed."}},"no-native-reassign":{"type":"suggestion","docs":{"description":"Disallow assignments to native objects or read-only global variables","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-native-reassign"},"deprecated":true,"replacedBy":["no-global-assign"],"schema":[{"type":"object","properties":{"exceptions":{"type":"array","items":{"type":"string"},"uniqueItems":true}},"additionalProperties":false}],"messages":{"nativeReassign":"Read-only global '{{name}}' should not be modified."}},"no-negated-condition":{"type":"suggestion","docs":{"description":"Disallow negated conditions","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-negated-condition"},"schema":[],"messages":{"unexpectedNegated":"Unexpected negated condition."}},"no-negated-in-lhs":{"type":"problem","docs":{"description":"Disallow negating the left operand in `in` expressions","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-negated-in-lhs"},"replacedBy":["no-unsafe-negation"],"deprecated":true,"schema":[],"messages":{"negatedLHS":"The 'in' expression's left operand is negated."}},"no-nested-ternary":{"type":"suggestion","docs":{"description":"Disallow nested ternary expressions","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-nested-ternary"},"schema":[],"messages":{"noNestedTernary":"Do not nest ternary expressions."}},"no-new":{"type":"suggestion","docs":{"description":"Disallow `new` operators outside of assignments or comparisons","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-new"},"schema":[],"messages":{"noNewStatement":"Do not use 'new' for side effects."}},"no-new-func":{"type":"suggestion","docs":{"description":"Disallow `new` operators with the `Function` object","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-new-func"},"schema":[],"messages":{"noFunctionConstructor":"The Function constructor is eval."}},"no-new-native-nonconstructor":{"type":"problem","docs":{"description":"Disallow `new` operators with global non-constructor functions","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"},"schema":[],"messages":{"noNewNonconstructor":"`{{name}}` cannot be called as a constructor."}},"no-new-object":{"type":"suggestion","docs":{"description":"Disallow `Object` constructors","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-new-object"},"deprecated":true,"replacedBy":["no-object-constructor"],"schema":[],"messages":{"preferLiteral":"The object literal notation {} is preferable."}},"no-new-require":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Disallow `new` operators with calls to `require`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-new-require"},"schema":[],"messages":{"noNewRequire":"Unexpected use of new with require."}},"no-new-symbol":{"type":"problem","docs":{"description":"Disallow `new` operators with the `Symbol` object","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-new-symbol"},"schema":[],"messages":{"noNewSymbol":"`Symbol` cannot be called as a constructor."}},"no-new-wrappers":{"type":"suggestion","docs":{"description":"Disallow `new` operators with the `String`, `Number`, and `Boolean` objects","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-new-wrappers"},"schema":[],"messages":{"noConstructor":"Do not use {{fn}} as a constructor."}},"no-nonoctal-decimal-escape":{"type":"suggestion","docs":{"description":"Disallow `\\8` and `\\9` escape sequences in string literals","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-nonoctal-decimal-escape"},"hasSuggestions":true,"schema":[],"messages":{"decimalEscape":"Don't use '{{decimalEscape}}' escape sequence.","refactor":"Replace '{{original}}' with '{{replacement}}'. This maintains the current functionality.","escapeBackslash":"Replace '{{original}}' with '{{replacement}}' to include the actual backslash character."}},"no-obj-calls":{"type":"problem","docs":{"description":"Disallow calling global object properties as functions","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-obj-calls"},"schema":[],"messages":{"unexpectedCall":"'{{name}}' is not a function.","unexpectedRefCall":"'{{name}}' is reference to '{{ref}}', which is not a function."}},"no-object-constructor":{"type":"suggestion","docs":{"description":"Disallow calls to the `Object` constructor without an argument","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-object-constructor"},"hasSuggestions":true,"schema":[],"messages":{"preferLiteral":"The object literal notation {} is preferable.","useLiteral":"Replace with '{{replacement}}'.","useLiteralAfterSemicolon":"Replace with '{{replacement}}', add preceding semicolon."}},"no-octal":{"type":"suggestion","docs":{"description":"Disallow octal literals","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-octal"},"schema":[],"messages":{"noOctal":"Octal literals should not be used."}},"no-octal-escape":{"type":"suggestion","docs":{"description":"Disallow octal escape sequences in string literals","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-octal-escape"},"schema":[],"messages":{"octalEscapeSequence":"Don't use octal: '\\{{sequence}}'. Use '\\u....' instead."}},"no-param-reassign":{"type":"suggestion","docs":{"description":"Disallow reassigning `function` parameters","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-param-reassign"},"schema":[{"oneOf":[{"type":"object","properties":{"props":{"enum":[false]}},"additionalProperties":false},{"type":"object","properties":{"props":{"enum":[true]},"ignorePropertyModificationsFor":{"type":"array","items":{"type":"string"},"uniqueItems":true},"ignorePropertyModificationsForRegex":{"type":"array","items":{"type":"string"},"uniqueItems":true}},"additionalProperties":false}]}],"messages":{"assignmentToFunctionParam":"Assignment to function parameter '{{name}}'.","assignmentToFunctionParamProp":"Assignment to property of function parameter '{{name}}'."}},"no-path-concat":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Disallow string concatenation with `__dirname` and `__filename`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-path-concat"},"schema":[],"messages":{"usePathFunctions":"Use path.join() or path.resolve() instead of + to create paths."}},"no-plusplus":{"type":"suggestion","docs":{"description":"Disallow the unary operators `++` and `--`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-plusplus"},"schema":[{"type":"object","properties":{"allowForLoopAfterthoughts":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"unexpectedUnaryOp":"Unary operator '{{operator}}' used."}},"no-process-env":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Disallow the use of `process.env`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-process-env"},"schema":[],"messages":{"unexpectedProcessEnv":"Unexpected use of process.env."}},"no-process-exit":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Disallow the use of `process.exit()`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-process-exit"},"schema":[],"messages":{"noProcessExit":"Don't use process.exit(); throw an error instead."}},"no-promise-executor-return":{"type":"problem","docs":{"description":"Disallow returning values from Promise executor functions","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-promise-executor-return"},"hasSuggestions":true,"schema":[{"type":"object","properties":{"allowVoid":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"returnsValue":"Return values from promise executor functions cannot be read.","prependVoid":"Prepend `void` to the expression.","wrapBraces":"Wrap the expression in `{}`."}},"no-proto":{"type":"suggestion","docs":{"description":"Disallow the use of the `__proto__` property","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-proto"},"schema":[],"messages":{"unexpectedProto":"The '__proto__' property is deprecated."}},"no-prototype-builtins":{"type":"problem","docs":{"description":"Disallow calling some `Object.prototype` methods directly on objects","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-prototype-builtins"},"hasSuggestions":true,"schema":[],"messages":{"prototypeBuildIn":"Do not access Object.prototype method '{{prop}}' from target object.","callObjectPrototype":"Call Object.prototype.{{prop}} explicitly."}},"no-redeclare":{"type":"suggestion","docs":{"description":"Disallow variable redeclaration","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-redeclare"},"messages":{"redeclared":"'{{id}}' is already defined.","redeclaredAsBuiltin":"'{{id}}' is already defined as a built-in global variable.","redeclaredBySyntax":"'{{id}}' is already defined by a variable declaration."},"schema":[{"type":"object","properties":{"builtinGlobals":{"type":"boolean","default":true}},"additionalProperties":false}]},"no-regex-spaces":{"type":"suggestion","docs":{"description":"Disallow multiple spaces in regular expressions","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-regex-spaces"},"schema":[],"fixable":"code","messages":{"multipleSpaces":"Spaces are hard to count. Use {{{length}}}."}},"no-restricted-exports":{"type":"suggestion","docs":{"description":"Disallow specified names in exports","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-restricted-exports"},"schema":[{"anyOf":[{"type":"object","properties":{"restrictedNamedExports":{"type":"array","items":{"type":"string"},"uniqueItems":true}},"additionalProperties":false},{"type":"object","properties":{"restrictedNamedExports":{"type":"array","items":{"type":"string","pattern":"^(?!default$)"},"uniqueItems":true},"restrictDefaultExports":{"type":"object","properties":{"direct":{"type":"boolean"},"named":{"type":"boolean"},"defaultFrom":{"type":"boolean"},"namedFrom":{"type":"boolean"},"namespaceFrom":{"type":"boolean"}},"additionalProperties":false}},"additionalProperties":false}]}],"messages":{"restrictedNamed":"'{{name}}' is restricted from being used as an exported name.","restrictedDefault":"Exporting 'default' is restricted."}},"no-restricted-globals":{"type":"suggestion","docs":{"description":"Disallow specified global variables","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-restricted-globals"},"schema":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"name":{"type":"string"},"message":{"type":"string"}},"required":["name"],"additionalProperties":false}]},"uniqueItems":true,"minItems":0},"messages":{"defaultMessage":"Unexpected use of '{{name}}'.","customMessage":"Unexpected use of '{{name}}'. {{customMessage}}"}},"no-restricted-imports":{"type":"suggestion","docs":{"description":"Disallow specified modules when loaded by `import`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-restricted-imports"},"messages":{"path":"'{{importSource}}' import is restricted from being used.","pathWithCustomMessage":"'{{importSource}}' import is restricted from being used. {{customMessage}}","patterns":"'{{importSource}}' import is restricted from being used by a pattern.","patternWithCustomMessage":"'{{importSource}}' import is restricted from being used by a pattern. {{customMessage}}","patternAndImportName":"'{{importName}}' import from '{{importSource}}' is restricted from being used by a pattern.","patternAndImportNameWithCustomMessage":"'{{importName}}' import from '{{importSource}}' is restricted from being used by a pattern. {{customMessage}}","patternAndEverything":"* import is invalid because '{{importNames}}' from '{{importSource}}' is restricted from being used by a pattern.","patternAndEverythingWithRegexImportName":"* import is invalid because import name matching '{{importNames}}' pattern from '{{importSource}}' is restricted from being used.","patternAndEverythingWithCustomMessage":"* import is invalid because '{{importNames}}' from '{{importSource}}' is restricted from being used by a pattern. {{customMessage}}","patternAndEverythingWithRegexImportNameAndCustomMessage":"* import is invalid because import name matching '{{importNames}}' pattern from '{{importSource}}' is restricted from being used. {{customMessage}}","everything":"* import is invalid because '{{importNames}}' from '{{importSource}}' is restricted.","everythingWithCustomMessage":"* import is invalid because '{{importNames}}' from '{{importSource}}' is restricted. {{customMessage}}","importName":"'{{importName}}' import from '{{importSource}}' is restricted.","importNameWithCustomMessage":"'{{importName}}' import from '{{importSource}}' is restricted. {{customMessage}}"},"schema":{"anyOf":[{"type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"name":{"type":"string"},"message":{"type":"string","minLength":1},"importNames":{"type":"array","items":{"type":"string"}}},"additionalProperties":false,"required":["name"]}]},"uniqueItems":true},{"type":"array","items":[{"type":"object","properties":{"paths":{"type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"name":{"type":"string"},"message":{"type":"string","minLength":1},"importNames":{"type":"array","items":{"type":"string"}}},"additionalProperties":false,"required":["name"]}]},"uniqueItems":true},"patterns":{"anyOf":[{"type":"array","items":{"type":"string"},"uniqueItems":true},{"type":"array","items":{"type":"object","properties":{"importNames":{"type":"array","items":{"type":"string"},"minItems":1,"uniqueItems":true},"group":{"type":"array","items":{"type":"string"},"minItems":1,"uniqueItems":true},"importNamePattern":{"type":"string"},"message":{"type":"string","minLength":1},"caseSensitive":{"type":"boolean"}},"additionalProperties":false,"required":["group"]},"uniqueItems":true}]}},"additionalProperties":false}],"additionalItems":false}]}},"no-restricted-modules":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Disallow specified modules when loaded by `require`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-restricted-modules"},"schema":{"anyOf":[{"type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"name":{"type":"string"},"message":{"type":"string","minLength":1}},"additionalProperties":false,"required":["name"]}]},"uniqueItems":true},{"type":"array","items":{"type":"object","properties":{"paths":{"type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"name":{"type":"string"},"message":{"type":"string","minLength":1}},"additionalProperties":false,"required":["name"]}]},"uniqueItems":true},"patterns":{"type":"array","items":{"type":"string"},"uniqueItems":true}},"additionalProperties":false},"additionalItems":false}]},"messages":{"defaultMessage":"'{{name}}' module is restricted from being used.","customMessage":"'{{name}}' module is restricted from being used. {{customMessage}}","patternMessage":"'{{name}}' module is restricted from being used by a pattern."}},"no-restricted-properties":{"type":"suggestion","docs":{"description":"Disallow certain properties on certain objects","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-restricted-properties"},"schema":{"type":"array","items":{"anyOf":[{"type":"object","properties":{"object":{"type":"string"},"property":{"type":"string"},"message":{"type":"string"}},"additionalProperties":false,"required":["object"]},{"type":"object","properties":{"object":{"type":"string"},"property":{"type":"string"},"message":{"type":"string"}},"additionalProperties":false,"required":["property"]}]},"uniqueItems":true},"messages":{"restrictedObjectProperty":"'{{objectName}}.{{propertyName}}' is restricted from being used.{{message}}","restrictedProperty":"'{{propertyName}}' is restricted from being used.{{message}}"}},"no-restricted-syntax":{"type":"suggestion","docs":{"description":"Disallow specified syntax","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-restricted-syntax"},"schema":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"selector":{"type":"string"},"message":{"type":"string"}},"required":["selector"],"additionalProperties":false}]},"uniqueItems":true,"minItems":0},"messages":{"restrictedSyntax":"{{message}}"}},"no-return-assign":{"type":"suggestion","docs":{"description":"Disallow assignment operators in `return` statements","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-return-assign"},"schema":[{"enum":["except-parens","always"]}],"messages":{"returnAssignment":"Return statement should not contain assignment.","arrowAssignment":"Arrow function should not return assignment."}},"no-return-await":{"hasSuggestions":true,"type":"suggestion","docs":{"description":"Disallow unnecessary `return await`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-return-await"},"fixable":null,"deprecated":true,"replacedBy":[],"schema":[],"messages":{"removeAwait":"Remove redundant `await`.","redundantUseOfAwait":"Redundant use of `await` on a return value."}},"no-script-url":{"type":"suggestion","docs":{"description":"Disallow `javascript:` urls","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-script-url"},"schema":[],"messages":{"unexpectedScriptURL":"Script URL is a form of eval."}},"no-self-assign":{"type":"problem","docs":{"description":"Disallow assignments where both sides are exactly the same","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-self-assign"},"schema":[{"type":"object","properties":{"props":{"type":"boolean","default":true}},"additionalProperties":false}],"messages":{"selfAssignment":"'{{name}}' is assigned to itself."}},"no-self-compare":{"type":"problem","docs":{"description":"Disallow comparisons where both sides are exactly the same","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-self-compare"},"schema":[],"messages":{"comparingToSelf":"Comparing to itself is potentially pointless."}},"no-sequences":{"type":"suggestion","docs":{"description":"Disallow comma operators","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-sequences"},"schema":[{"properties":{"allowInParentheses":{"type":"boolean","default":true}},"additionalProperties":false}],"messages":{"unexpectedCommaExpression":"Unexpected use of comma operator."}},"no-setter-return":{"type":"problem","docs":{"description":"Disallow returning values from setters","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-setter-return"},"schema":[],"messages":{"returnsValue":"Setter cannot return a value."}},"no-shadow":{"type":"suggestion","docs":{"description":"Disallow variable declarations from shadowing variables declared in the outer scope","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-shadow"},"schema":[{"type":"object","properties":{"builtinGlobals":{"type":"boolean","default":false},"hoist":{"enum":["all","functions","never"],"default":"functions"},"allow":{"type":"array","items":{"type":"string"}},"ignoreOnInitialization":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"noShadow":"'{{name}}' is already declared in the upper scope on line {{shadowedLine}} column {{shadowedColumn}}.","noShadowGlobal":"'{{name}}' is already a global variable."}},"no-shadow-restricted-names":{"type":"suggestion","docs":{"description":"Disallow identifiers from shadowing restricted names","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-shadow-restricted-names"},"schema":[],"messages":{"shadowingRestrictedName":"Shadowing of global property '{{name}}'."}},"no-spaced-func":{"type":"layout","docs":{"description":"Disallow spacing between function identifiers and their applications (deprecated)","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-spaced-func"},"deprecated":true,"replacedBy":["func-call-spacing"],"fixable":"whitespace","schema":[],"messages":{"noSpacedFunction":"Unexpected space between function name and paren."}},"no-sparse-arrays":{"type":"problem","docs":{"description":"Disallow sparse arrays","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-sparse-arrays"},"schema":[],"messages":{"unexpectedSparseArray":"Unexpected comma in middle of array."}},"no-sync":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Disallow synchronous methods","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-sync"},"schema":[{"type":"object","properties":{"allowAtRootLevel":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"noSync":"Unexpected sync method: '{{propertyName}}'."}},"no-tabs":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Disallow all tabs","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-tabs"},"schema":[{"type":"object","properties":{"allowIndentationTabs":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"unexpectedTab":"Unexpected tab character."}},"no-template-curly-in-string":{"type":"problem","docs":{"description":"Disallow template literal placeholder syntax in regular strings","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-template-curly-in-string"},"schema":[],"messages":{"unexpectedTemplateExpression":"Unexpected template string expression."}},"no-ternary":{"type":"suggestion","docs":{"description":"Disallow ternary operators","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-ternary"},"schema":[],"messages":{"noTernaryOperator":"Ternary operator used."}},"no-this-before-super":{"type":"problem","docs":{"description":"Disallow `this`/`super` before calling `super()` in constructors","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-this-before-super"},"schema":[],"messages":{"noBeforeSuper":"'{{kind}}' is not allowed before 'super()'."}},"no-throw-literal":{"type":"suggestion","docs":{"description":"Disallow throwing literals as exceptions","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-throw-literal"},"schema":[],"messages":{"object":"Expected an error object to be thrown.","undef":"Do not throw undefined."}},"no-trailing-spaces":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Disallow trailing whitespace at the end of lines","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-trailing-spaces"},"fixable":"whitespace","schema":[{"type":"object","properties":{"skipBlankLines":{"type":"boolean","default":false},"ignoreComments":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"trailingSpace":"Trailing spaces not allowed."}},"no-undef":{"type":"problem","docs":{"description":"Disallow the use of undeclared variables unless mentioned in `/*global */` comments","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-undef"},"schema":[{"type":"object","properties":{"typeof":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"undef":"'{{name}}' is not defined."}},"no-undef-init":{"type":"suggestion","docs":{"description":"Disallow initializing variables to `undefined`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-undef-init"},"schema":[],"fixable":"code","messages":{"unnecessaryUndefinedInit":"It's not necessary to initialize '{{name}}' to undefined."}},"no-undefined":{"type":"suggestion","docs":{"description":"Disallow the use of `undefined` as an identifier","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-undefined"},"schema":[],"messages":{"unexpectedUndefined":"Unexpected use of undefined."}},"no-underscore-dangle":{"type":"suggestion","docs":{"description":"Disallow dangling underscores in identifiers","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-underscore-dangle"},"schema":[{"type":"object","properties":{"allow":{"type":"array","items":{"type":"string"}},"allowAfterThis":{"type":"boolean","default":false},"allowAfterSuper":{"type":"boolean","default":false},"allowAfterThisConstructor":{"type":"boolean","default":false},"enforceInMethodNames":{"type":"boolean","default":false},"allowFunctionParams":{"type":"boolean","default":true},"enforceInClassFields":{"type":"boolean","default":false},"allowInArrayDestructuring":{"type":"boolean","default":true},"allowInObjectDestructuring":{"type":"boolean","default":true}},"additionalProperties":false}],"messages":{"unexpectedUnderscore":"Unexpected dangling '_' in '{{identifier}}'."}},"no-unexpected-multiline":{"type":"problem","docs":{"description":"Disallow confusing multiline expressions","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-unexpected-multiline"},"schema":[],"messages":{"function":"Unexpected newline between function and ( of function call.","property":"Unexpected newline between object and [ of property access.","taggedTemplate":"Unexpected newline between template tag and template literal.","division":"Unexpected newline between numerator and division operator."}},"no-unmodified-loop-condition":{"type":"problem","docs":{"description":"Disallow unmodified loop conditions","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-unmodified-loop-condition"},"schema":[],"messages":{"loopConditionNotModified":"'{{name}}' is not modified in this loop."}},"no-unneeded-ternary":{"type":"suggestion","docs":{"description":"Disallow ternary operators when simpler alternatives exist","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-unneeded-ternary"},"schema":[{"type":"object","properties":{"defaultAssignment":{"type":"boolean","default":true}},"additionalProperties":false}],"fixable":"code","messages":{"unnecessaryConditionalExpression":"Unnecessary use of boolean literals in conditional expression.","unnecessaryConditionalAssignment":"Unnecessary use of conditional expression for default assignment."}},"no-unreachable":{"type":"problem","docs":{"description":"Disallow unreachable code after `return`, `throw`, `continue`, and `break` statements","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-unreachable"},"schema":[],"messages":{"unreachableCode":"Unreachable code."}},"no-unreachable-loop":{"type":"problem","docs":{"description":"Disallow loops with a body that allows only one iteration","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-unreachable-loop"},"schema":[{"type":"object","properties":{"ignore":{"type":"array","items":{"enum":["WhileStatement","DoWhileStatement","ForStatement","ForInStatement","ForOfStatement"]},"uniqueItems":true}},"additionalProperties":false}],"messages":{"invalid":"Invalid loop. Its body allows only one iteration."}},"no-unsafe-finally":{"type":"problem","docs":{"description":"Disallow control flow statements in `finally` blocks","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-unsafe-finally"},"schema":[],"messages":{"unsafeUsage":"Unsafe usage of {{nodeType}}."}},"no-unsafe-negation":{"type":"problem","docs":{"description":"Disallow negating the left operand of relational operators","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-unsafe-negation"},"hasSuggestions":true,"schema":[{"type":"object","properties":{"enforceForOrderingRelations":{"type":"boolean","default":false}},"additionalProperties":false}],"fixable":null,"messages":{"unexpected":"Unexpected negating the left operand of '{{operator}}' operator.","suggestNegatedExpression":"Negate '{{operator}}' expression instead of its left operand. This changes the current behavior.","suggestParenthesisedNegation":"Wrap negation in '()' to make the intention explicit. This preserves the current behavior."}},"no-unsafe-optional-chaining":{"type":"problem","docs":{"description":"Disallow use of optional chaining in contexts where the `undefined` value is not allowed","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-unsafe-optional-chaining"},"schema":[{"type":"object","properties":{"disallowArithmeticOperators":{"type":"boolean","default":false}},"additionalProperties":false}],"fixable":null,"messages":{"unsafeOptionalChain":"Unsafe usage of optional chaining. If it short-circuits with 'undefined' the evaluation will throw TypeError.","unsafeArithmetic":"Unsafe arithmetic operation on optional chaining. It can result in NaN."}},"no-unused-expressions":{"type":"suggestion","docs":{"description":"Disallow unused expressions","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-unused-expressions"},"schema":[{"type":"object","properties":{"allowShortCircuit":{"type":"boolean","default":false},"allowTernary":{"type":"boolean","default":false},"allowTaggedTemplates":{"type":"boolean","default":false},"enforceForJSX":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"unusedExpression":"Expected an assignment or function call and instead saw an expression."}},"no-unused-labels":{"type":"suggestion","docs":{"description":"Disallow unused labels","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-unused-labels"},"schema":[],"fixable":"code","messages":{"unused":"'{{name}}:' is defined but never used."}},"no-unused-private-class-members":{"type":"problem","docs":{"description":"Disallow unused private class members","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-unused-private-class-members"},"schema":[],"messages":{"unusedPrivateClassMember":"'{{classMemberName}}' is defined but never used."}},"no-unused-vars":{"type":"problem","docs":{"description":"Disallow unused variables","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-unused-vars"},"schema":[{"oneOf":[{"enum":["all","local"]},{"type":"object","properties":{"vars":{"enum":["all","local"]},"varsIgnorePattern":{"type":"string"},"args":{"enum":["all","after-used","none"]},"ignoreRestSiblings":{"type":"boolean"},"argsIgnorePattern":{"type":"string"},"caughtErrors":{"enum":["all","none"]},"caughtErrorsIgnorePattern":{"type":"string"},"destructuredArrayIgnorePattern":{"type":"string"}},"additionalProperties":false}]}],"messages":{"unusedVar":"'{{varName}}' is {{action}} but never used{{additional}}."}},"no-use-before-define":{"type":"problem","docs":{"description":"Disallow the use of variables before they are defined","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-use-before-define"},"schema":[{"oneOf":[{"enum":["nofunc"]},{"type":"object","properties":{"functions":{"type":"boolean"},"classes":{"type":"boolean"},"variables":{"type":"boolean"},"allowNamedExports":{"type":"boolean"}},"additionalProperties":false}]}],"messages":{"usedBeforeDefined":"'{{name}}' was used before it was defined."}},"no-useless-backreference":{"type":"problem","docs":{"description":"Disallow useless backreferences in regular expressions","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-useless-backreference"},"schema":[],"messages":{"nested":"Backreference '{{ bref }}' will be ignored. It references group '{{ group }}' from within that group.","forward":"Backreference '{{ bref }}' will be ignored. It references group '{{ group }}' which appears later in the pattern.","backward":"Backreference '{{ bref }}' will be ignored. It references group '{{ group }}' which appears before in the same lookbehind.","disjunctive":"Backreference '{{ bref }}' will be ignored. It references group '{{ group }}' which is in another alternative.","intoNegativeLookaround":"Backreference '{{ bref }}' will be ignored. It references group '{{ group }}' which is in a negative lookaround."}},"no-useless-call":{"type":"suggestion","docs":{"description":"Disallow unnecessary calls to `.call()` and `.apply()`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-useless-call"},"schema":[],"messages":{"unnecessaryCall":"Unnecessary '.{{name}}()'."}},"no-useless-catch":{"type":"suggestion","docs":{"description":"Disallow unnecessary `catch` clauses","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-useless-catch"},"schema":[],"messages":{"unnecessaryCatchClause":"Unnecessary catch clause.","unnecessaryCatch":"Unnecessary try/catch wrapper."}},"no-useless-computed-key":{"type":"suggestion","docs":{"description":"Disallow unnecessary computed property keys in objects and classes","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-useless-computed-key"},"schema":[{"type":"object","properties":{"enforceForClassMembers":{"type":"boolean","default":false}},"additionalProperties":false}],"fixable":"code","messages":{"unnecessarilyComputedProperty":"Unnecessarily computed property [{{property}}] found."}},"no-useless-concat":{"type":"suggestion","docs":{"description":"Disallow unnecessary concatenation of literals or template literals","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-useless-concat"},"schema":[],"messages":{"unexpectedConcat":"Unexpected string concatenation of literals."}},"no-useless-constructor":{"type":"suggestion","docs":{"description":"Disallow unnecessary constructors","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-useless-constructor"},"schema":[],"messages":{"noUselessConstructor":"Useless constructor."}},"no-useless-escape":{"type":"suggestion","docs":{"description":"Disallow unnecessary escape characters","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-useless-escape"},"hasSuggestions":true,"messages":{"unnecessaryEscape":"Unnecessary escape character: \\{{character}}.","removeEscape":"Remove the `\\`. This maintains the current functionality.","removeEscapeDoNotKeepSemantics":"Remove the `\\` if it was inserted by mistake.","escapeBackslash":"Replace the `\\` with `\\\\` to include the actual backslash character."},"schema":[]},"no-useless-rename":{"type":"suggestion","docs":{"description":"Disallow renaming import, export, and destructured assignments to the same name","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-useless-rename"},"fixable":"code","schema":[{"type":"object","properties":{"ignoreDestructuring":{"type":"boolean","default":false},"ignoreImport":{"type":"boolean","default":false},"ignoreExport":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"unnecessarilyRenamed":"{{type}} {{name}} unnecessarily renamed."}},"no-useless-return":{"type":"suggestion","docs":{"description":"Disallow redundant return statements","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-useless-return"},"fixable":"code","schema":[],"messages":{"unnecessaryReturn":"Unnecessary return statement."}},"no-var":{"type":"suggestion","docs":{"description":"Require `let` or `const` instead of `var`","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-var"},"schema":[],"fixable":"code","messages":{"unexpectedVar":"Unexpected var, use let or const instead."}},"no-void":{"type":"suggestion","docs":{"description":"Disallow `void` operators","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-void"},"messages":{"noVoid":"Expected 'undefined' and instead saw 'void'."},"schema":[{"type":"object","properties":{"allowAsStatement":{"type":"boolean","default":false}},"additionalProperties":false}]},"no-warning-comments":{"type":"suggestion","docs":{"description":"Disallow specified warning terms in comments","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-warning-comments"},"schema":[{"type":"object","properties":{"terms":{"type":"array","items":{"type":"string"}},"location":{"enum":["start","anywhere"]},"decoration":{"type":"array","items":{"type":"string","pattern":"^\\S$"},"minItems":1,"uniqueItems":true}},"additionalProperties":false}],"messages":{"unexpectedComment":"Unexpected '{{matchedTerm}}' comment: '{{comment}}'."}},"no-whitespace-before-property":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Disallow whitespace before properties","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-whitespace-before-property"},"fixable":"whitespace","schema":[],"messages":{"unexpectedWhitespace":"Unexpected whitespace before property {{propName}}."}},"no-with":{"type":"suggestion","docs":{"description":"Disallow `with` statements","recommended":true,"url":"https://eslint.org/docs/latest/rules/no-with"},"schema":[],"messages":{"unexpectedWith":"Unexpected use of 'with' statement."}},"nonblock-statement-body-position":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce the location of single-line statements","recommended":false,"url":"https://eslint.org/docs/latest/rules/nonblock-statement-body-position"},"fixable":"whitespace","schema":[{"enum":["beside","below","any"]},{"properties":{"overrides":{"properties":{"if":{"enum":["beside","below","any"]},"else":{"enum":["beside","below","any"]},"while":{"enum":["beside","below","any"]},"do":{"enum":["beside","below","any"]},"for":{"enum":["beside","below","any"]}},"additionalProperties":false}},"additionalProperties":false}],"messages":{"expectNoLinebreak":"Expected no linebreak before this statement.","expectLinebreak":"Expected a linebreak before this statement."}},"object-curly-newline":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent line breaks after opening and before closing braces","recommended":false,"url":"https://eslint.org/docs/latest/rules/object-curly-newline"},"fixable":"whitespace","schema":[{"oneOf":[{"oneOf":[{"enum":["always","never"]},{"type":"object","properties":{"multiline":{"type":"boolean"},"minProperties":{"type":"integer","minimum":0},"consistent":{"type":"boolean"}},"additionalProperties":false,"minProperties":1}]},{"type":"object","properties":{"ObjectExpression":{"oneOf":[{"enum":["always","never"]},{"type":"object","properties":{"multiline":{"type":"boolean"},"minProperties":{"type":"integer","minimum":0},"consistent":{"type":"boolean"}},"additionalProperties":false,"minProperties":1}]},"ObjectPattern":{"oneOf":[{"enum":["always","never"]},{"type":"object","properties":{"multiline":{"type":"boolean"},"minProperties":{"type":"integer","minimum":0},"consistent":{"type":"boolean"}},"additionalProperties":false,"minProperties":1}]},"ImportDeclaration":{"oneOf":[{"enum":["always","never"]},{"type":"object","properties":{"multiline":{"type":"boolean"},"minProperties":{"type":"integer","minimum":0},"consistent":{"type":"boolean"}},"additionalProperties":false,"minProperties":1}]},"ExportDeclaration":{"oneOf":[{"enum":["always","never"]},{"type":"object","properties":{"multiline":{"type":"boolean"},"minProperties":{"type":"integer","minimum":0},"consistent":{"type":"boolean"}},"additionalProperties":false,"minProperties":1}]}},"additionalProperties":false,"minProperties":1}]}],"messages":{"unexpectedLinebreakBeforeClosingBrace":"Unexpected line break before this closing brace.","unexpectedLinebreakAfterOpeningBrace":"Unexpected line break after this opening brace.","expectedLinebreakBeforeClosingBrace":"Expected a line break before this closing brace.","expectedLinebreakAfterOpeningBrace":"Expected a line break after this opening brace."}},"object-curly-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent spacing inside braces","recommended":false,"url":"https://eslint.org/docs/latest/rules/object-curly-spacing"},"fixable":"whitespace","schema":[{"enum":["always","never"]},{"type":"object","properties":{"arraysInObjects":{"type":"boolean"},"objectsInObjects":{"type":"boolean"}},"additionalProperties":false}],"messages":{"requireSpaceBefore":"A space is required before '{{token}}'.","requireSpaceAfter":"A space is required after '{{token}}'.","unexpectedSpaceBefore":"There should be no space before '{{token}}'.","unexpectedSpaceAfter":"There should be no space after '{{token}}'."}},"object-property-newline":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce placing object properties on separate lines","recommended":false,"url":"https://eslint.org/docs/latest/rules/object-property-newline"},"schema":[{"type":"object","properties":{"allowAllPropertiesOnSameLine":{"type":"boolean","default":false},"allowMultiplePropertiesPerLine":{"type":"boolean","default":false}},"additionalProperties":false}],"fixable":"whitespace","messages":{"propertiesOnNewlineAll":"Object properties must go on a new line if they aren't all on the same line.","propertiesOnNewline":"Object properties must go on a new line."}},"object-shorthand":{"type":"suggestion","docs":{"description":"Require or disallow method and property shorthand syntax for object literals","recommended":false,"url":"https://eslint.org/docs/latest/rules/object-shorthand"},"fixable":"code","schema":{"anyOf":[{"type":"array","items":[{"enum":["always","methods","properties","never","consistent","consistent-as-needed"]}],"minItems":0,"maxItems":1},{"type":"array","items":[{"enum":["always","methods","properties"]},{"type":"object","properties":{"avoidQuotes":{"type":"boolean"}},"additionalProperties":false}],"minItems":0,"maxItems":2},{"type":"array","items":[{"enum":["always","methods"]},{"type":"object","properties":{"ignoreConstructors":{"type":"boolean"},"methodsIgnorePattern":{"type":"string"},"avoidQuotes":{"type":"boolean"},"avoidExplicitReturnArrows":{"type":"boolean"}},"additionalProperties":false}],"minItems":0,"maxItems":2}]},"messages":{"expectedAllPropertiesShorthanded":"Expected shorthand for all properties.","expectedLiteralMethodLongform":"Expected longform method syntax for string literal keys.","expectedPropertyShorthand":"Expected property shorthand.","expectedPropertyLongform":"Expected longform property syntax.","expectedMethodShorthand":"Expected method shorthand.","expectedMethodLongform":"Expected longform method syntax.","unexpectedMix":"Unexpected mix of shorthand and non-shorthand properties."}},"one-var":{"type":"suggestion","docs":{"description":"Enforce variables to be declared either together or separately in functions","recommended":false,"url":"https://eslint.org/docs/latest/rules/one-var"},"fixable":"code","schema":[{"oneOf":[{"enum":["always","never","consecutive"]},{"type":"object","properties":{"separateRequires":{"type":"boolean"},"var":{"enum":["always","never","consecutive"]},"let":{"enum":["always","never","consecutive"]},"const":{"enum":["always","never","consecutive"]}},"additionalProperties":false},{"type":"object","properties":{"initialized":{"enum":["always","never","consecutive"]},"uninitialized":{"enum":["always","never","consecutive"]}},"additionalProperties":false}]}],"messages":{"combineUninitialized":"Combine this with the previous '{{type}}' statement with uninitialized variables.","combineInitialized":"Combine this with the previous '{{type}}' statement with initialized variables.","splitUninitialized":"Split uninitialized '{{type}}' declarations into multiple statements.","splitInitialized":"Split initialized '{{type}}' declarations into multiple statements.","splitRequires":"Split requires to be separated into a single block.","combine":"Combine this with the previous '{{type}}' statement.","split":"Split '{{type}}' declarations into multiple statements."}},"one-var-declaration-per-line":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Require or disallow newlines around variable declarations","recommended":false,"url":"https://eslint.org/docs/latest/rules/one-var-declaration-per-line"},"schema":[{"enum":["always","initializations"]}],"fixable":"whitespace","messages":{"expectVarOnNewline":"Expected variable declaration to be on a new line."}},"operator-assignment":{"type":"suggestion","docs":{"description":"Require or disallow assignment operator shorthand where possible","recommended":false,"url":"https://eslint.org/docs/latest/rules/operator-assignment"},"schema":[{"enum":["always","never"]}],"fixable":"code","messages":{"replaced":"Assignment (=) can be replaced with operator assignment ({{operator}}).","unexpected":"Unexpected operator assignment ({{operator}}) shorthand."}},"operator-linebreak":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent linebreak style for operators","recommended":false,"url":"https://eslint.org/docs/latest/rules/operator-linebreak"},"schema":[{"enum":["after","before","none",null]},{"type":"object","properties":{"overrides":{"type":"object","additionalProperties":{"enum":["after","before","none","ignore"]}}},"additionalProperties":false}],"fixable":"code","messages":{"operatorAtBeginning":"'{{operator}}' should be placed at the beginning of the line.","operatorAtEnd":"'{{operator}}' should be placed at the end of the line.","badLinebreak":"Bad line breaking before and after '{{operator}}'.","noLinebreak":"There should be no line break before or after '{{operator}}'."}},"padded-blocks":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require or disallow padding within blocks","recommended":false,"url":"https://eslint.org/docs/latest/rules/padded-blocks"},"fixable":"whitespace","schema":[{"oneOf":[{"enum":["always","never"]},{"type":"object","properties":{"blocks":{"enum":["always","never"]},"switches":{"enum":["always","never"]},"classes":{"enum":["always","never"]}},"additionalProperties":false,"minProperties":1}]},{"type":"object","properties":{"allowSingleLineBlocks":{"type":"boolean"}},"additionalProperties":false}],"messages":{"alwaysPadBlock":"Block must be padded by blank lines.","neverPadBlock":"Block must not be padded by blank lines."}},"padding-line-between-statements":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require or disallow padding lines between statements","recommended":false,"url":"https://eslint.org/docs/latest/rules/padding-line-between-statements"},"fixable":"whitespace","schema":{"definitions":{"paddingType":{"enum":["any","never","always"]},"statementType":{"anyOf":[{"enum":["*","block-like","cjs-export","cjs-import","directive","expression","iife","multiline-block-like","multiline-expression","multiline-const","multiline-let","multiline-var","singleline-const","singleline-let","singleline-var","block","empty","function","break","case","class","const","continue","debugger","default","do","export","for","if","import","let","return","switch","throw","try","var","while","with"]},{"type":"array","items":{"enum":["*","block-like","cjs-export","cjs-import","directive","expression","iife","multiline-block-like","multiline-expression","multiline-const","multiline-let","multiline-var","singleline-const","singleline-let","singleline-var","block","empty","function","break","case","class","const","continue","debugger","default","do","export","for","if","import","let","return","switch","throw","try","var","while","with"]},"minItems":1,"uniqueItems":true}]}},"type":"array","items":{"type":"object","properties":{"blankLine":{"$ref":"#/definitions/paddingType"},"prev":{"$ref":"#/definitions/statementType"},"next":{"$ref":"#/definitions/statementType"}},"additionalProperties":false,"required":["blankLine","prev","next"]}},"messages":{"unexpectedBlankLine":"Unexpected blank line before this statement.","expectedBlankLine":"Expected blank line before this statement."}},"prefer-arrow-callback":{"type":"suggestion","docs":{"description":"Require using arrow functions for callbacks","recommended":false,"url":"https://eslint.org/docs/latest/rules/prefer-arrow-callback"},"schema":[{"type":"object","properties":{"allowNamedFunctions":{"type":"boolean","default":false},"allowUnboundThis":{"type":"boolean","default":true}},"additionalProperties":false}],"fixable":"code","messages":{"preferArrowCallback":"Unexpected function expression."}},"prefer-const":{"type":"suggestion","docs":{"description":"Require `const` declarations for variables that are never reassigned after declared","recommended":false,"url":"https://eslint.org/docs/latest/rules/prefer-const"},"fixable":"code","schema":[{"type":"object","properties":{"destructuring":{"enum":["any","all"],"default":"any"},"ignoreReadBeforeAssign":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"useConst":"'{{name}}' is never reassigned. Use 'const' instead."}},"prefer-destructuring":{"type":"suggestion","docs":{"description":"Require destructuring from arrays and/or objects","recommended":false,"url":"https://eslint.org/docs/latest/rules/prefer-destructuring"},"fixable":"code","schema":[{"oneOf":[{"type":"object","properties":{"VariableDeclarator":{"type":"object","properties":{"array":{"type":"boolean"},"object":{"type":"boolean"}},"additionalProperties":false},"AssignmentExpression":{"type":"object","properties":{"array":{"type":"boolean"},"object":{"type":"boolean"}},"additionalProperties":false}},"additionalProperties":false},{"type":"object","properties":{"array":{"type":"boolean"},"object":{"type":"boolean"}},"additionalProperties":false}]},{"type":"object","properties":{"enforceForRenamedProperties":{"type":"boolean"}},"additionalProperties":false}],"messages":{"preferDestructuring":"Use {{type}} destructuring."}},"prefer-exponentiation-operator":{"type":"suggestion","docs":{"description":"Disallow the use of `Math.pow` in favor of the `**` operator","recommended":false,"url":"https://eslint.org/docs/latest/rules/prefer-exponentiation-operator"},"schema":[],"fixable":"code","messages":{"useExponentiation":"Use the '**' operator instead of 'Math.pow'."}},"prefer-named-capture-group":{"type":"suggestion","docs":{"description":"Enforce using named capture group in regular expression","recommended":false,"url":"https://eslint.org/docs/latest/rules/prefer-named-capture-group"},"hasSuggestions":true,"schema":[],"messages":{"addGroupName":"Add name to capture group.","addNonCapture":"Convert group to non-capturing.","required":"Capture group '{{group}}' should be converted to a named or non-capturing group."}},"prefer-numeric-literals":{"type":"suggestion","docs":{"description":"Disallow `parseInt()` and `Number.parseInt()` in favor of binary, octal, and hexadecimal literals","recommended":false,"url":"https://eslint.org/docs/latest/rules/prefer-numeric-literals"},"schema":[],"messages":{"useLiteral":"Use {{system}} literals instead of {{functionName}}()."},"fixable":"code"},"prefer-object-has-own":{"type":"suggestion","docs":{"description":"Disallow use of `Object.prototype.hasOwnProperty.call()` and prefer use of `Object.hasOwn()`","recommended":false,"url":"https://eslint.org/docs/latest/rules/prefer-object-has-own"},"schema":[],"messages":{"useHasOwn":"Use 'Object.hasOwn()' instead of 'Object.prototype.hasOwnProperty.call()'."},"fixable":"code"},"prefer-object-spread":{"type":"suggestion","docs":{"description":"Disallow using Object.assign with an object literal as the first argument and prefer the use of object spread instead","recommended":false,"url":"https://eslint.org/docs/latest/rules/prefer-object-spread"},"schema":[],"fixable":"code","messages":{"useSpreadMessage":"Use an object spread instead of `Object.assign` eg: `{ ...foo }`.","useLiteralMessage":"Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`."}},"prefer-promise-reject-errors":{"type":"suggestion","docs":{"description":"Require using Error objects as Promise rejection reasons","recommended":false,"url":"https://eslint.org/docs/latest/rules/prefer-promise-reject-errors"},"fixable":null,"schema":[{"type":"object","properties":{"allowEmptyReject":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"rejectAnError":"Expected the Promise rejection reason to be an Error."}},"prefer-reflect":{"type":"suggestion","docs":{"description":"Require `Reflect` methods where applicable","recommended":false,"url":"https://eslint.org/docs/latest/rules/prefer-reflect"},"deprecated":true,"replacedBy":[],"schema":[{"type":"object","properties":{"exceptions":{"type":"array","items":{"enum":["apply","call","delete","defineProperty","getOwnPropertyDescriptor","getPrototypeOf","setPrototypeOf","isExtensible","getOwnPropertyNames","preventExtensions"]},"uniqueItems":true}},"additionalProperties":false}],"messages":{"preferReflect":"Avoid using {{existing}}, instead use {{substitute}}."}},"prefer-regex-literals":{"type":"suggestion","docs":{"description":"Disallow use of the `RegExp` constructor in favor of regular expression literals","recommended":false,"url":"https://eslint.org/docs/latest/rules/prefer-regex-literals"},"hasSuggestions":true,"schema":[{"type":"object","properties":{"disallowRedundantWrapping":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"unexpectedRegExp":"Use a regular expression literal instead of the 'RegExp' constructor.","replaceWithLiteral":"Replace with an equivalent regular expression literal.","replaceWithLiteralAndFlags":"Replace with an equivalent regular expression literal with flags '{{ flags }}'.","replaceWithIntendedLiteralAndFlags":"Replace with a regular expression literal with flags '{{ flags }}'.","unexpectedRedundantRegExp":"Regular expression literal is unnecessarily wrapped within a 'RegExp' constructor.","unexpectedRedundantRegExpWithFlags":"Use regular expression literal with flags instead of the 'RegExp' constructor."}},"prefer-rest-params":{"type":"suggestion","docs":{"description":"Require rest parameters instead of `arguments`","recommended":false,"url":"https://eslint.org/docs/latest/rules/prefer-rest-params"},"schema":[],"messages":{"preferRestParams":"Use the rest parameters instead of 'arguments'."}},"prefer-spread":{"type":"suggestion","docs":{"description":"Require spread operators instead of `.apply()`","recommended":false,"url":"https://eslint.org/docs/latest/rules/prefer-spread"},"schema":[],"fixable":null,"messages":{"preferSpread":"Use the spread operator instead of '.apply()'."}},"prefer-template":{"type":"suggestion","docs":{"description":"Require template literals instead of string concatenation","recommended":false,"url":"https://eslint.org/docs/latest/rules/prefer-template"},"schema":[],"fixable":"code","messages":{"unexpectedStringConcatenation":"Unexpected string concatenation."}},"quote-props":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Require quotes around object literal property names","recommended":false,"url":"https://eslint.org/docs/latest/rules/quote-props"},"schema":{"anyOf":[{"type":"array","items":[{"enum":["always","as-needed","consistent","consistent-as-needed"]}],"minItems":0,"maxItems":1},{"type":"array","items":[{"enum":["always","as-needed","consistent","consistent-as-needed"]},{"type":"object","properties":{"keywords":{"type":"boolean"},"unnecessary":{"type":"boolean"},"numbers":{"type":"boolean"}},"additionalProperties":false}],"minItems":0,"maxItems":2}]},"fixable":"code","messages":{"requireQuotesDueToReservedWord":"Properties should be quoted as '{{property}}' is a reserved word.","inconsistentlyQuotedProperty":"Inconsistently quoted property '{{key}}' found.","unnecessarilyQuotedProperty":"Unnecessarily quoted property '{{property}}' found.","unquotedReservedProperty":"Unquoted reserved word '{{property}}' used as key.","unquotedNumericProperty":"Unquoted number literal '{{property}}' used as key.","unquotedPropertyFound":"Unquoted property '{{property}}' found.","redundantQuoting":"Properties shouldn't be quoted as all quotes are redundant."}},"quotes":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce the consistent use of either backticks, double, or single quotes","recommended":false,"url":"https://eslint.org/docs/latest/rules/quotes"},"fixable":"code","schema":[{"enum":["single","double","backtick"]},{"anyOf":[{"enum":["avoid-escape"]},{"type":"object","properties":{"avoidEscape":{"type":"boolean"},"allowTemplateLiterals":{"type":"boolean"}},"additionalProperties":false}]}],"messages":{"wrongQuotes":"Strings must use {{description}}."}},"radix":{"type":"suggestion","docs":{"description":"Enforce the consistent use of the radix argument when using `parseInt()`","recommended":false,"url":"https://eslint.org/docs/latest/rules/radix"},"hasSuggestions":true,"schema":[{"enum":["always","as-needed"]}],"messages":{"missingParameters":"Missing parameters.","redundantRadix":"Redundant radix parameter.","missingRadix":"Missing radix parameter.","invalidRadix":"Invalid radix parameter, must be an integer between 2 and 36.","addRadixParameter10":"Add radix parameter `10` for parsing decimal numbers."}},"require-atomic-updates":{"type":"problem","docs":{"description":"Disallow assignments that can lead to race conditions due to usage of `await` or `yield`","recommended":false,"url":"https://eslint.org/docs/latest/rules/require-atomic-updates"},"fixable":null,"schema":[{"type":"object","properties":{"allowProperties":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"nonAtomicUpdate":"Possible race condition: `{{value}}` might be reassigned based on an outdated value of `{{value}}`.","nonAtomicObjectUpdate":"Possible race condition: `{{value}}` might be assigned based on an outdated state of `{{object}}`."}},"require-await":{"type":"suggestion","docs":{"description":"Disallow async functions which have no `await` expression","recommended":false,"url":"https://eslint.org/docs/latest/rules/require-await"},"schema":[],"messages":{"missingAwait":"{{name}} has no 'await' expression."}},"require-jsdoc":{"type":"suggestion","docs":{"description":"Require JSDoc comments","recommended":false,"url":"https://eslint.org/docs/latest/rules/require-jsdoc"},"schema":[{"type":"object","properties":{"require":{"type":"object","properties":{"ClassDeclaration":{"type":"boolean","default":false},"MethodDefinition":{"type":"boolean","default":false},"FunctionDeclaration":{"type":"boolean","default":true},"ArrowFunctionExpression":{"type":"boolean","default":false},"FunctionExpression":{"type":"boolean","default":false}},"additionalProperties":false,"default":{}}},"additionalProperties":false}],"deprecated":true,"replacedBy":[],"messages":{"missingJSDocComment":"Missing JSDoc comment."}},"require-unicode-regexp":{"type":"suggestion","docs":{"description":"Enforce the use of `u` or `v` flag on RegExp","recommended":false,"url":"https://eslint.org/docs/latest/rules/require-unicode-regexp"},"hasSuggestions":true,"messages":{"addUFlag":"Add the 'u' flag.","requireUFlag":"Use the 'u' flag."},"schema":[]},"require-yield":{"type":"suggestion","docs":{"description":"Require generator functions to contain `yield`","recommended":true,"url":"https://eslint.org/docs/latest/rules/require-yield"},"schema":[],"messages":{"missingYield":"This generator function does not have 'yield'."}},"rest-spread-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce spacing between rest and spread operators and their expressions","recommended":false,"url":"https://eslint.org/docs/latest/rules/rest-spread-spacing"},"fixable":"whitespace","schema":[{"enum":["always","never"]}],"messages":{"unexpectedWhitespace":"Unexpected whitespace after {{type}} operator.","expectedWhitespace":"Expected whitespace after {{type}} operator."}},"semi":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require or disallow semicolons instead of ASI","recommended":false,"url":"https://eslint.org/docs/latest/rules/semi"},"fixable":"code","schema":{"anyOf":[{"type":"array","items":[{"enum":["never"]},{"type":"object","properties":{"beforeStatementContinuationChars":{"enum":["always","any","never"]}},"additionalProperties":false}],"minItems":0,"maxItems":2},{"type":"array","items":[{"enum":["always"]},{"type":"object","properties":{"omitLastInOneLineBlock":{"type":"boolean"},"omitLastInOneLineClassBody":{"type":"boolean"}},"additionalProperties":false}],"minItems":0,"maxItems":2}]},"messages":{"missingSemi":"Missing semicolon.","extraSemi":"Extra semicolon."}},"semi-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent spacing before and after semicolons","recommended":false,"url":"https://eslint.org/docs/latest/rules/semi-spacing"},"fixable":"whitespace","schema":[{"type":"object","properties":{"before":{"type":"boolean","default":false},"after":{"type":"boolean","default":true}},"additionalProperties":false}],"messages":{"unexpectedWhitespaceBefore":"Unexpected whitespace before semicolon.","unexpectedWhitespaceAfter":"Unexpected whitespace after semicolon.","missingWhitespaceBefore":"Missing whitespace before semicolon.","missingWhitespaceAfter":"Missing whitespace after semicolon."}},"semi-style":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce location of semicolons","recommended":false,"url":"https://eslint.org/docs/latest/rules/semi-style"},"schema":[{"enum":["last","first"]}],"fixable":"whitespace","messages":{"expectedSemiColon":"Expected this semicolon to be at {{pos}}."}},"sort-imports":{"type":"suggestion","docs":{"description":"Enforce sorted import declarations within modules","recommended":false,"url":"https://eslint.org/docs/latest/rules/sort-imports"},"schema":[{"type":"object","properties":{"ignoreCase":{"type":"boolean","default":false},"memberSyntaxSortOrder":{"type":"array","items":{"enum":["none","all","multiple","single"]},"uniqueItems":true,"minItems":4,"maxItems":4},"ignoreDeclarationSort":{"type":"boolean","default":false},"ignoreMemberSort":{"type":"boolean","default":false},"allowSeparatedGroups":{"type":"boolean","default":false}},"additionalProperties":false}],"fixable":"code","messages":{"sortImportsAlphabetically":"Imports should be sorted alphabetically.","sortMembersAlphabetically":"Member '{{memberName}}' of the import declaration should be sorted alphabetically.","unexpectedSyntaxOrder":"Expected '{{syntaxA}}' syntax before '{{syntaxB}}' syntax."}},"sort-keys":{"type":"suggestion","docs":{"description":"Require object keys to be sorted","recommended":false,"url":"https://eslint.org/docs/latest/rules/sort-keys"},"schema":[{"enum":["asc","desc"]},{"type":"object","properties":{"caseSensitive":{"type":"boolean","default":true},"natural":{"type":"boolean","default":false},"minKeys":{"type":"integer","minimum":2,"default":2},"allowLineSeparatedGroups":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"sortKeys":"Expected object keys to be in {{natural}}{{insensitive}}{{order}}ending order. '{{thisName}}' should be before '{{prevName}}'."}},"sort-vars":{"type":"suggestion","docs":{"description":"Require variables within the same declaration block to be sorted","recommended":false,"url":"https://eslint.org/docs/latest/rules/sort-vars"},"schema":[{"type":"object","properties":{"ignoreCase":{"type":"boolean","default":false}},"additionalProperties":false}],"fixable":"code","messages":{"sortVars":"Variables within the same declaration block should be sorted alphabetically."}},"space-before-blocks":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent spacing before blocks","recommended":false,"url":"https://eslint.org/docs/latest/rules/space-before-blocks"},"fixable":"whitespace","schema":[{"oneOf":[{"enum":["always","never"]},{"type":"object","properties":{"keywords":{"enum":["always","never","off"]},"functions":{"enum":["always","never","off"]},"classes":{"enum":["always","never","off"]}},"additionalProperties":false}]}],"messages":{"unexpectedSpace":"Unexpected space before opening brace.","missingSpace":"Missing space before opening brace."}},"space-before-function-paren":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent spacing before `function` definition opening parenthesis","recommended":false,"url":"https://eslint.org/docs/latest/rules/space-before-function-paren"},"fixable":"whitespace","schema":[{"oneOf":[{"enum":["always","never"]},{"type":"object","properties":{"anonymous":{"enum":["always","never","ignore"]},"named":{"enum":["always","never","ignore"]},"asyncArrow":{"enum":["always","never","ignore"]}},"additionalProperties":false}]}],"messages":{"unexpectedSpace":"Unexpected space before function parentheses.","missingSpace":"Missing space before function parentheses."}},"space-in-parens":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent spacing inside parentheses","recommended":false,"url":"https://eslint.org/docs/latest/rules/space-in-parens"},"fixable":"whitespace","schema":[{"enum":["always","never"]},{"type":"object","properties":{"exceptions":{"type":"array","items":{"enum":["{}","[]","()","empty"]},"uniqueItems":true}},"additionalProperties":false}],"messages":{"missingOpeningSpace":"There must be a space after this paren.","missingClosingSpace":"There must be a space before this paren.","rejectedOpeningSpace":"There should be no space after this paren.","rejectedClosingSpace":"There should be no space before this paren."}},"space-infix-ops":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require spacing around infix operators","recommended":false,"url":"https://eslint.org/docs/latest/rules/space-infix-ops"},"fixable":"whitespace","schema":[{"type":"object","properties":{"int32Hint":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"missingSpace":"Operator '{{operator}}' must be spaced."}},"space-unary-ops":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent spacing before or after unary operators","recommended":false,"url":"https://eslint.org/docs/latest/rules/space-unary-ops"},"fixable":"whitespace","schema":[{"type":"object","properties":{"words":{"type":"boolean","default":true},"nonwords":{"type":"boolean","default":false},"overrides":{"type":"object","additionalProperties":{"type":"boolean"}}},"additionalProperties":false}],"messages":{"unexpectedBefore":"Unexpected space before unary operator '{{operator}}'.","unexpectedAfter":"Unexpected space after unary operator '{{operator}}'.","unexpectedAfterWord":"Unexpected space after unary word operator '{{word}}'.","wordOperator":"Unary word operator '{{word}}' must be followed by whitespace.","operator":"Unary operator '{{operator}}' must be followed by whitespace.","beforeUnaryExpressions":"Space is required before unary expressions '{{token}}'."}},"spaced-comment":{"deprecated":true,"replacedBy":[],"type":"suggestion","docs":{"description":"Enforce consistent spacing after the `//` or `/*` in a comment","recommended":false,"url":"https://eslint.org/docs/latest/rules/spaced-comment"},"fixable":"whitespace","schema":[{"enum":["always","never"]},{"type":"object","properties":{"exceptions":{"type":"array","items":{"type":"string"}},"markers":{"type":"array","items":{"type":"string"}},"line":{"type":"object","properties":{"exceptions":{"type":"array","items":{"type":"string"}},"markers":{"type":"array","items":{"type":"string"}}},"additionalProperties":false},"block":{"type":"object","properties":{"exceptions":{"type":"array","items":{"type":"string"}},"markers":{"type":"array","items":{"type":"string"}},"balanced":{"type":"boolean","default":false}},"additionalProperties":false}},"additionalProperties":false}],"messages":{"unexpectedSpaceAfterMarker":"Unexpected space or tab after marker ({{refChar}}) in comment.","expectedExceptionAfter":"Expected exception block, space or tab after '{{refChar}}' in comment.","unexpectedSpaceBefore":"Unexpected space or tab before '*/' in comment.","unexpectedSpaceAfter":"Unexpected space or tab after '{{refChar}}' in comment.","expectedSpaceBefore":"Expected space or tab before '*/' in comment.","expectedSpaceAfter":"Expected space or tab after '{{refChar}}' in comment."}},"strict":{"type":"suggestion","docs":{"description":"Require or disallow strict mode directives","recommended":false,"url":"https://eslint.org/docs/latest/rules/strict"},"schema":[{"enum":["never","global","function","safe"]}],"fixable":"code","messages":{"function":"Use the function form of 'use strict'.","global":"Use the global form of 'use strict'.","multiple":"Multiple 'use strict' directives.","never":"Strict mode is not permitted.","unnecessary":"Unnecessary 'use strict' directive.","module":"'use strict' is unnecessary inside of modules.","implied":"'use strict' is unnecessary when implied strict mode is enabled.","unnecessaryInClasses":"'use strict' is unnecessary inside of classes.","nonSimpleParameterList":"'use strict' directive inside a function with non-simple parameter list throws a syntax error since ES2016.","wrap":"Wrap {{name}} in a function with 'use strict' directive."}},"switch-colon-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce spacing around colons of switch statements","recommended":false,"url":"https://eslint.org/docs/latest/rules/switch-colon-spacing"},"schema":[{"type":"object","properties":{"before":{"type":"boolean","default":false},"after":{"type":"boolean","default":true}},"additionalProperties":false}],"fixable":"whitespace","messages":{"expectedBefore":"Expected space(s) before this colon.","expectedAfter":"Expected space(s) after this colon.","unexpectedBefore":"Unexpected space(s) before this colon.","unexpectedAfter":"Unexpected space(s) after this colon."}},"symbol-description":{"type":"suggestion","docs":{"description":"Require symbol descriptions","recommended":false,"url":"https://eslint.org/docs/latest/rules/symbol-description"},"fixable":null,"schema":[],"messages":{"expected":"Expected Symbol to have a description."}},"template-curly-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require or disallow spacing around embedded expressions of template strings","recommended":false,"url":"https://eslint.org/docs/latest/rules/template-curly-spacing"},"fixable":"whitespace","schema":[{"enum":["always","never"]}],"messages":{"expectedBefore":"Expected space(s) before '}'.","expectedAfter":"Expected space(s) after '${'.","unexpectedBefore":"Unexpected space(s) before '}'.","unexpectedAfter":"Unexpected space(s) after '${'."}},"template-tag-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require or disallow spacing between template tags and their literals","recommended":false,"url":"https://eslint.org/docs/latest/rules/template-tag-spacing"},"fixable":"whitespace","schema":[{"enum":["always","never"]}],"messages":{"unexpected":"Unexpected space between template tag and template literal.","missing":"Missing space between template tag and template literal."}},"unicode-bom":{"type":"layout","docs":{"description":"Require or disallow Unicode byte order mark (BOM)","recommended":false,"url":"https://eslint.org/docs/latest/rules/unicode-bom"},"fixable":"whitespace","schema":[{"enum":["always","never"]}],"messages":{"expected":"Expected Unicode BOM (Byte Order Mark).","unexpected":"Unexpected Unicode BOM (Byte Order Mark)."}},"use-isnan":{"type":"problem","docs":{"description":"Require calls to `isNaN()` when checking for `NaN`","recommended":true,"url":"https://eslint.org/docs/latest/rules/use-isnan"},"schema":[{"type":"object","properties":{"enforceForSwitchCase":{"type":"boolean","default":true},"enforceForIndexOf":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"comparisonWithNaN":"Use the isNaN function to compare with NaN.","switchNaN":"'switch(NaN)' can never match a case clause. Use Number.isNaN instead of the switch.","caseNaN":"'case NaN' can never match. Use Number.isNaN before the switch.","indexOfNaN":"Array prototype method '{{ methodName }}' cannot find NaN."}},"valid-jsdoc":{"type":"suggestion","docs":{"description":"Enforce valid JSDoc comments","recommended":false,"url":"https://eslint.org/docs/latest/rules/valid-jsdoc"},"schema":[{"type":"object","properties":{"prefer":{"type":"object","additionalProperties":{"type":"string"}},"preferType":{"type":"object","additionalProperties":{"type":"string"}},"requireReturn":{"type":"boolean","default":true},"requireParamDescription":{"type":"boolean","default":true},"requireReturnDescription":{"type":"boolean","default":true},"matchDescription":{"type":"string"},"requireReturnType":{"type":"boolean","default":true},"requireParamType":{"type":"boolean","default":true}},"additionalProperties":false}],"fixable":"code","messages":{"unexpectedTag":"Unexpected @{{title}} tag; function has no return statement.","expected":"Expected JSDoc for '{{name}}' but found '{{jsdocName}}'.","use":"Use @{{name}} instead.","useType":"Use '{{expectedTypeName}}' instead of '{{currentTypeName}}'.","syntaxError":"JSDoc syntax error.","missingBrace":"JSDoc type missing brace.","missingParamDesc":"Missing JSDoc parameter description for '{{name}}'.","missingParamType":"Missing JSDoc parameter type for '{{name}}'.","missingReturnType":"Missing JSDoc return type.","missingReturnDesc":"Missing JSDoc return description.","missingReturn":"Missing JSDoc @{{returns}} for function.","missingParam":"Missing JSDoc for parameter '{{name}}'.","duplicateParam":"Duplicate JSDoc parameter '{{name}}'.","unsatisfiedDesc":"JSDoc description does not satisfy the regex pattern."},"deprecated":true,"replacedBy":[]},"valid-typeof":{"type":"problem","docs":{"description":"Enforce comparing `typeof` expressions against valid strings","recommended":true,"url":"https://eslint.org/docs/latest/rules/valid-typeof"},"hasSuggestions":true,"schema":[{"type":"object","properties":{"requireStringLiterals":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"invalidValue":"Invalid typeof comparison value.","notString":"Typeof comparisons should be to string literals.","suggestString":"Use `\"{{type}}\"` instead of `{{type}}`."}},"vars-on-top":{"type":"suggestion","docs":{"description":"Require `var` declarations be placed at the top of their containing scope","recommended":false,"url":"https://eslint.org/docs/latest/rules/vars-on-top"},"schema":[],"messages":{"top":"All 'var' declarations must be at the top of the function scope."}},"wrap-iife":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require parentheses around immediate `function` invocations","recommended":false,"url":"https://eslint.org/docs/latest/rules/wrap-iife"},"schema":[{"enum":["outside","inside","any"]},{"type":"object","properties":{"functionPrototypeMethods":{"type":"boolean","default":false}},"additionalProperties":false}],"fixable":"code","messages":{"wrapInvocation":"Wrap an immediate function invocation in parentheses.","wrapExpression":"Wrap only the function expression in parens.","moveInvocation":"Move the invocation into the parens that contain the function."}},"wrap-regex":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require parenthesis around regex literals","recommended":false,"url":"https://eslint.org/docs/latest/rules/wrap-regex"},"schema":[],"fixable":"code","messages":{"requireParens":"Wrap the regexp literal in parens to disambiguate the slash."}},"yield-star-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Require or disallow spacing around the `*` in `yield*` expressions","recommended":false,"url":"https://eslint.org/docs/latest/rules/yield-star-spacing"},"fixable":"whitespace","schema":[{"oneOf":[{"enum":["before","after","both","neither"]},{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false}]}],"messages":{"missingBefore":"Missing space before *.","missingAfter":"Missing space after *.","unexpectedBefore":"Unexpected space before *.","unexpectedAfter":"Unexpected space after *."}},"yoda":{"type":"suggestion","docs":{"description":"Require or disallow \"Yoda\" conditions","recommended":false,"url":"https://eslint.org/docs/latest/rules/yoda"},"schema":[{"enum":["always","never"]},{"type":"object","properties":{"exceptRange":{"type":"boolean","default":false},"onlyEquality":{"type":"boolean","default":false}},"additionalProperties":false}],"fixable":"code","messages":{"expected":"Expected literal to be on the {{expectedSide}} side of {{operator}}."}},"react/boolean-prop-naming":{"docs":{"category":"Stylistic Issues","description":"Enforces consistent naming for boolean props","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/boolean-prop-naming.md"},"messages":{"patternMismatch":"Prop name `{{propName}}` doesn’t match rule `{{pattern}}`"},"schema":[{"additionalProperties":false,"properties":{"propTypeNames":{"items":{"type":"string"},"minItems":1,"type":"array","uniqueItems":true},"rule":{"default":"^(is|has)[A-Z]([A-Za-z0-9]?)+","minLength":1,"type":"string"},"message":{"minLength":1,"type":"string"},"validateNested":{"default":false,"type":"boolean"}},"type":"object"}]},"react/button-has-type":{"docs":{"description":"Disallow usage of `button` elements without an explicit `type` attribute","category":"Possible Errors","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/button-has-type.md"},"messages":{"missingType":"Missing an explicit type attribute for button","complexType":"The button type attribute must be specified by a static string or a trivial ternary expression","invalidValue":"\"{{value}}\" is an invalid value for button type attribute","forbiddenValue":"\"{{value}}\" is an invalid value for button type attribute"},"schema":[{"type":"object","properties":{"button":{"default":true,"type":"boolean"},"submit":{"default":true,"type":"boolean"},"reset":{"default":true,"type":"boolean"}},"additionalProperties":false}]},"react/checked-requires-onchange-or-readonly":{"docs":{"description":"Enforce using `onChange` or `readonly` attribute when `checked` is used","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/checked-requires-onchange-or-readonly.md"},"messages":{"missingProperty":"`checked` should be used with either `onChange` or `readOnly`.","exclusiveCheckedAttribute":"Use either `checked` or `defaultChecked`, but not both."},"schema":[{"additionalProperties":false,"properties":{"ignoreMissingProperties":{"type":"boolean"},"ignoreExclusiveCheckedAttribute":{"type":"boolean"}}}]},"react/default-props-match-prop-types":{"docs":{"description":"Enforce all defaultProps have a corresponding non-required PropType","category":"Best Practices","url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/default-props-match-prop-types.md"},"messages":{"requiredHasDefault":"defaultProp \"{{name}}\" defined for isRequired propType.","defaultHasNoType":"defaultProp \"{{name}}\" has no corresponding propTypes declaration."},"schema":[{"type":"object","properties":{"allowRequiredDefaults":{"default":false,"type":"boolean"}},"additionalProperties":false}]},"react/destructuring-assignment":{"docs":{"description":"Enforce consistent usage of destructuring assignment of props, state, and context","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/destructuring-assignment.md"},"fixable":"code","messages":{"noDestructPropsInSFCArg":"Must never use destructuring props assignment in SFC argument","noDestructContextInSFCArg":"Must never use destructuring context assignment in SFC argument","noDestructAssignment":"Must never use destructuring {{type}} assignment","useDestructAssignment":"Must use destructuring {{type}} assignment","destructureInSignature":"Must destructure props in the function signature."},"schema":[{"type":"string","enum":["always","never"]},{"type":"object","properties":{"ignoreClassFields":{"type":"boolean"},"destructureInSignature":{"type":"string","enum":["always","ignore"]}},"additionalProperties":false}]},"react/display-name":{"docs":{"description":"Disallow missing displayName in a React component definition","category":"Best Practices","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/display-name.md"},"messages":{"noDisplayName":"Component definition is missing display name","noContextDisplayName":"Context definition is missing display name"},"schema":[{"type":"object","properties":{"ignoreTranspilerName":{"type":"boolean"},"checkContextObjects":{"type":"boolean"}},"additionalProperties":false}]},"react/forbid-component-props":{"docs":{"description":"Disallow certain props on components","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/forbid-component-props.md"},"messages":{"propIsForbidden":"Prop \"{{prop}}\" is forbidden on Components"},"schema":[{"type":"object","properties":{"forbid":{"type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"propName":{"type":"string"},"allowedFor":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"allowedForPatterns":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"message":{"type":"string"}},"additionalProperties":false},{"type":"object","properties":{"propName":{"type":"string"},"disallowedFor":{"type":"array","uniqueItems":true,"minItems":1,"items":{"type":"string"}},"disallowedForPatterns":{"type":"array","uniqueItems":true,"minItems":1,"items":{"type":"string"}},"message":{"type":"string"}},"anyOf":[{"required":["disallowedFor"]},{"required":["disallowedForPatterns"]}],"additionalProperties":false},{"type":"object","properties":{"propNamePattern":{"type":"string"},"allowedFor":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"allowedForPatterns":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"message":{"type":"string"}},"additionalProperties":false},{"type":"object","properties":{"propNamePattern":{"type":"string"},"disallowedFor":{"type":"array","uniqueItems":true,"minItems":1,"items":{"type":"string"}},"disallowedForPatterns":{"type":"array","uniqueItems":true,"minItems":1,"items":{"type":"string"}},"message":{"type":"string"}},"anyOf":[{"required":["disallowedFor"]},{"required":["disallowedForPatterns"]}],"additionalProperties":false}]}}}}]},"react/forbid-dom-props":{"docs":{"description":"Disallow certain props on DOM Nodes","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/forbid-dom-props.md"},"messages":{"propIsForbidden":"Prop \"{{prop}}\" is forbidden on DOM Nodes"},"schema":[{"type":"object","properties":{"forbid":{"type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"propName":{"type":"string"},"disallowedFor":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"message":{"type":"string"}}}],"minLength":1},"uniqueItems":true}},"additionalProperties":false}]},"react/forbid-elements":{"docs":{"description":"Disallow certain elements","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/forbid-elements.md"},"messages":{"forbiddenElement":"<{{element}}> is forbidden","forbiddenElement_message":"<{{element}}> is forbidden, {{message}}"},"schema":[{"type":"object","properties":{"forbid":{"type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"element":{"type":"string"},"message":{"type":"string"}},"required":["element"],"additionalProperties":false}]}}},"additionalProperties":false}]},"react/forbid-foreign-prop-types":{"docs":{"description":"Disallow using another component's propTypes","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/forbid-foreign-prop-types.md"},"messages":{"forbiddenPropType":"Using propTypes from another component is not safe because they may be removed in production builds"},"schema":[{"type":"object","properties":{"allowInPropTypes":{"type":"boolean"}},"additionalProperties":false}]},"react/forbid-prop-types":{"docs":{"description":"Disallow certain propTypes","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/forbid-prop-types.md"},"messages":{"forbiddenPropType":"Prop type \"{{target}}\" is forbidden"},"schema":[{"type":"object","properties":{"forbid":{"type":"array","items":{"type":"string"}},"checkContextTypes":{"type":"boolean"},"checkChildContextTypes":{"type":"boolean"}},"additionalProperties":true}]},"react/forward-ref-uses-ref":{"docs":{"description":"Require all forwardRef components include a ref parameter","category":"Possible Errors","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/forward-ref-uses-ref.md"},"messages":{"missingRefParameter":"forwardRef is used with this component but no ref parameter is set","addRefParameter":"Add a ref parameter","removeForwardRef":"Remove forwardRef wrapper"},"schema":[],"type":"suggestion","hasSuggestions":true},"react/function-component-definition":{"docs":{"description":"Enforce a specific function type for function components","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/function-component-definition.md"},"fixable":"code","messages":{"function-declaration":"Function component is not a function declaration","function-expression":"Function component is not a function expression","arrow-function":"Function component is not an arrow function"},"schema":[{"type":"object","properties":{"namedComponents":{"anyOf":[{"enum":["function-declaration","arrow-function","function-expression"]},{"type":"array","items":{"type":"string","enum":["function-declaration","arrow-function","function-expression"]}}]},"unnamedComponents":{"anyOf":[{"enum":["arrow-function","function-expression"]},{"type":"array","items":{"type":"string","enum":["arrow-function","function-expression"]}}]}}}]},"react/hook-use-state":{"docs":{"description":"Ensure destructuring and symmetric naming of useState hook value and setter variables","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/hook-use-state.md"},"messages":{"useStateErrorMessage":"useState call is not destructured into value + setter pair","useStateErrorMessageOrAddOption":"useState call is not destructured into value + setter pair (you can allow destructuring by enabling \"allowDestructuredState\" option)","suggestPair":"Destructure useState call into value + setter pair","suggestMemo":"Replace useState call with useMemo"},"schema":[{"type":"object","properties":{"allowDestructuredState":{"default":false,"type":"boolean"}},"additionalProperties":false}],"type":"suggestion","hasSuggestions":true},"react/iframe-missing-sandbox":{"docs":{"description":"Enforce sandbox attribute on iframe elements","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/iframe-missing-sandbox.md"},"schema":[],"messages":{"attributeMissing":"An iframe element is missing a sandbox attribute","invalidValue":"An iframe element defines a sandbox attribute with invalid value \"{{ value }}\"","invalidCombination":"An iframe element defines a sandbox attribute with both allow-scripts and allow-same-origin which is invalid"}},"react/jsx-boolean-value":{"docs":{"description":"Enforce boolean attributes notation in JSX","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-boolean-value.md"},"fixable":"code","messages":{"omitBoolean":"Value must be omitted for boolean attribute `{{propName}}`","setBoolean":"Value must be set for boolean attribute `{{propName}}`","omitPropAndBoolean":"Value must be omitted for `false` attribute: `{{propName}}`"},"schema":{"anyOf":[{"type":"array","items":[{"enum":["always","never"]}],"additionalItems":false},{"type":"array","items":[{"enum":["always"]},{"type":"object","additionalProperties":false,"properties":{"never":{"type":"array","items":{"type":"string","minLength":1},"uniqueItems":true},"assumeUndefinedIsFalse":{"type":"boolean"}}}],"additionalItems":false},{"type":"array","items":[{"enum":["never"]},{"type":"object","additionalProperties":false,"properties":{"always":{"type":"array","items":{"type":"string","minLength":1},"uniqueItems":true},"assumeUndefinedIsFalse":{"type":"boolean"}}}],"additionalItems":false}]}},"react/jsx-child-element-spacing":{"docs":{"description":"Enforce or disallow spaces inside of curly braces in JSX attributes and expressions","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-child-element-spacing.md"},"fixable":null,"messages":{"spacingAfterPrev":"Ambiguous spacing after previous element {{element}}","spacingBeforeNext":"Ambiguous spacing before next element {{element}}"},"schema":[]},"react/jsx-closing-bracket-location":{"docs":{"description":"Enforce closing bracket location in JSX","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-closing-bracket-location.md"},"fixable":"code","messages":{"bracketLocation":"The closing bracket must be {{location}}{{details}}"},"schema":[{"anyOf":[{"enum":["after-props","props-aligned","tag-aligned","line-aligned"]},{"type":"object","properties":{"location":{"enum":["after-props","props-aligned","tag-aligned","line-aligned"]}},"additionalProperties":false},{"type":"object","properties":{"nonEmpty":{"enum":["after-props","props-aligned","tag-aligned","line-aligned",false]},"selfClosing":{"enum":["after-props","props-aligned","tag-aligned","line-aligned",false]}},"additionalProperties":false}]}]},"react/jsx-closing-tag-location":{"docs":{"description":"Enforce closing tag location for multiline JSX","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-closing-tag-location.md"},"fixable":"whitespace","messages":{"onOwnLine":"Closing tag of a multiline JSX expression must be on its own line.","matchIndent":"Expected closing tag to match indentation of opening.","alignWithOpening":"Expected closing tag to be aligned with the line containing the opening tag"},"schema":[{"anyOf":[{"enum":["tag-aligned","line-aligned"]},{"type":"object","properties":{"location":{"enum":["tag-aligned","line-aligned"]}},"additionalProperties":false}]}]},"react/jsx-curly-spacing":{"docs":{"description":"Enforce or disallow spaces inside of curly braces in JSX attributes and expressions","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-curly-spacing.md"},"fixable":"code","messages":{"noNewlineAfter":"There should be no newline after '{{token}}'","noNewlineBefore":"There should be no newline before '{{token}}'","noSpaceAfter":"There should be no space after '{{token}}'","noSpaceBefore":"There should be no space before '{{token}}'","spaceNeededAfter":"A space is required after '{{token}}'","spaceNeededBefore":"A space is required before '{{token}}'"},"schema":{"definitions":{"basicConfig":{"type":"object","properties":{"when":{"enum":["always","never"]},"allowMultiline":{"type":"boolean"},"spacing":{"type":"object","properties":{"objectLiterals":{"enum":["always","never"]}}}}},"basicConfigOrBoolean":{"anyOf":[{"$ref":"#/definitions/basicConfig"},{"type":"boolean"}]}},"type":"array","items":[{"anyOf":[{"allOf":[{"$ref":"#/definitions/basicConfig"},{"type":"object","properties":{"attributes":{"$ref":"#/definitions/basicConfigOrBoolean"},"children":{"$ref":"#/definitions/basicConfigOrBoolean"}}}]},{"enum":["always","never"]}]},{"type":"object","properties":{"allowMultiline":{"type":"boolean"},"spacing":{"type":"object","properties":{"objectLiterals":{"enum":["always","never"]}}}},"additionalProperties":false}]}},"react/jsx-curly-newline":{"type":"layout","docs":{"description":"Enforce consistent linebreaks in curly braces in JSX attributes and expressions","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-curly-newline.md"},"fixable":"whitespace","schema":[{"anyOf":[{"enum":["consistent","never"]},{"type":"object","properties":{"singleline":{"enum":["consistent","require","forbid"]},"multiline":{"enum":["consistent","require","forbid"]}},"additionalProperties":false}]}],"messages":{"expectedBefore":"Expected newline before '}'.","expectedAfter":"Expected newline after '{'.","unexpectedBefore":"Unexpected newline before '}'.","unexpectedAfter":"Unexpected newline after '{'."}},"react/jsx-equals-spacing":{"docs":{"description":"Enforce or disallow spaces around equal signs in JSX attributes","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-equals-spacing.md"},"fixable":"code","messages":{"noSpaceBefore":"There should be no space before '='","noSpaceAfter":"There should be no space after '='","needSpaceBefore":"A space is required before '='","needSpaceAfter":"A space is required after '='"},"schema":[{"enum":["always","never"]}]},"react/jsx-filename-extension":{"docs":{"description":"Disallow file extensions that may contain JSX","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-filename-extension.md"},"messages":{"noJSXWithExtension":"JSX not allowed in files with extension '{{ext}}'","extensionOnlyForJSX":"Only files containing JSX may use the extension '{{ext}}'"},"schema":[{"type":"object","properties":{"allow":{"enum":["always","as-needed"]},"extensions":{"type":"array","items":{"type":"string"}},"ignoreFilesWithoutCode":{"type":"boolean"}},"additionalProperties":false}]},"react/jsx-first-prop-new-line":{"docs":{"description":"Enforce proper position of the first property in JSX","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-first-prop-new-line.md"},"fixable":"code","messages":{"propOnNewLine":"Property should be placed on a new line","propOnSameLine":"Property should be placed on the same line as the component declaration"},"schema":[{"enum":["always","never","multiline","multiline-multiprop","multiprop"]}]},"react/jsx-handler-names":{"docs":{"description":"Enforce event handler naming conventions in JSX","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-handler-names.md"},"messages":{"badHandlerName":"Handler function for {{propKey}} prop key must be a camelCase name beginning with '{{handlerPrefix}}' only","badPropKey":"Prop key for {{propValue}} must begin with '{{handlerPropPrefix}}'"},"schema":[{"anyOf":[{"type":"object","properties":{"eventHandlerPrefix":{"type":"string"},"eventHandlerPropPrefix":{"type":"string"},"checkLocalVariables":{"type":"boolean"},"checkInlineFunction":{"type":"boolean"},"ignoreComponentNames":{"type":"array","uniqueItems":true,"items":{"type":"string"}}},"additionalProperties":false},{"type":"object","properties":{"eventHandlerPrefix":{"type":"string"},"eventHandlerPropPrefix":{"type":"boolean","enum":[false]},"checkLocalVariables":{"type":"boolean"},"checkInlineFunction":{"type":"boolean"},"ignoreComponentNames":{"type":"array","uniqueItems":true,"items":{"type":"string"}}},"additionalProperties":false},{"type":"object","properties":{"eventHandlerPrefix":{"type":"boolean","enum":[false]},"eventHandlerPropPrefix":{"type":"string"},"checkLocalVariables":{"type":"boolean"},"checkInlineFunction":{"type":"boolean"},"ignoreComponentNames":{"type":"array","uniqueItems":true,"items":{"type":"string"}}},"additionalProperties":false},{"type":"object","properties":{"checkLocalVariables":{"type":"boolean"}},"additionalProperties":false},{"type":"object","properties":{"checkInlineFunction":{"type":"boolean"}},"additionalProperties":false},{"type":"object","properties":{"ignoreComponentNames":{"type":"array","uniqueItems":true,"items":{"type":"string"}}}}]}]},"react/jsx-indent":{"docs":{"description":"Enforce JSX indentation","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-indent.md"},"fixable":"whitespace","messages":{"wrongIndent":"Expected indentation of {{needed}} {{type}} {{characters}} but found {{gotten}}."},"schema":[{"anyOf":[{"enum":["tab"]},{"type":"integer"}]},{"type":"object","properties":{"checkAttributes":{"type":"boolean"},"indentLogicalExpressions":{"type":"boolean"}},"additionalProperties":false}]},"react/jsx-indent-props":{"docs":{"description":"Enforce props indentation in JSX","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-indent-props.md"},"fixable":"code","messages":{"wrongIndent":"Expected indentation of {{needed}} {{type}} {{characters}} but found {{gotten}}."},"schema":[{"anyOf":[{"enum":["tab","first"]},{"type":"integer"},{"type":"object","properties":{"indentMode":{"anyOf":[{"enum":["tab","first"]},{"type":"integer"}]},"ignoreTernaryOperator":{"type":"boolean"}}}]}]},"react/jsx-key":{"docs":{"description":"Disallow missing `key` props in iterators/collection literals","category":"Possible Errors","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-key.md"},"messages":{"missingIterKey":"Missing \"key\" prop for element in iterator","missingIterKeyUsePrag":"Missing \"key\" prop for element in iterator. Shorthand fragment syntax does not support providing keys. Use {{reactPrag}}.{{fragPrag}} instead","missingArrayKey":"Missing \"key\" prop for element in array","missingArrayKeyUsePrag":"Missing \"key\" prop for element in array. Shorthand fragment syntax does not support providing keys. Use {{reactPrag}}.{{fragPrag}} instead","keyBeforeSpread":"`key` prop must be placed before any `{...spread}, to avoid conflicting with React’s new JSX transform: https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html`","nonUniqueKeys":"`key` prop must be unique"},"schema":[{"type":"object","properties":{"checkFragmentShorthand":{"type":"boolean","default":false},"checkKeyMustBeforeSpread":{"type":"boolean","default":false},"warnOnDuplicates":{"type":"boolean","default":false}},"additionalProperties":false}]},"react/jsx-max-depth":{"docs":{"description":"Enforce JSX maximum depth","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-max-depth.md"},"messages":{"wrongDepth":"Expected the depth of nested jsx elements to be <= {{needed}}, but found {{found}}."},"schema":[{"type":"object","properties":{"max":{"type":"integer","minimum":0}},"additionalProperties":false}]},"react/jsx-max-props-per-line":{"docs":{"description":"Enforce maximum of props on a single line in JSX","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-max-props-per-line.md"},"fixable":"code","messages":{"newLine":"Prop `{{prop}}` must be placed on a new line"},"schema":[{"anyOf":[{"type":"object","properties":{"maximum":{"type":"object","properties":{"single":{"type":"integer","minimum":1},"multi":{"type":"integer","minimum":1}}}},"additionalProperties":false},{"type":"object","properties":{"maximum":{"type":"number","minimum":1},"when":{"type":"string","enum":["always","multiline"]}},"additionalProperties":false}]}]},"react/jsx-newline":{"docs":{"description":"Require or prevent a new line after jsx elements and expressions.","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-newline.md"},"fixable":"code","messages":{"require":"JSX element should start in a new line","prevent":"JSX element should not start in a new line","allowMultilines":"Multiline JSX elements should start in a new line"},"schema":[{"type":"object","properties":{"prevent":{"default":false,"type":"boolean"},"allowMultilines":{"default":false,"type":"boolean"}},"additionalProperties":false,"if":{"properties":{"allowMultilines":{"const":true}}},"then":{"properties":{"prevent":{"const":true}},"required":["prevent"]}}]},"react/jsx-no-bind":{"docs":{"description":"Disallow `.bind()` or arrow functions in JSX props","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-bind.md"},"messages":{"bindCall":"JSX props should not use .bind()","arrowFunc":"JSX props should not use arrow functions","bindExpression":"JSX props should not use ::","func":"JSX props should not use functions"},"schema":[{"type":"object","properties":{"allowArrowFunctions":{"default":false,"type":"boolean"},"allowBind":{"default":false,"type":"boolean"},"allowFunctions":{"default":false,"type":"boolean"},"ignoreRefs":{"default":false,"type":"boolean"},"ignoreDOMComponents":{"default":false,"type":"boolean"}},"additionalProperties":false}]},"react/jsx-no-comment-textnodes":{"docs":{"description":"Disallow comments from being inserted as text nodes","category":"Possible Errors","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-comment-textnodes.md"},"messages":{"putCommentInBraces":"Comments inside children section of tag should be placed inside braces"},"schema":[]},"react/jsx-no-constructed-context-values":{"docs":{"description":"Disallows JSX context provider values from taking values that will cause needless rerenders","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-constructed-context-values.md"},"messages":{"withIdentifierMsg":"The '{{variableName}}' {{type}} (at line {{nodeLine}}) passed as the value prop to the Context provider (at line {{usageLine}}) changes every render. To fix this consider wrapping it in a useMemo hook.","withIdentifierMsgFunc":"The '{{variableName}}' {{type}} (at line {{nodeLine}}) passed as the value prop to the Context provider (at line {{usageLine}}) changes every render. To fix this consider wrapping it in a useCallback hook.","defaultMsg":"The {{type}} passed as the value prop to the Context provider (at line {{nodeLine}}) changes every render. To fix this consider wrapping it in a useMemo hook.","defaultMsgFunc":"The {{type}} passed as the value prop to the Context provider (at line {{nodeLine}}) changes every render. To fix this consider wrapping it in a useCallback hook."},"schema":false},"react/jsx-no-duplicate-props":{"docs":{"description":"Disallow duplicate properties in JSX","category":"Possible Errors","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-duplicate-props.md"},"messages":{"noDuplicateProps":"No duplicate props allowed"},"schema":[{"type":"object","properties":{"ignoreCase":{"type":"boolean"}},"additionalProperties":false}]},"react/jsx-no-leaked-render":{"docs":{"description":"Disallow problematic leaked values from being rendered","category":"Possible Errors","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-leaked-render.md"},"messages":{"noPotentialLeakedRender":"Potential leaked value that might cause unintentionally rendered values or rendering crashes"},"fixable":"code","schema":[{"type":"object","properties":{"validStrategies":{"type":"array","items":{"enum":["ternary","coerce"]},"uniqueItems":true,"default":["ternary","coerce"]}},"additionalProperties":false}]},"react/jsx-no-literals":{"docs":{"description":"Disallow usage of string literals in JSX","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-literals.md"},"messages":{"invalidPropValue":"Invalid prop value: \"{{text}}\"","invalidPropValueInElement":"Invalid prop value: \"{{text}}\" in {{element}}","noStringsInAttributes":"Strings not allowed in attributes: \"{{text}}\"","noStringsInAttributesInElement":"Strings not allowed in attributes: \"{{text}}\" in {{element}}","noStringsInJSX":"Strings not allowed in JSX files: \"{{text}}\"","noStringsInJSXInElement":"Strings not allowed in JSX files: \"{{text}}\" in {{element}}","literalNotInJSXExpression":"Missing JSX expression container around literal string: \"{{text}}\"","literalNotInJSXExpressionInElement":"Missing JSX expression container around literal string: \"{{text}}\" in {{element}}"},"schema":[{"type":"object","properties":{"elementOverrides":{"type":"object","patternProperties":{"^[A-Z][\\w.]*$":{"type":"object","properties":{"applyToNestedElements":{"type":"boolean"},"noStrings":{"type":"boolean"},"allowedStrings":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"ignoreProps":{"type":"boolean"},"noAttributeStrings":{"type":"boolean"}}}}},"noStrings":{"type":"boolean"},"allowedStrings":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"ignoreProps":{"type":"boolean"},"noAttributeStrings":{"type":"boolean"}},"additionalProperties":false}]},"react/jsx-no-script-url":{"docs":{"description":"Disallow usage of `javascript:` URLs","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-script-url.md"},"messages":{"noScriptURL":"A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML, try using dangerouslySetInnerHTML instead."},"schema":{"anyOf":[{"type":"array","items":[{"type":"array","uniqueItems":true,"items":{"type":"object","properties":{"name":{"type":"string"},"props":{"type":"array","items":{"type":"string","uniqueItems":true}}},"required":["name","props"],"additionalProperties":false}},{"type":"object","properties":{"includeFromSettings":{"type":"boolean"}},"additionalItems":false}],"additionalItems":false},{"type":"array","items":[{"type":"object","properties":{"includeFromSettings":{"type":"boolean"}},"additionalItems":false}],"additionalItems":false}]}},"react/jsx-no-target-blank":{"fixable":"code","docs":{"description":"Disallow `target=\"_blank\"` attribute without `rel=\"noreferrer\"`","category":"Best Practices","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-target-blank.md"},"messages":{"noTargetBlankWithoutNoreferrer":"Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoopener":"Using target=\"_blank\" without rel=\"noreferrer\" or rel=\"noopener\" (the former implies the latter and is preferred due to wider support) is a security risk: see https://mathiasbynens.github.io/rel-noopener/#recommendations"},"schema":[{"type":"object","properties":{"allowReferrer":{"type":"boolean"},"enforceDynamicLinks":{"enum":["always","never"]},"warnOnSpreadAttributes":{"type":"boolean"},"links":{"type":"boolean","default":true},"forms":{"type":"boolean","default":false}},"additionalProperties":false}]},"react/jsx-no-useless-fragment":{"type":"suggestion","fixable":"code","docs":{"description":"Disallow unnecessary fragments","category":"Possible Errors","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-useless-fragment.md"},"messages":{"NeedsMoreChildren":"Fragments should contain more than one child - otherwise, there’s no need for a Fragment at all.","ChildOfHtmlElement":"Passing a fragment to an HTML element is useless."},"schema":[{"type":"object","properties":{"allowExpressions":{"type":"boolean"}}}]},"react/jsx-one-expression-per-line":{"docs":{"description":"Require one JSX element per line","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-one-expression-per-line.md"},"fixable":"whitespace","messages":{"moveToNewLine":"`{{descriptor}}` must be placed on a new line"},"schema":[{"type":"object","properties":{"allow":{"enum":["none","literal","single-child","non-jsx"]}},"default":{"allow":"none"},"additionalProperties":false}]},"react/jsx-no-undef":{"docs":{"description":"Disallow undeclared variables in JSX","category":"Possible Errors","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-undef.md"},"messages":{"undefined":"'{{identifier}}' is not defined."},"schema":[{"type":"object","properties":{"allowGlobals":{"type":"boolean"}},"additionalProperties":false}]},"react/jsx-curly-brace-presence":{"docs":{"description":"Disallow unnecessary JSX expressions when literals alone are sufficient or enforce JSX expressions on literals in JSX children or attributes","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-curly-brace-presence.md"},"fixable":"code","messages":{"unnecessaryCurly":"Curly braces are unnecessary here.","missingCurly":"Need to wrap this literal in a JSX expression."},"schema":[{"anyOf":[{"type":"object","properties":{"props":{"enum":["always","never","ignore"]},"children":{"enum":["always","never","ignore"]},"propElementValues":{"enum":["always","never","ignore"]}},"additionalProperties":false},{"enum":["always","never","ignore"]}]}]},"react/jsx-pascal-case":{"docs":{"description":"Enforce PascalCase for user-defined JSX components","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-pascal-case.md"},"messages":{"usePascalCase":"Imported JSX component {{name}} must be in PascalCase","usePascalOrSnakeCase":"Imported JSX component {{name}} must be in PascalCase or SCREAMING_SNAKE_CASE"},"schema":[{"type":"object","properties":{"allowAllCaps":{"type":"boolean"},"allowLeadingUnderscore":{"type":"boolean"},"allowNamespace":{"type":"boolean"},"ignore":{"items":[{"type":"string"}],"minItems":0,"type":"array","uniqueItems":true}},"additionalProperties":false}]},"react/jsx-fragments":{"docs":{"description":"Enforce shorthand or standard form for React fragments","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-fragments.md"},"fixable":"code","messages":{"fragmentsNotSupported":"Fragments are only supported starting from React v16.2. Please disable the `react/jsx-fragments` rule in `eslint` settings or upgrade your version of React.","preferPragma":"Prefer {{react}}.{{fragment}} over fragment shorthand","preferFragment":"Prefer fragment shorthand over {{react}}.{{fragment}}"},"schema":[{"enum":["syntax","element"]}]},"react/jsx-props-no-multi-spaces":{"docs":{"description":"Disallow multiple spaces between inline JSX props","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-props-no-multi-spaces.md"},"fixable":"code","messages":{"noLineGap":"Expected no line gap between “{{prop1}}” and “{{prop2}}”","onlyOneSpace":"Expected only one space between “{{prop1}}” and “{{prop2}}”"},"schema":[]},"react/jsx-props-no-spreading":{"docs":{"description":"Disallow JSX prop spreading","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-props-no-spreading.md"},"messages":{"noSpreading":"Prop spreading is forbidden"},"schema":[{"allOf":[{"type":"object","properties":{"html":{"enum":["enforce","ignore"]},"custom":{"enum":["enforce","ignore"]},"explicitSpread":{"enum":["enforce","ignore"]},"exceptions":{"type":"array","items":{"type":"string","uniqueItems":true}}}},{"not":{"type":"object","required":["html","custom"],"properties":{"html":{"enum":["ignore"]},"custom":{"enum":["ignore"]},"exceptions":{"type":"array","minItems":0,"maxItems":0}}}}]}]},"react/jsx-props-no-spread-multi":{"docs":{"description":"Disallow JSX prop spreading the same identifier multiple times","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-props-no-spread-multi.md"},"messages":{"noMultiSpreading":"Spreading the same expression multiple times is forbidden"}},"react/jsx-sort-default-props":{"deprecated":true,"replacedBy":["sort-default-props"],"docs":{"description":"Enforce defaultProps declarations alphabetical sorting","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-sort-default-props.md"},"messages":{"propsNotSorted":"Default prop types declarations should be sorted alphabetically"},"schema":[{"type":"object","properties":{"ignoreCase":{"type":"boolean"}},"additionalProperties":false}]},"react/jsx-sort-props":{"docs":{"description":"Enforce props alphabetical sorting","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-sort-props.md"},"fixable":"code","messages":{"noUnreservedProps":"A customized reserved first list must only contain a subset of React reserved props. Remove: {{unreservedWords}}","listIsEmpty":"A customized reserved first list must not be empty","listReservedPropsFirst":"Reserved props must be listed before all other props","listCallbacksLast":"Callbacks must be listed after all other props","listShorthandFirst":"Shorthand props must be listed before all other props","listShorthandLast":"Shorthand props must be listed after all other props","listMultilineFirst":"Multiline props must be listed before all other props","listMultilineLast":"Multiline props must be listed after all other props","sortPropsByAlpha":"Props should be sorted alphabetically"},"schema":[{"type":"object","properties":{"callbacksLast":{"type":"boolean"},"shorthandFirst":{"type":"boolean"},"shorthandLast":{"type":"boolean"},"multiline":{"enum":["ignore","first","last"],"default":"ignore"},"ignoreCase":{"type":"boolean"},"noSortAlphabetically":{"type":"boolean"},"reservedFirst":{"type":["array","boolean"]},"locale":{"type":"string","default":"auto"}},"additionalProperties":false}]},"react/jsx-space-before-closing":{"deprecated":true,"replacedBy":["jsx-tag-spacing"],"docs":{"description":"Enforce spacing before closing bracket in JSX","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-space-before-closing.md"},"fixable":"code","messages":{"noSpaceBeforeClose":"A space is forbidden before closing bracket","needSpaceBeforeClose":"A space is required before closing bracket"},"schema":[{"enum":["always","never"]}]},"react/jsx-tag-spacing":{"docs":{"description":"Enforce whitespace in and around the JSX opening and closing brackets","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-tag-spacing.md"},"fixable":"whitespace","messages":{"selfCloseSlashNoSpace":"Whitespace is forbidden between `/` and `>`; write `/>`","selfCloseSlashNeedSpace":"Whitespace is required between `/` and `>`; write `/ >`","closeSlashNoSpace":"Whitespace is forbidden between `<` and `/`; write `</`","closeSlashNeedSpace":"Whitespace is required between `<` and `/`; write `< /`","beforeSelfCloseNoSpace":"A space is forbidden before closing bracket","beforeSelfCloseNeedSpace":"A space is required before closing bracket","beforeSelfCloseNeedNewline":"A newline is required before closing bracket","afterOpenNoSpace":"A space is forbidden after opening bracket","afterOpenNeedSpace":"A space is required after opening bracket","beforeCloseNoSpace":"A space is forbidden before closing bracket","beforeCloseNeedSpace":"Whitespace is required before closing bracket","beforeCloseNeedNewline":"A newline is required before closing bracket"},"schema":[{"type":"object","properties":{"closingSlash":{"enum":["always","never","allow"]},"beforeSelfClosing":{"enum":["always","proportional-always","never","allow"]},"afterOpening":{"enum":["always","allow-multiline","never","allow"]},"beforeClosing":{"enum":["always","proportional-always","never","allow"]}},"default":{"closingSlash":"never","beforeSelfClosing":"always","afterOpening":"never","beforeClosing":"allow"},"additionalProperties":false}]},"react/jsx-uses-react":{"docs":{"description":"Disallow React to be incorrectly marked as unused","category":"Best Practices","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-uses-react.md"},"schema":[]},"react/jsx-uses-vars":{"docs":{"description":"Disallow variables used in JSX to be incorrectly marked as unused","category":"Best Practices","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-uses-vars.md"},"schema":[]},"react/jsx-wrap-multilines":{"docs":{"description":"Disallow missing parentheses around multiline JSX","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-wrap-multilines.md"},"fixable":"code","messages":{"missingParens":"Missing parentheses around multilines JSX","extraParens":"Expected no parentheses around multilines JSX","parensOnNewLines":"Parentheses around JSX should be on separate lines"},"schema":[{"type":"object","properties":{"declaration":{"enum":[true,false,"ignore","parens","parens-new-line","never"]},"assignment":{"enum":[true,false,"ignore","parens","parens-new-line","never"]},"return":{"enum":[true,false,"ignore","parens","parens-new-line","never"]},"arrow":{"enum":[true,false,"ignore","parens","parens-new-line","never"]},"condition":{"enum":[true,false,"ignore","parens","parens-new-line","never"]},"logical":{"enum":[true,false,"ignore","parens","parens-new-line","never"]},"prop":{"enum":[true,false,"ignore","parens","parens-new-line","never"]}},"additionalProperties":false}]},"react/no-invalid-html-attribute":{"docs":{"description":"Disallow usage of invalid attributes","category":"Possible Errors","url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-invalid-html-attribute.md"},"messages":{"emptyIsMeaningless":"An empty “{{attributeName}}” attribute is meaningless.","neverValid":"“{{reportingValue}}” is never a valid “{{attributeName}}” attribute value.","noEmpty":"An empty “{{attributeName}}” attribute is meaningless.","noMethod":"The ”{{attributeName}}“ attribute cannot be a method.","notAlone":"“{{reportingValue}}” must be directly followed by “{{missingValue}}”.","notPaired":"“{{reportingValue}}” can not be directly followed by “{{secondValue}}” without “{{missingValue}}”.","notValidFor":"“{{reportingValue}}” is not a valid “{{attributeName}}” attribute value for <{{elementName}}>.","onlyMeaningfulFor":"The ”{{attributeName}}“ attribute only has meaning on the tags: {{tagNames}}","onlyStrings":"“{{attributeName}}” attribute only supports strings.","spaceDelimited":"”{{attributeName}}“ attribute values should be space delimited.","suggestRemoveDefault":"\"remove {{attributeName}}\"","suggestRemoveEmpty":"\"remove empty attribute {{attributeName}}\"","suggestRemoveInvalid":"“remove invalid attribute {{reportingValue}}”","suggestRemoveWhitespaces":"remove whitespaces in “{{attributeName}}”","suggestRemoveNonString":"remove non-string value in “{{attributeName}}”"},"schema":[{"type":"array","uniqueItems":true,"items":{"enum":["rel"]}}],"type":"suggestion","hasSuggestions":true},"react/no-access-state-in-setstate":{"docs":{"description":"Disallow when this.state is accessed within setState","category":"Possible Errors","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-access-state-in-setstate.md"},"messages":{"useCallback":"Use callback in setState when referencing the previous state."}},"react/no-adjacent-inline-elements":{"docs":{"description":"Disallow adjacent inline elements not separated by whitespace.","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-adjacent-inline-elements.md"},"schema":[],"messages":{"inlineElement":"Child elements which render as inline HTML elements should be separated by a space or wrapped in block level elements."}},"react/no-array-index-key":{"docs":{"description":"Disallow usage of Array index in keys","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-array-index-key.md"},"messages":{"noArrayIndex":"Do not use Array index in keys"},"schema":[]},"react/no-arrow-function-lifecycle":{"docs":{"description":"Lifecycle methods should be methods on the prototype, not class fields","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-arrow-function-lifecycle.md"},"messages":{"lifecycle":"{{propertyName}} is a React lifecycle method, and should not be an arrow function or in a class field. Use an instance method instead."},"schema":[],"fixable":"code"},"react/no-children-prop":{"docs":{"description":"Disallow passing of children as props","category":"Best Practices","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-children-prop.md"},"messages":{"nestChildren":"Do not pass children as props. Instead, nest children between the opening and closing tags.","passChildrenAsArgs":"Do not pass children as props. Instead, pass them as additional arguments to React.createElement.","nestFunction":"Do not nest a function between the opening and closing tags. Instead, pass it as a prop.","passFunctionAsArgs":"Do not pass a function as an additional argument to React.createElement. Instead, pass it as a prop."},"schema":[{"type":"object","properties":{"allowFunctions":{"type":"boolean","default":false}},"additionalProperties":false}]},"react/no-danger":{"docs":{"description":"Disallow usage of dangerous JSX properties","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-danger.md"},"messages":{"dangerousProp":"Dangerous property '{{name}}' found"},"schema":[{"type":"object","properties":{"customComponentNames":{"items":{"type":"string"},"minItems":0,"type":"array","uniqueItems":true}}}]},"react/no-danger-with-children":{"docs":{"description":"Disallow when a DOM element is using both children and dangerouslySetInnerHTML","category":"Possible Errors","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-danger-with-children.md"},"messages":{"dangerWithChildren":"Only set one of `children` or `props.dangerouslySetInnerHTML`"},"schema":[]},"react/no-deprecated":{"docs":{"description":"Disallow usage of deprecated methods","category":"Best Practices","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-deprecated.md"},"messages":{"deprecated":"{{oldMethod}} is deprecated since React {{version}}{{newMethod}}{{refs}}"},"schema":[]},"react/no-did-mount-set-state":{"docs":{"description":"Disallow usage of setState in componentDidMount","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-did-mount-set-state.md"},"messages":{"noSetState":"Do not use setState in {{name}}"},"schema":[{"enum":["disallow-in-func"]}]},"react/no-did-update-set-state":{"docs":{"description":"Disallow usage of setState in componentDidUpdate","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-did-update-set-state.md"},"messages":{"noSetState":"Do not use setState in {{name}}"},"schema":[{"enum":["disallow-in-func"]}]},"react/no-direct-mutation-state":{"docs":{"description":"Disallow direct mutation of this.state","category":"Possible Errors","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-direct-mutation-state.md"},"messages":{"noDirectMutation":"Do not mutate state directly. Use setState()."}},"react/no-find-dom-node":{"docs":{"description":"Disallow usage of findDOMNode","category":"Best Practices","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-find-dom-node.md"},"messages":{"noFindDOMNode":"Do not use findDOMNode. It doesn’t work with function components and is deprecated in StrictMode. See https://reactjs.org/docs/react-dom.html#finddomnode"},"schema":[]},"react/no-is-mounted":{"docs":{"description":"Disallow usage of isMounted","category":"Best Practices","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-is-mounted.md"},"messages":{"noIsMounted":"Do not use isMounted"},"schema":[]},"react/no-multi-comp":{"docs":{"description":"Disallow multiple component definition per file","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-multi-comp.md"},"messages":{"onlyOneComponent":"Declare only one React component per file"},"schema":[{"type":"object","properties":{"ignoreStateless":{"default":false,"type":"boolean"}},"additionalProperties":false}]},"react/no-namespace":{"docs":{"description":"Enforce that namespaces are not used in React elements","category":"Possible Errors","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-namespace.md"},"messages":{"noNamespace":"React component {{name}} must not be in a namespace, as React does not support them"},"schema":[]},"react/no-set-state":{"docs":{"description":"Disallow usage of setState","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-set-state.md"},"messages":{"noSetState":"Do not use setState"},"schema":[]},"react/no-string-refs":{"docs":{"description":"Disallow using string references","category":"Best Practices","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-string-refs.md"},"messages":{"thisRefsDeprecated":"Using this.refs is deprecated.","stringInRefDeprecated":"Using string literals in ref attributes is deprecated."},"schema":[{"type":"object","properties":{"noTemplateLiterals":{"type":"boolean"}},"additionalProperties":false}]},"react/no-redundant-should-component-update":{"docs":{"description":"Disallow usage of shouldComponentUpdate when extending React.PureComponent","category":"Possible Errors","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-redundant-should-component-update.md"},"messages":{"noShouldCompUpdate":"{{component}} does not need shouldComponentUpdate when extending React.PureComponent."},"schema":[]},"react/no-render-return-value":{"docs":{"description":"Disallow usage of the return value of ReactDOM.render","category":"Best Practices","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-render-return-value.md"},"messages":{"noReturnValue":"Do not depend on the return value from {{node}}.render"},"schema":[]},"react/no-this-in-sfc":{"docs":{"description":"Disallow `this` from being used in stateless functional components","category":"Possible Errors","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-this-in-sfc.md"},"messages":{"noThisInSFC":"Stateless functional components should not use `this`"},"schema":[]},"react/no-typos":{"docs":{"description":"Disallow common typos","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-typos.md"},"messages":{"typoPropTypeChain":"Typo in prop type chain qualifier: {{name}}","typoPropType":"Typo in declared prop type: {{name}}","typoStaticClassProp":"Typo in static class property declaration","typoPropDeclaration":"Typo in property declaration","typoLifecycleMethod":"Typo in component lifecycle method declaration: {{actual}} should be {{expected}}","staticLifecycleMethod":"Lifecycle method should be static: {{method}}","noPropTypesBinding":"`'prop-types'` imported without a local `PropTypes` binding.","noReactBinding":"`'react'` imported without a local `React` binding."},"schema":[]},"react/no-unescaped-entities":{"hasSuggestions":true,"docs":{"description":"Disallow unescaped HTML entities from appearing in markup","category":"Possible Errors","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unescaped-entities.md"},"messages":{"unescapedEntity":"HTML entity, `{{entity}}` , must be escaped.","unescapedEntityAlts":"`{{entity}}` can be escaped with {{alts}}.","replaceWithAlt":"Replace with `{{alt}}`."},"schema":[{"type":"object","properties":{"forbid":{"type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"char":{"type":"string"},"alternatives":{"type":"array","uniqueItems":true,"items":{"type":"string"}}}}]}}},"additionalProperties":false}]},"react/no-unknown-property":{"docs":{"description":"Disallow usage of unknown DOM property","category":"Possible Errors","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unknown-property.md"},"fixable":"code","messages":{"invalidPropOnTag":"Invalid property '{{name}}' found on tag '{{tagName}}', but it is only allowed on: {{allowedTags}}","unknownPropWithStandardName":"Unknown property '{{name}}' found, use '{{standardName}}' instead","unknownProp":"Unknown property '{{name}}' found","dataLowercaseRequired":"React does not recognize data-* props with uppercase characters on a DOM element. Found '{{name}}', use '{{lowerCaseName}}' instead"},"schema":[{"type":"object","properties":{"ignore":{"type":"array","items":{"type":"string"}},"requireDataLowercase":{"type":"boolean","default":false}},"additionalProperties":false}]},"react/no-unsafe":{"docs":{"description":"Disallow usage of unsafe lifecycle methods","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unsafe.md"},"messages":{"unsafeMethod":"{{method}} is unsafe for use in async rendering. Update the component to use {{newMethod}} instead. {{details}}"},"schema":[{"type":"object","properties":{"checkAliases":{"default":false,"type":"boolean"}},"additionalProperties":false}]},"react/no-unstable-nested-components":{"docs":{"description":"Disallow creating unstable components inside components","category":"Possible Errors","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unstable-nested-components.md"},"schema":[{"type":"object","properties":{"customValidators":{"type":"array","items":{"type":"string"}},"allowAsProps":{"type":"boolean"},"propNamePattern":{"type":"string"}},"additionalProperties":false}]},"react/no-unused-class-component-methods":{"docs":{"description":"Disallow declaring unused methods of component class","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unused-class-component-methods.md"},"messages":{"unused":"Unused method or property \"{{name}}\"","unusedWithClass":"Unused method or property \"{{name}}\" of class \"{{className}}\""},"schema":[]},"react/no-unused-prop-types":{"docs":{"description":"Disallow definitions of unused propTypes","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unused-prop-types.md"},"messages":{"unusedPropType":"'{{name}}' PropType is defined but prop is never used"},"schema":[{"type":"object","properties":{"ignore":{"type":"array","items":{"type":"string"},"uniqueItems":true},"customValidators":{"type":"array","items":{"type":"string"}},"skipShapeProps":{"type":"boolean"}},"additionalProperties":false}]},"react/no-unused-state":{"docs":{"description":"Disallow definitions of unused state","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unused-state.md"},"messages":{"unusedStateField":"Unused state field: '{{name}}'"},"schema":[]},"react/no-object-type-as-default-prop":{"docs":{"description":"Disallow usage of referential-type variables as default param in functional component","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-object-type-as-default-prop.md"},"messages":{"forbiddenTypeDefaultParam":"{{propName}} has a/an {{forbiddenType}} as default prop. This could lead to potential infinite render loop in React. Use a variable reference instead of {{forbiddenType}}."}},"react/no-will-update-set-state":{"docs":{"description":"Disallow usage of setState in componentWillUpdate","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-will-update-set-state.md"},"messages":{"noSetState":"Do not use setState in {{name}}"},"schema":[{"enum":["disallow-in-func"]}]},"react/prefer-es6-class":{"docs":{"description":"Enforce ES5 or ES6 class for React Components","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/prefer-es6-class.md"},"messages":{"shouldUseES6Class":"Component should use es6 class instead of createClass","shouldUseCreateClass":"Component should use createClass instead of es6 class"},"schema":[{"enum":["always","never"]}]},"react/prefer-exact-props":{"docs":{"description":"Prefer exact proptype definitions","category":"Possible Errors","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/prefer-exact-props.md"},"messages":{"propTypes":"Component propTypes should be exact by using {{exactPropWrappers}}.","flow":"Component flow props should be set with exact objects."},"schema":[]},"react/prefer-read-only-props":{"docs":{"description":"Enforce that props are read-only","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/prefer-read-only-props.md"},"fixable":"code","messages":{"readOnlyProp":"Prop '{{name}}' should be read-only."},"schema":[]},"react/prefer-stateless-function":{"docs":{"description":"Enforce stateless components to be written as a pure function","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/prefer-stateless-function.md"},"messages":{"componentShouldBePure":"Component should be written as a pure function"},"schema":[{"type":"object","properties":{"ignorePureComponents":{"default":false,"type":"boolean"}},"additionalProperties":false}]},"react/prop-types":{"docs":{"description":"Disallow missing props validation in a React component definition","category":"Best Practices","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/prop-types.md"},"messages":{"missingPropType":"'{{name}}' is missing in props validation"},"schema":[{"type":"object","properties":{"ignore":{"type":"array","items":{"type":"string"}},"customValidators":{"type":"array","items":{"type":"string"}},"skipUndeclared":{"type":"boolean"}},"additionalProperties":false}]},"react/react-in-jsx-scope":{"docs":{"description":"Disallow missing React when using JSX","category":"Possible Errors","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/react-in-jsx-scope.md"},"messages":{"notInScope":"'{{name}}' must be in scope when using JSX"},"schema":[]},"react/require-default-props":{"docs":{"description":"Enforce a defaultProps definition for every prop that is not a required prop","category":"Best Practices","url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/require-default-props.md"},"messages":{"noDefaultWithRequired":"propType \"{{name}}\" is required and should not have a defaultProps declaration.","shouldHaveDefault":"propType \"{{name}}\" is not required, but has no corresponding defaultProps declaration.","noDefaultPropsWithFunction":"Don’t use defaultProps with function components.","shouldAssignObjectDefault":"propType \"{{name}}\" is not required, but has no corresponding default argument value.","destructureInSignature":"Must destructure props in the function signature to initialize an optional prop."},"schema":[{"type":"object","properties":{"forbidDefaultForRequired":{"type":"boolean"},"classes":{"enum":["defaultProps","ignore"]},"functions":{"enum":["defaultArguments","defaultProps","ignore"]},"ignoreFunctionalComponents":{"type":"boolean"}},"additionalProperties":false}]},"react/require-optimization":{"docs":{"description":"Enforce React components to have a shouldComponentUpdate method","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/require-optimization.md"},"messages":{"noShouldComponentUpdate":"Component is not optimized. Please add a shouldComponentUpdate method."},"schema":[{"type":"object","properties":{"allowDecorators":{"type":"array","items":{"type":"string"}}},"additionalProperties":false}]},"react/require-render-return":{"docs":{"description":"Enforce ES5 or ES6 class for returning value in render function","category":"Possible Errors","recommended":true,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/require-render-return.md"},"messages":{"noRenderReturn":"Your render method should have a return statement"},"schema":[]},"react/self-closing-comp":{"docs":{"description":"Disallow extra closing tags for components without children","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/self-closing-comp.md"},"fixable":"code","messages":{"notSelfClosing":"Empty components are self-closing"},"schema":[{"type":"object","properties":{"component":{"default":true,"type":"boolean"},"html":{"default":true,"type":"boolean"}},"additionalProperties":false}]},"react/sort-comp":{"docs":{"description":"Enforce component methods order","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/sort-comp.md"},"messages":{"unsortedProps":"{{propA}} should be placed {{position}} {{propB}}"},"schema":[{"type":"object","properties":{"order":{"type":"array","items":{"type":"string"}},"groups":{"type":"object","patternProperties":{"^.*$":{"type":"array","items":{"type":"string"}}}}},"additionalProperties":false}]},"react/sort-default-props":{"docs":{"description":"Enforce defaultProps declarations alphabetical sorting","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/sort-default-props.md"},"messages":{"propsNotSorted":"Default prop types declarations should be sorted alphabetically"},"schema":[{"type":"object","properties":{"ignoreCase":{"type":"boolean"}},"additionalProperties":false}]},"react/sort-prop-types":{"docs":{"description":"Enforce propTypes declarations alphabetical sorting","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/sort-prop-types.md"},"fixable":"code","messages":{"requiredPropsFirst":"Required prop types must be listed before all other prop types","callbackPropsLast":"Callback prop types must be listed after all other prop types","propsNotSorted":"Prop types declarations should be sorted alphabetically"},"schema":[{"type":"object","properties":{"requiredFirst":{"type":"boolean"},"callbacksLast":{"type":"boolean"},"ignoreCase":{"type":"boolean"},"noSortAlphabetically":{"type":"boolean"},"sortShapeProp":{"type":"boolean"},"checkTypes":{"type":"boolean"}},"additionalProperties":false}]},"react/state-in-constructor":{"docs":{"description":"Enforce class component state initialization style","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/state-in-constructor.md"},"messages":{"stateInitConstructor":"State initialization should be in a constructor","stateInitClassProp":"State initialization should be in a class property"},"schema":[{"enum":["always","never"]}]},"react/static-property-placement":{"docs":{"description":"Enforces where React component static properties should be positioned.","category":"Stylistic Issues","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/static-property-placement.md"},"fixable":null,"messages":{"notStaticClassProp":"'{{name}}' should be declared as a static class property.","notGetterClassFunc":"'{{name}}' should be declared as a static getter class function.","declareOutsideClass":"'{{name}}' should be declared outside the class body."},"schema":[{"enum":["static public field","static getter","property assignment"]},{"type":"object","properties":{"propTypes":{"enum":["static public field","static getter","property assignment"]},"defaultProps":{"enum":["static public field","static getter","property assignment"]},"childContextTypes":{"enum":["static public field","static getter","property assignment"]},"contextTypes":{"enum":["static public field","static getter","property assignment"]},"contextType":{"enum":["static public field","static getter","property assignment"]},"displayName":{"enum":["static public field","static getter","property assignment"]}},"additionalProperties":false}]},"react/style-prop-object":{"docs":{"description":"Enforce style prop value is an object","category":"Possible Errors","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/style-prop-object.md"},"messages":{"stylePropNotObject":"Style prop value must be an object"},"schema":[{"type":"object","properties":{"allow":{"type":"array","items":{"type":"string"},"additionalItems":false,"uniqueItems":true}}}]},"react/void-dom-elements-no-children":{"docs":{"description":"Disallow void DOM elements (e.g. `<img />`, `<br />`) from receiving children","category":"Best Practices","recommended":false,"url":"https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/void-dom-elements-no-children.md"},"messages":{"noChildrenInVoidEl":"Void DOM element <{{element}} /> cannot receive children."},"schema":[]},"import/no-unresolved":{"type":"problem","docs":{"category":"Static analysis","description":"Ensure imports point to a file/module that can be resolved.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-unresolved.md"},"schema":[{"type":"object","properties":{"commonjs":{"type":"boolean"},"amd":{"type":"boolean"},"esmodule":{"type":"boolean"},"ignore":{"type":"array","minItems":1,"items":{"type":"string"},"uniqueItems":true},"caseSensitive":{"type":"boolean","default":true},"caseSensitiveStrict":{"type":"boolean","default":false}},"additionalProperties":false}]},"import/named":{"type":"problem","docs":{"category":"Static analysis","description":"Ensure named imports correspond to a named export in the remote file.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/named.md"},"schema":[{"type":"object","properties":{"commonjs":{"type":"boolean"}},"additionalProperties":false}]},"import/default":{"type":"problem","docs":{"category":"Static analysis","description":"Ensure a default export is present, given a default import.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/default.md"},"schema":[]},"import/namespace":{"type":"problem","docs":{"category":"Static analysis","description":"Ensure imported namespaces contain dereferenced properties as they are dereferenced.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/namespace.md"},"schema":[{"type":"object","properties":{"allowComputed":{"description":"If `false`, will report computed (and thus, un-lintable) references to namespace members.","type":"boolean","default":false}},"additionalProperties":false}]},"import/no-namespace":{"type":"suggestion","docs":{"category":"Style guide","description":"Forbid namespace (a.k.a. \"wildcard\" `*`) imports.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-namespace.md"},"fixable":"code","schema":[{"type":"object","properties":{"ignore":{"type":"array","items":{"type":"string"},"uniqueItems":true}}}]},"import/export":{"type":"problem","docs":{"category":"Helpful warnings","description":"Forbid any invalid exports, i.e. re-export of the same name.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/export.md"},"schema":[]},"import/no-mutable-exports":{"type":"suggestion","docs":{"category":"Helpful warnings","description":"Forbid the use of mutable exports with `var` or `let`.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-mutable-exports.md"},"schema":[]},"import/extensions":{"type":"suggestion","docs":{"category":"Style guide","description":"Ensure consistent use of file extension within the import path.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/extensions.md"},"schema":{"anyOf":[{"type":"array","items":[{"enum":["always","ignorePackages","never"]}],"additionalItems":false},{"type":"array","items":[{"enum":["always","ignorePackages","never"]},{"type":"object","properties":{"pattern":{"type":"object","patternProperties":{".*":{"enum":["always","ignorePackages","never"]}}},"checkTypeImports":{"type":"boolean"},"ignorePackages":{"type":"boolean"}}}],"additionalItems":false},{"type":"array","items":[{"type":"object","properties":{"pattern":{"type":"object","patternProperties":{".*":{"enum":["always","ignorePackages","never"]}}},"checkTypeImports":{"type":"boolean"},"ignorePackages":{"type":"boolean"}}}],"additionalItems":false},{"type":"array","items":[{"type":"object","patternProperties":{".*":{"enum":["always","ignorePackages","never"]}}}],"additionalItems":false},{"type":"array","items":[{"enum":["always","ignorePackages","never"]},{"type":"object","patternProperties":{".*":{"enum":["always","ignorePackages","never"]}}}],"additionalItems":false}]}},"import/no-restricted-paths":{"type":"problem","docs":{"category":"Static analysis","description":"Enforce which files can be imported in a given folder.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-restricted-paths.md"},"schema":[{"type":"object","properties":{"zones":{"type":"array","minItems":1,"items":{"type":"object","properties":{"target":{"anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"},"uniqueItems":true,"minLength":1}]},"from":{"anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"},"uniqueItems":true,"minLength":1}]},"except":{"type":"array","items":{"type":"string"},"uniqueItems":true},"message":{"type":"string"}},"additionalProperties":false}},"basePath":{"type":"string"}},"additionalProperties":false}]},"import/no-internal-modules":{"type":"suggestion","docs":{"category":"Static analysis","description":"Forbid importing the submodules of other modules.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-internal-modules.md"},"schema":[{"anyOf":[{"type":"object","properties":{"allow":{"type":"array","items":{"type":"string"}}},"additionalProperties":false},{"type":"object","properties":{"forbid":{"type":"array","items":{"type":"string"}}},"additionalProperties":false}]}]},"import/group-exports":{"type":"suggestion","docs":{"category":"Style guide","description":"Prefer named exports to be grouped together in a single export declaration","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/group-exports.md"}},"import/no-relative-packages":{"type":"suggestion","docs":{"category":"Static analysis","description":"Forbid importing packages through relative paths.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-relative-packages.md"},"fixable":"code","schema":[{"type":"object","properties":{"commonjs":{"type":"boolean"},"amd":{"type":"boolean"},"esmodule":{"type":"boolean"},"ignore":{"type":"array","minItems":1,"items":{"type":"string"},"uniqueItems":true}},"additionalProperties":false}]},"import/no-relative-parent-imports":{"type":"suggestion","docs":{"category":"Static analysis","description":"Forbid importing modules from parent directories.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-relative-parent-imports.md"},"schema":[{"type":"object","properties":{"commonjs":{"type":"boolean"},"amd":{"type":"boolean"},"esmodule":{"type":"boolean"},"ignore":{"type":"array","minItems":1,"items":{"type":"string"},"uniqueItems":true}},"additionalProperties":false}]},"import/consistent-type-specifier-style":{"type":"suggestion","docs":{"category":"Style guide","description":"Enforce or ban the use of inline type-only markers for named imports.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/consistent-type-specifier-style.md"},"fixable":"code","schema":[{"type":"string","enum":["prefer-inline","prefer-top-level"],"default":"prefer-inline"}]},"import/no-self-import":{"type":"problem","docs":{"category":"Static analysis","description":"Forbid a module from importing itself.","recommended":true,"url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-self-import.md"},"schema":[]},"import/no-cycle":{"type":"suggestion","docs":{"category":"Static analysis","description":"Forbid a module from importing a module with a dependency path back to itself.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-cycle.md"},"schema":[{"type":"object","properties":{"commonjs":{"type":"boolean"},"amd":{"type":"boolean"},"esmodule":{"type":"boolean"},"ignore":{"type":"array","minItems":1,"items":{"type":"string"},"uniqueItems":true},"maxDepth":{"anyOf":[{"description":"maximum dependency depth to traverse","type":"integer","minimum":1},{"enum":["∞"],"type":"string"}]},"ignoreExternal":{"description":"ignore external modules","type":"boolean","default":false},"allowUnsafeDynamicCyclicDependency":{"description":"Allow cyclic dependency if there is at least one dynamic import in the chain","type":"boolean","default":false},"disableScc":{"description":"When true, don't calculate a strongly-connected-components graph. SCC is used to reduce the time-complexity of cycle detection, but adds overhead.","type":"boolean","default":false}},"additionalProperties":false}]},"import/no-named-default":{"type":"suggestion","docs":{"category":"Style guide","description":"Forbid named default exports.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-named-default.md"},"schema":[]},"import/no-named-as-default":{"type":"problem","docs":{"category":"Helpful warnings","description":"Forbid use of exported name as identifier of default export.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-named-as-default.md"},"schema":[]},"import/no-named-as-default-member":{"type":"suggestion","docs":{"category":"Helpful warnings","description":"Forbid use of exported name as property of default export.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-named-as-default-member.md"},"schema":[]},"import/no-anonymous-default-export":{"type":"suggestion","docs":{"category":"Style guide","description":"Forbid anonymous values as default exports.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-anonymous-default-export.md"},"schema":[{"type":"object","properties":{"allowArray":{"description":"If `false`, will report default export of an array","type":"boolean"},"allowArrowFunction":{"description":"If `false`, will report default export of an arrow function","type":"boolean"},"allowCallExpression":{"description":"If `false`, will report default export of a function call","type":"boolean"},"allowAnonymousClass":{"description":"If `false`, will report default export of an anonymous class","type":"boolean"},"allowAnonymousFunction":{"description":"If `false`, will report default export of an anonymous function","type":"boolean"},"allowLiteral":{"description":"If `false`, will report default export of a literal","type":"boolean"},"allowObject":{"description":"If `false`, will report default export of an object expression","type":"boolean"},"allowNew":{"description":"If `false`, will report default export of a class instantiation","type":"boolean"}},"additionalProperties":false}]},"import/no-unused-modules":{"type":"suggestion","docs":{"category":"Helpful warnings","description":"Forbid modules without exports, or exports without matching import in another module.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-unused-modules.md"},"schema":[{"properties":{"src":{"description":"files/paths to be analyzed (only for unused exports)","type":"array","uniqueItems":true,"items":{"type":"string","minLength":1}},"ignoreExports":{"description":"files/paths for which unused exports will not be reported (e.g module entry points)","type":"array","uniqueItems":true,"items":{"type":"string","minLength":1}},"missingExports":{"description":"report modules without any exports","type":"boolean"},"unusedExports":{"description":"report exports without any usage","type":"boolean"},"ignoreUnusedTypeExports":{"description":"ignore type exports without any usage","type":"boolean"}},"anyOf":[{"properties":{"unusedExports":{"enum":[true]},"src":{"minItems":1}},"required":["unusedExports"]},{"properties":{"missingExports":{"enum":[true]}},"required":["missingExports"]}]}]},"import/no-commonjs":{"type":"suggestion","docs":{"category":"Module systems","description":"Forbid CommonJS `require` calls and `module.exports` or `exports.*`.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-commonjs.md"},"schema":{"anyOf":[{"type":"array","items":[{"enum":["allow-primitive-modules"]}],"additionalItems":false},{"type":"array","items":[{"type":"object","properties":{"allowPrimitiveModules":{"type":"boolean"},"allowRequire":{"type":"boolean"},"allowConditionalRequire":{"type":"boolean"}},"additionalProperties":false}],"additionalItems":false}]}},"import/no-amd":{"type":"suggestion","docs":{"category":"Module systems","description":"Forbid AMD `require` and `define` calls.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-amd.md"},"schema":[]},"import/no-duplicates":{"type":"problem","docs":{"category":"Style guide","description":"Forbid repeated import of the same module in multiple places.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-duplicates.md"},"fixable":"code","schema":[{"type":"object","properties":{"considerQueryString":{"type":"boolean"},"prefer-inline":{"type":"boolean"}},"additionalProperties":false}]},"import/first":{"type":"suggestion","docs":{"category":"Style guide","description":"Ensure all imports appear before other statements.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/first.md"},"fixable":"code","schema":[{"type":"string","enum":["absolute-first","disable-absolute-first"]}]},"import/max-dependencies":{"type":"suggestion","docs":{"category":"Style guide","description":"Enforce the maximum number of dependencies a module can have.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/max-dependencies.md"},"schema":[{"type":"object","properties":{"max":{"type":"number"},"ignoreTypeImports":{"type":"boolean"}},"additionalProperties":false}]},"import/no-extraneous-dependencies":{"type":"problem","docs":{"category":"Helpful warnings","description":"Forbid the use of extraneous packages.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-extraneous-dependencies.md"},"schema":[{"type":"object","properties":{"devDependencies":{"type":["boolean","array"]},"optionalDependencies":{"type":["boolean","array"]},"peerDependencies":{"type":["boolean","array"]},"bundledDependencies":{"type":["boolean","array"]},"packageDir":{"type":["string","array"]},"includeInternal":{"type":["boolean"]},"includeTypes":{"type":["boolean"]}},"additionalProperties":false}]},"import/no-absolute-path":{"type":"suggestion","docs":{"category":"Static analysis","description":"Forbid import of modules using absolute paths.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-absolute-path.md"},"fixable":"code","schema":[{"type":"object","properties":{"commonjs":{"type":"boolean"},"amd":{"type":"boolean"},"esmodule":{"type":"boolean"},"ignore":{"type":"array","minItems":1,"items":{"type":"string"},"uniqueItems":true}},"additionalProperties":false}]},"import/no-nodejs-modules":{"type":"suggestion","docs":{"category":"Module systems","description":"Forbid Node.js builtin modules.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-nodejs-modules.md"},"schema":[{"type":"object","properties":{"allow":{"type":"array","uniqueItems":true,"items":{"type":"string"}}},"additionalProperties":false}]},"import/no-webpack-loader-syntax":{"type":"problem","docs":{"category":"Static analysis","description":"Forbid webpack loader syntax in imports.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-webpack-loader-syntax.md"},"schema":[]},"import/order":{"type":"suggestion","docs":{"category":"Style guide","description":"Enforce a convention in module import order.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/order.md"},"fixable":"code","schema":[{"type":"object","properties":{"groups":{"type":"array"},"pathGroupsExcludedImportTypes":{"type":"array"},"distinctGroup":{"type":"boolean","default":true},"pathGroups":{"type":"array","items":{"type":"object","properties":{"pattern":{"type":"string"},"patternOptions":{"type":"object"},"group":{"type":"string","enum":["builtin","external","internal","unknown","parent","sibling","index","object","type"]},"position":{"type":"string","enum":["after","before"]}},"additionalProperties":false,"required":["pattern","group"]}},"newlines-between":{"enum":["ignore","always","always-and-inside-groups","never"]},"named":{"default":false,"oneOf":[{"type":"boolean"},{"type":"object","properties":{"enabled":{"type":"boolean"},"import":{"type":"boolean"},"export":{"type":"boolean"},"require":{"type":"boolean"},"cjsExports":{"type":"boolean"},"types":{"type":"string","enum":["mixed","types-first","types-last"]}},"additionalProperties":false}]},"alphabetize":{"type":"object","properties":{"caseInsensitive":{"type":"boolean","default":false},"order":{"enum":["ignore","asc","desc"],"default":"ignore"},"orderImportKind":{"enum":["ignore","asc","desc"],"default":"ignore"}},"additionalProperties":false},"warnOnUnassignedImports":{"type":"boolean","default":false}},"additionalProperties":false}]},"import/newline-after-import":{"type":"layout","docs":{"category":"Style guide","description":"Enforce a newline after import statements.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/newline-after-import.md"},"fixable":"whitespace","schema":[{"type":"object","properties":{"count":{"type":"integer","minimum":1},"exactCount":{"type":"boolean"},"considerComments":{"type":"boolean"}},"additionalProperties":false}]},"import/prefer-default-export":{"type":"suggestion","docs":{"category":"Style guide","description":"Prefer a default export if module exports a single name or multiple names.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/prefer-default-export.md"},"schema":[{"type":"object","properties":{"target":{"type":"string","enum":["single","any"],"default":"single"}},"additionalProperties":false}]},"import/no-default-export":{"type":"suggestion","docs":{"category":"Style guide","description":"Forbid default exports.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-default-export.md"},"schema":[]},"import/no-named-export":{"type":"suggestion","docs":{"category":"Style guide","description":"Forbid named exports.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-named-export.md"},"schema":[]},"import/no-dynamic-require":{"type":"suggestion","docs":{"category":"Static analysis","description":"Forbid `require()` calls with expressions.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-dynamic-require.md"},"schema":[{"type":"object","properties":{"esmodule":{"type":"boolean"}},"additionalProperties":false}]},"import/unambiguous":{"type":"suggestion","docs":{"category":"Module systems","description":"Forbid potentially ambiguous parse goal (`script` vs. `module`).","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/unambiguous.md"},"schema":[]},"import/no-unassigned-import":{"type":"suggestion","docs":{"category":"Style guide","description":"Forbid unassigned imports","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-unassigned-import.md"},"schema":[{"type":"object","properties":{"devDependencies":{"type":["boolean","array"]},"optionalDependencies":{"type":["boolean","array"]},"peerDependencies":{"type":["boolean","array"]},"allow":{"type":"array","items":{"type":"string"}}},"additionalProperties":false}]},"import/no-useless-path-segments":{"type":"suggestion","docs":{"category":"Static analysis","description":"Forbid unnecessary path segments in import and require statements.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-useless-path-segments.md"},"fixable":"code","schema":[{"type":"object","properties":{"commonjs":{"type":"boolean"},"noUselessIndex":{"type":"boolean"}},"additionalProperties":false}]},"import/dynamic-import-chunkname":{"type":"suggestion","docs":{"category":"Style guide","description":"Enforce a leading comment with the webpackChunkName for dynamic imports.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/dynamic-import-chunkname.md"},"schema":[{"type":"object","properties":{"importFunctions":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"allowEmpty":{"type":"boolean"},"webpackChunknameFormat":{"type":"string"}}}],"hasSuggestions":true},"import/no-import-module-exports":{"type":"problem","docs":{"category":"Module systems","description":"Forbid import statements with CommonJS module.exports.","recommended":true},"fixable":"code","schema":[{"type":"object","properties":{"exceptions":{"type":"array"}},"additionalProperties":false}]},"import/no-empty-named-blocks":{"type":"suggestion","docs":{"category":"Helpful warnings","description":"Forbid empty named import blocks.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-empty-named-blocks.md"},"fixable":"code","schema":[],"hasSuggestions":true},"import/exports-last":{"type":"suggestion","docs":{"category":"Style guide","description":"Ensure all exports appear after other statements.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/exports-last.md"},"schema":[]},"import/no-deprecated":{"type":"suggestion","docs":{"category":"Helpful warnings","description":"Forbid imported names marked with `@deprecated` documentation tag.","url":"https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-deprecated.md"},"schema":[]},"import/imports-first":{"type":"suggestion","docs":{"category":"Style guide","description":"Replaced by `import/first`.","url":"https://github.com/import-js/eslint-plugin-import/blob/7b25c1cb95ee18acc1531002fd343e1e6031f9ed/docs/rules/imports-first.md"},"fixable":"code","schema":[{"type":"string","enum":["absolute-first","disable-absolute-first"]}],"deprecated":true},"flowtype/array-style-complex-type":{"fixable":"code"},"flowtype/array-style-simple-type":{"fixable":"code"},"flowtype/arrow-parens":{"docs":{"category":"ECMAScript 6","description":"require parentheses around arrow function arguments","recommended":false,"url":"https://eslint.org/docs/rules/arrow-parens"},"fixable":"code","messages":{"expectedParens":"Expected parentheses around arrow function argument.","expectedParensBlock":"Expected parentheses around arrow function argument having a body with curly braces.","unexpectedParens":"Unexpected parentheses around single function argument.","unexpectedParensInline":"Unexpected parentheses around single function argument having a body with no curly braces."},"type":"layout"},"flowtype/boolean-style":{"fixable":"code"},"flowtype/delimiter-dangle":{"fixable":"code"},"flowtype/enforce-line-break":{"fixable":"code"},"flowtype/generic-spacing":{"fixable":"whitespace"},"flowtype/newline-after-flow-annotation":{"fixable":"code"},"flowtype/no-duplicate-type-union-intersection-members":{"fixable":"code","messages":{"duplicate":"Duplicate {{type}} member found \"{{name}}\".","suggestFix":"Remove duplicate members of type (removes all comments)."},"schema":[{"properties":{"checkIntersections":{"type":"boolean"},"checkUnions":{"type":"boolean"}},"type":"object"}]},"flowtype/no-mutable-array":{"fixable":"code"},"flowtype/no-unused-expressions":{"type":"suggestion","docs":{"description":"Disallow unused expressions","recommended":false,"url":"https://eslint.org/docs/latest/rules/no-unused-expressions"},"schema":[{"type":"object","properties":{"allowShortCircuit":{"type":"boolean","default":false},"allowTernary":{"type":"boolean","default":false},"allowTaggedTemplates":{"type":"boolean","default":false},"enforceForJSX":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"unusedExpression":"Expected an assignment or function call and instead saw an expression."}},"flowtype/object-type-curly-spacing":{"fixable":"code"},"flowtype/object-type-delimiter":{"fixable":"code"},"flowtype/quotes":{"fixable":"code"},"flowtype/require-exact-type":{"fixable":"code"},"flowtype/require-indexer-name":{"fixable":"code"},"flowtype/require-valid-file-annotation":{"fixable":"code"},"flowtype/semi":{"fixable":"code"},"flowtype/sort-keys":{"fixable":"code"},"flowtype/sort-type-union-intersection-members":{"fixable":"code","messages":{"notSorted":"Expected {{type}} members to be in {{order}}ending order. \"{{current}}\" should be before \"{{last}}\".","suggestFix":"Sort members of type (removes all comments)."},"schema":[{"properties":{"checkIntersections":{"type":"boolean"},"checkUnions":{"type":"boolean"},"groupOrder":{"items":{"enum":["function","intersection","keyword","literal","named","nullish","object","tuple","union","unknown"],"type":"string"},"type":"array"},"order":{"enum":["asc","desc"],"type":"string"}},"type":"object"}]},"flowtype/space-after-type-colon":{"fixable":"code"},"flowtype/space-before-generic-bracket":{"fixable":"code"},"flowtype/space-before-type-colon":{"fixable":"code"},"flowtype/type-import-style":{"fixable":"code"},"flowtype/union-intersection-spacing":{"fixable":"code"},"flowtype/use-read-only-spread":{"messages":{"readonlySpread":"Flow type with spread property and all readonly properties must be wrapped in '$ReadOnly<…>' to prevent accidental loss of readonly-ness."}},"flowtype/valid-syntax":{"deprecated":true},"jsx-a11y/accessible-emoji":{"docs":{"description":"Enforce emojis are wrapped in `<span>` and provide screen reader access.","url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/accessible-emoji.md"},"deprecated":true,"schema":[{"type":"object","properties":{}}]},"jsx-a11y/alt-text":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/alt-text.md","description":"Enforce all elements that require alternative text have meaningful information to relay back to end user."},"schema":[{"type":"object","properties":{"elements":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"img":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"object":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"area":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"input[type=\"image\"]":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false}}}]},"jsx-a11y/anchor-ambiguous-text":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/anchor-ambiguous-text.md","description":"Enforce `<a>` text to not exactly match \"click here\", \"here\", \"link\", or \"a link\"."},"schema":[{"type":"object","properties":{"words":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false}}}]},"jsx-a11y/anchor-has-content":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/anchor-has-content.md","description":"Enforce all anchors to contain accessible content."},"schema":[{"type":"object","properties":{"components":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false}}}]},"jsx-a11y/anchor-is-valid":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/anchor-is-valid.md","description":"Enforce all anchors are valid, navigable elements."},"schema":[{"type":"object","properties":{"components":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"specialLink":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"aspects":{"type":"array","items":{"type":"string","enum":["noHref","invalidHref","preferButton"]},"uniqueItems":true,"additionalItems":false,"minItems":1}}}]},"jsx-a11y/aria-activedescendant-has-tabindex":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-activedescendant-has-tabindex.md","description":"Enforce elements with aria-activedescendant are tabbable."},"schema":[{"type":"object","properties":{}}]},"jsx-a11y/aria-props":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-props.md","description":"Enforce all `aria-*` props are valid."},"schema":[{"type":"object","properties":{}}]},"jsx-a11y/aria-proptypes":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-proptypes.md","description":"Enforce ARIA state and property values are valid."},"schema":[{"type":"object","properties":{}}]},"jsx-a11y/aria-role":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-role.md","description":"Enforce that elements with ARIA roles must use a valid, non-abstract ARIA role."},"schema":[{"type":"object","properties":{"allowedInvalidRoles":{"items":{"type":"string"},"type":"array","uniqueItems":true},"ignoreNonDOM":{"type":"boolean","default":false}}}]},"jsx-a11y/aria-unsupported-elements":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-unsupported-elements.md","description":"Enforce that elements that do not support ARIA roles, states, and properties do not have those attributes."},"schema":[{"type":"object","properties":{}}]},"jsx-a11y/autocomplete-valid":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/autocomplete-valid.md","description":"Enforce that autocomplete attributes are used correctly."},"schema":[{"type":"object","properties":{"inputComponents":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false}}}]},"jsx-a11y/click-events-have-key-events":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/click-events-have-key-events.md","description":"Enforce a clickable non-interactive element has at least one keyboard event listener."},"schema":[{"type":"object","properties":{}}]},"jsx-a11y/control-has-associated-label":{"docs":{"description":"Enforce that a control (an interactive element) has a text label.","url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/main/docs/rules/control-has-associated-label.md"},"schema":[{"type":"object","properties":{"labelAttributes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"controlComponents":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"ignoreElements":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"ignoreRoles":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"depth":{"description":"JSX tree depth limit to check for accessible label","type":"integer","minimum":0}}}]},"jsx-a11y/heading-has-content":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/heading-has-content.md","description":"Enforce heading (`h1`, `h2`, etc) elements contain accessible content."},"schema":[{"type":"object","properties":{"components":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false}}}]},"jsx-a11y/html-has-lang":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/html-has-lang.md","description":"Enforce `<html>` element has `lang` prop."},"schema":[{"type":"object","properties":{}}]},"jsx-a11y/iframe-has-title":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/iframe-has-title.md","description":"Enforce iframe elements have a title attribute."},"schema":[{"type":"object","properties":{}}]},"jsx-a11y/img-redundant-alt":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/img-redundant-alt.md","description":"Enforce `<img>` alt prop does not contain the word \"image\", \"picture\", or \"photo\"."},"schema":[{"type":"object","properties":{"components":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"words":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false}}}]},"jsx-a11y/interactive-supports-focus":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/interactive-supports-focus.md","description":"Enforce that elements with interactive handlers like `onClick` must be focusable."},"schema":[{"type":"object","properties":{"tabbable":{"type":"array","items":{"type":"string","enum":["button","checkbox","columnheader","combobox","grid","gridcell","link","listbox","menu","menubar","menuitem","menuitemcheckbox","menuitemradio","option","progressbar","radio","radiogroup","row","rowheader","scrollbar","searchbox","slider","spinbutton","switch","tab","tablist","textbox","tree","treegrid","treeitem","doc-backlink","doc-biblioref","doc-glossref","doc-noteref"]},"uniqueItems":true,"additionalItems":false,"minItems":0}}}]},"jsx-a11y/label-has-associated-control":{"docs":{"description":"Enforce that a `label` tag has a text label and an associated control.","url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/main/docs/rules/label-has-associated-control.md"},"schema":[{"type":"object","properties":{"labelComponents":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"labelAttributes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"controlComponents":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"assert":{"description":"Assert that the label has htmlFor, a nested label, both or either","type":"string","enum":["htmlFor","nesting","both","either"]},"depth":{"description":"JSX tree depth limit to check for accessible label","type":"integer","minimum":0}}}]},"jsx-a11y/label-has-for":{"deprecated":true,"replacedBy":["label-has-associated-control"],"docs":{"description":"Enforce that `<label>` elements have the `htmlFor` prop.","url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/label-has-for.md"},"schema":[{"type":"object","properties":{"components":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"required":{"oneOf":[{"type":"string","enum":["nesting","id"]},{"type":"object","properties":{"some":{"type":"array","items":{"type":"string","enum":["nesting","id"]},"uniqueItems":true,"additionalItems":false,"minItems":0}},"required":["some"]},{"type":"object","properties":{"every":{"type":"array","items":{"type":"string","enum":["nesting","id"]},"uniqueItems":true,"additionalItems":false,"minItems":0}},"required":["every"]}]},"allowChildren":{"type":"boolean"}}}]},"jsx-a11y/lang":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/lang.md","description":"Enforce lang attribute has a valid value."},"schema":[{"type":"object","properties":{}}]},"jsx-a11y/media-has-caption":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/media-has-caption.md","description":"Enforces that `<audio>` and `<video>` elements must have a `<track>` for captions."},"schema":[{"type":"object","properties":{"audio":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"video":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false},"track":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false}}}]},"jsx-a11y/mouse-events-have-key-events":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/mouse-events-have-key-events.md","description":"Enforce that `onMouseOver`/`onMouseOut` are accompanied by `onFocus`/`onBlur` for keyboard-only users."},"schema":[{"type":"object","properties":{"hoverInHandlers":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false,"description":"An array of events that need to be accompanied by `onFocus`"},"hoverOutHandlers":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false,"description":"An array of events that need to be accompanied by `onBlur`"}}}]},"jsx-a11y/no-access-key":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-access-key.md","description":"Enforce that the `accessKey` prop is not used on any element to avoid complications with keyboard commands used by a screen reader."},"schema":[{"type":"object","properties":{}}]},"jsx-a11y/no-aria-hidden-on-focusable":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-aria-hidden-on-focusable.md","description":"Disallow `aria-hidden=\"true\"` from being set on focusable elements."},"schema":[{"type":"object","properties":{}}]},"jsx-a11y/no-autofocus":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-autofocus.md","description":"Enforce autoFocus prop is not used."},"schema":[{"type":"object","properties":{"ignoreNonDOM":{"type":"boolean","default":false}}}]},"jsx-a11y/no-distracting-elements":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-distracting-elements.md","description":"Enforce distracting elements are not used."},"schema":[{"type":"object","properties":{"elements":{"type":"array","items":{"type":"string","enum":["marquee","blink"]},"uniqueItems":true,"additionalItems":false,"minItems":0}}}]},"jsx-a11y/no-interactive-element-to-noninteractive-role":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-interactive-element-to-noninteractive-role.md","description":"Interactive elements should not be assigned non-interactive roles."},"schema":[{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"},"uniqueItems":true}}]},"jsx-a11y/no-noninteractive-element-interactions":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-noninteractive-element-interactions.md","description":"Non-interactive elements should not be assigned mouse or keyboard event listeners."},"schema":[{"type":"object","properties":{"handlers":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false}}}]},"jsx-a11y/no-noninteractive-element-to-interactive-role":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-noninteractive-element-to-interactive-role.md","description":"Non-interactive elements should not be assigned interactive roles."},"schema":[{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"},"uniqueItems":true}}]},"jsx-a11y/no-noninteractive-tabindex":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-noninteractive-tabindex.md","description":"`tabIndex` should only be declared on interactive elements."},"schema":[{"type":"object","properties":{"roles":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false,"description":"An array of ARIA roles"},"tags":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false,"description":"An array of HTML tag names"}}}]},"jsx-a11y/no-onchange":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-onchange.md","description":"Enforce usage of `onBlur` over `onChange` on select menus for accessibility."},"deprecated":true,"schema":[{"type":"object","properties":{}}]},"jsx-a11y/no-redundant-roles":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-redundant-roles.md","description":"Enforce explicit role property is not the same as implicit/default role property on element."},"schema":[{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"},"uniqueItems":true}}]},"jsx-a11y/no-static-element-interactions":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-static-element-interactions.md","description":"Enforce that non-interactive, visible elements (such as `<div>`) that have click handlers use the role attribute."},"schema":[{"type":"object","properties":{"handlers":{"type":"array","items":{"type":"string"},"uniqueItems":true,"additionalItems":false}}}]},"jsx-a11y/prefer-tag-over-role":{"docs":{"description":"Enforces using semantic DOM elements over the ARIA `role` property.","url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/prefer-tag-over-role.md"},"schema":[{"type":"object","properties":{}}]},"jsx-a11y/role-has-required-aria-props":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/role-has-required-aria-props.md","description":"Enforce that elements with ARIA roles must have all required attributes for that role."},"schema":[{"type":"object","properties":{}}]},"jsx-a11y/role-supports-aria-props":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/role-supports-aria-props.md","description":"Enforce that elements with explicit or implicit roles defined contain only `aria-*` properties supported by that `role`."},"schema":[{"type":"object","properties":{}}]},"jsx-a11y/scope":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/scope.md","description":"Enforce `scope` prop is only used on `<th>` elements."},"schema":[{"type":"object","properties":{}}]},"jsx-a11y/tabindex-no-positive":{"docs":{"url":"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/tabindex-no-positive.md","description":"Enforce `tabIndex` value is not greater than zero."},"schema":[{"type":"object","properties":{}}]},"react-hooks/rules-of-hooks":{"type":"problem","docs":{"description":"enforces the Rules of Hooks","recommended":true,"url":"https://reactjs.org/docs/hooks-rules.html"}},"react-hooks/exhaustive-deps":{"type":"suggestion","docs":{"description":"verifies the list of dependencies for Hooks like useEffect and similar","recommended":true,"url":"https://github.com/facebook/react/issues/14920"},"fixable":"code","hasSuggestions":true,"schema":[{"type":"object","additionalProperties":false,"enableDangerousAutofixThisMayCauseInfiniteLoops":false,"properties":{"additionalHooks":{"type":"string"},"enableDangerousAutofixThisMayCauseInfiniteLoops":{"type":"boolean"}}}]},"@typescript-eslint/adjacent-overload-signatures":{"type":"suggestion","docs":{"description":"Require that function overload signatures be consecutive","recommended":"error","url":"https://typescript-eslint.io/rules/adjacent-overload-signatures"},"schema":[],"messages":{"adjacentSignature":"All {{name}} signatures should be adjacent."}},"@typescript-eslint/array-type":{"type":"suggestion","docs":{"description":"Require consistently using either `T[]` or `Array<T>` for arrays","recommended":"strict","url":"https://typescript-eslint.io/rules/array-type"},"fixable":"code","messages":{"errorStringGeneric":"Array type using '{{readonlyPrefix}}{{type}}[]' is forbidden. Use '{{className}}<{{type}}>' instead.","errorStringArray":"Array type using '{{className}}<{{type}}>' is forbidden. Use '{{readonlyPrefix}}{{type}}[]' instead.","errorStringArraySimple":"Array type using '{{className}}<{{type}}>' is forbidden for simple types. Use '{{readonlyPrefix}}{{type}}[]' instead.","errorStringGenericSimple":"Array type using '{{readonlyPrefix}}{{type}}[]' is forbidden for non-simple types. Use '{{className}}<{{type}}>' instead."},"schema":{"$defs":{"arrayOption":{"enum":["array","generic","array-simple"]}},"prefixItems":[{"properties":{"default":{"$ref":"#/$defs/arrayOption","description":"The array type expected for mutable cases..."},"readonly":{"$ref":"#/$defs/arrayOption","description":"The array type expected for readonly cases. If omitted, the value for `default` will be used."}},"type":"object"}],"type":"array"}},"@typescript-eslint/await-thenable":{"docs":{"description":"Disallow awaiting a value that is not a Thenable","recommended":"error","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/await-thenable"},"messages":{"await":"Unexpected `await` of a non-Promise (non-\"Thenable\") value."},"schema":[],"type":"problem"},"@typescript-eslint/ban-ts-comment":{"type":"problem","docs":{"description":"Disallow `@ts-<directive>` comments or require descriptions after directives","recommended":"error","url":"https://typescript-eslint.io/rules/ban-ts-comment"},"messages":{"tsDirectiveComment":"Do not use \"@ts-{{directive}}\" because it alters compilation errors.","tsDirectiveCommentRequiresDescription":"Include a description after the \"@ts-{{directive}}\" directive to explain why the @ts-{{directive}} is necessary. The description must be {{minimumDescriptionLength}} characters or longer.","tsDirectiveCommentDescriptionNotMatchPattern":"The description for the \"@ts-{{directive}}\" directive must match the {{format}} format."},"schema":{"$defs":{"directiveConfigSchema":{"oneOf":[{"type":"boolean","default":true},{"enum":["allow-with-description"]},{"type":"object","properties":{"descriptionFormat":{"type":"string"}}}]}},"prefixItems":[{"properties":{"ts-expect-error":{"$ref":"#/$defs/directiveConfigSchema"},"ts-ignore":{"$ref":"#/$defs/directiveConfigSchema"},"ts-nocheck":{"$ref":"#/$defs/directiveConfigSchema"},"ts-check":{"$ref":"#/$defs/directiveConfigSchema"},"minimumDescriptionLength":{"type":"number","default":3}},"additionalProperties":false}],"type":"array"}},"@typescript-eslint/ban-tslint-comment":{"type":"suggestion","docs":{"description":"Disallow `// tslint:<rule-flag>` comments","recommended":"strict","url":"https://typescript-eslint.io/rules/ban-tslint-comment"},"messages":{"commentDetected":"tslint comment detected: \"{{ text }}\""},"schema":[],"fixable":"code"},"@typescript-eslint/ban-types":{"type":"suggestion","docs":{"description":"Disallow certain types","recommended":"error","url":"https://typescript-eslint.io/rules/ban-types"},"fixable":"code","hasSuggestions":true,"messages":{"bannedTypeMessage":"Don't use `{{name}}` as a type.{{customMessage}}","bannedTypeReplacement":"Replace `{{name}}` with `{{replacement}}`."},"schema":[{"type":"object","properties":{"types":{"type":"object","additionalProperties":{"oneOf":[{"type":"null"},{"type":"boolean"},{"type":"string"},{"type":"object","properties":{"message":{"type":"string"},"fixWith":{"type":"string"},"suggest":{"type":"array","items":{"type":"string"}}},"additionalProperties":false}]}},"extendDefaults":{"type":"boolean"}},"additionalProperties":false}]},"@typescript-eslint/block-spacing":{"type":"layout","docs":{"description":"Disallow or enforce spaces inside of blocks after opening block and before closing block","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/block-spacing"},"fixable":"whitespace","schema":[{"enum":["always","never"]}],"messages":{"missing":"Requires a space {{location}} '{{token}}'.","extra":"Unexpected space(s) {{location}} '{{token}}'."}},"@typescript-eslint/brace-style":{"type":"layout","docs":{"description":"Enforce consistent brace style for blocks","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/brace-style"},"messages":{"nextLineOpen":"Opening curly brace does not appear on the same line as controlling statement.","sameLineOpen":"Opening curly brace appears on the same line as controlling statement.","blockSameLine":"Statement inside of curly braces should be on next line.","nextLineClose":"Closing curly brace does not appear on the same line as the subsequent block.","singleLineClose":"Closing curly brace should be on the same line as opening curly brace or on the line after the previous block.","sameLineClose":"Closing curly brace appears on the same line as the subsequent block."},"fixable":"whitespace","schema":[{"enum":["1tbs","stroustrup","allman"]},{"type":"object","properties":{"allowSingleLine":{"type":"boolean","default":false}},"additionalProperties":false}]},"@typescript-eslint/class-literal-property-style":{"type":"problem","docs":{"description":"Enforce that literals on classes are exposed in a consistent style","recommended":"strict","url":"https://typescript-eslint.io/rules/class-literal-property-style"},"hasSuggestions":true,"messages":{"preferFieldStyle":"Literals should be exposed using readonly fields.","preferFieldStyleSuggestion":"Replace the literals with readonly fields.","preferGetterStyle":"Literals should be exposed using getters.","preferGetterStyleSuggestion":"Replace the literals with getters."},"schema":[{"enum":["fields","getters"]}]},"@typescript-eslint/comma-dangle":{"type":"layout","docs":{"description":"Require or disallow trailing commas","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/comma-dangle"},"schema":{"$defs":{"value":{"enum":["always-multiline","always","never","only-multiline"]},"valueWithIgnore":{"enum":["always-multiline","always","never","only-multiline","ignore"]}},"type":"array","items":[{"oneOf":[{"$ref":"#/$defs/value"},{"type":"object","properties":{"arrays":{"$ref":"#/$defs/valueWithIgnore"},"objects":{"$ref":"#/$defs/valueWithIgnore"},"imports":{"$ref":"#/$defs/valueWithIgnore"},"exports":{"$ref":"#/$defs/valueWithIgnore"},"functions":{"$ref":"#/$defs/valueWithIgnore"},"enums":{"$ref":"#/$defs/valueWithIgnore"},"generics":{"$ref":"#/$defs/valueWithIgnore"},"tuples":{"$ref":"#/$defs/valueWithIgnore"}},"additionalProperties":false}]}],"additionalProperties":false},"fixable":"code","messages":{"unexpected":"Unexpected trailing comma.","missing":"Missing trailing comma."}},"@typescript-eslint/comma-spacing":{"type":"layout","docs":{"description":"Enforce consistent spacing before and after commas","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/comma-spacing"},"fixable":"whitespace","schema":[{"type":"object","properties":{"before":{"type":"boolean","default":false},"after":{"type":"boolean","default":true}},"additionalProperties":false}],"messages":{"unexpected":"There should be no space {{loc}} ','.","missing":"A space is required {{loc}} ','."}},"@typescript-eslint/consistent-generic-constructors":{"type":"suggestion","docs":{"description":"Enforce specifying generic type arguments on type annotation or constructor name of a constructor call","recommended":"strict","url":"https://typescript-eslint.io/rules/consistent-generic-constructors"},"messages":{"preferTypeAnnotation":"The generic type arguments should be specified as part of the type annotation.","preferConstructor":"The generic type arguments should be specified as part of the constructor type arguments."},"fixable":"code","schema":[{"enum":["type-annotation","constructor"]}]},"@typescript-eslint/consistent-indexed-object-style":{"type":"suggestion","docs":{"description":"Require or disallow the `Record` type","recommended":"strict","url":"https://typescript-eslint.io/rules/consistent-indexed-object-style"},"messages":{"preferRecord":"A record is preferred over an index signature.","preferIndexSignature":"An index signature is preferred over a record."},"fixable":"code","schema":[{"enum":["record","index-signature"]}]},"@typescript-eslint/consistent-type-assertions":{"type":"suggestion","fixable":"code","hasSuggestions":true,"docs":{"description":"Enforce consistent usage of type assertions","recommended":"strict","url":"https://typescript-eslint.io/rules/consistent-type-assertions"},"messages":{"as":"Use 'as {{cast}}' instead of '<{{cast}}>'.","angle-bracket":"Use '<{{cast}}>' instead of 'as {{cast}}'.","never":"Do not use any type assertions.","unexpectedObjectTypeAssertion":"Always prefer const x: T = { ... }.","replaceObjectTypeAssertionWithAnnotation":"Use const x: {{cast}} = { ... } instead.","replaceObjectTypeAssertionWithSatisfies":"Use const x = { ... } satisfies {{cast}} instead."},"schema":[{"oneOf":[{"type":"object","properties":{"assertionStyle":{"enum":["never"]}},"additionalProperties":false,"required":["assertionStyle"]},{"type":"object","properties":{"assertionStyle":{"enum":["as","angle-bracket"]},"objectLiteralTypeAssertions":{"enum":["allow","allow-as-parameter","never"]}},"additionalProperties":false,"required":["assertionStyle"]}]}]},"@typescript-eslint/consistent-type-definitions":{"type":"suggestion","docs":{"description":"Enforce type definitions to consistently use either `interface` or `type`","recommended":"strict","url":"https://typescript-eslint.io/rules/consistent-type-definitions"},"messages":{"interfaceOverType":"Use an `interface` instead of a `type`.","typeOverInterface":"Use a `type` instead of an `interface`."},"schema":[{"enum":["interface","type"]}],"fixable":"code"},"@typescript-eslint/consistent-type-exports":{"type":"suggestion","docs":{"description":"Enforce consistent usage of type exports","recommended":false,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/consistent-type-exports"},"messages":{"typeOverValue":"All exports in the declaration are only used as types. Use `export type`.","singleExportIsType":"Type export {{exportNames}} is not a value and should be exported using `export type`.","multipleExportsAreTypes":"Type exports {{exportNames}} are not values and should be exported using `export type`."},"schema":[{"type":"object","properties":{"fixMixedExportsWithInlineTypeSpecifier":{"type":"boolean"}},"additionalProperties":false}],"fixable":"code"},"@typescript-eslint/consistent-type-imports":{"type":"suggestion","docs":{"description":"Enforce consistent usage of type imports","recommended":false,"url":"https://typescript-eslint.io/rules/consistent-type-imports"},"messages":{"typeOverValue":"All imports in the declaration are only used as types. Use `import type`.","someImportsAreOnlyTypes":"Imports {{typeImports}} are only used as types.","aImportIsOnlyTypes":"Import {{typeImports}} is only used as types.","someImportsInDecoMeta":"Type imports {{typeImports}} are used by decorator metadata.","aImportInDecoMeta":"Type import {{typeImports}} is used by decorator metadata.","valueOverType":"Use an `import` instead of an `import type`.","noImportTypeAnnotations":"`import()` type annotations are forbidden."},"schema":[{"type":"object","properties":{"prefer":{"enum":["type-imports","no-type-imports"]},"disallowTypeAnnotations":{"type":"boolean"},"fixStyle":{"enum":["separate-type-imports","inline-type-imports"]}},"additionalProperties":false}],"fixable":"code"},"@typescript-eslint/default-param-last":{"type":"suggestion","docs":{"description":"Enforce default parameters to be last","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/default-param-last"},"schema":[],"messages":{"shouldBeLast":"Default parameters should be last."}},"@typescript-eslint/dot-notation":{"type":"suggestion","docs":{"description":"Enforce dot notation whenever possible","recommended":"strict","extendsBaseRule":true,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/dot-notation"},"schema":[{"type":"object","properties":{"allowKeywords":{"type":"boolean","default":true},"allowPattern":{"type":"string","default":""},"allowPrivateClassPropertyAccess":{"type":"boolean","default":false},"allowProtectedClassPropertyAccess":{"type":"boolean","default":false},"allowIndexSignaturePropertyAccess":{"type":"boolean","default":false}},"additionalProperties":false}],"fixable":"code","messages":{"useDot":"[{{key}}] is better written in dot notation.","useBrackets":".{{key}} is a syntax error."}},"@typescript-eslint/explicit-function-return-type":{"type":"problem","docs":{"description":"Require explicit return types on functions and class methods","recommended":false,"url":"https://typescript-eslint.io/rules/explicit-function-return-type"},"messages":{"missingReturnType":"Missing return type on function."},"schema":[{"type":"object","properties":{"allowConciseArrowFunctionExpressionsStartingWithVoid":{"description":"Whether to allow arrow functions that start with the `void` keyword.","type":"boolean"},"allowExpressions":{"description":"Whether to ignore function expressions (functions which are not part of a declaration).","type":"boolean"},"allowHigherOrderFunctions":{"description":"Whether to ignore functions immediately returning another function expression.","type":"boolean"},"allowTypedFunctionExpressions":{"description":"Whether to ignore type annotations on the variable of function expressions.","type":"boolean"},"allowDirectConstAssertionInArrowFunctions":{"description":"Whether to ignore arrow functions immediately returning a `as const` value.","type":"boolean"},"allowFunctionsWithoutTypeParameters":{"description":"Whether to ignore functions that don't have generic type parameters.","type":"boolean"},"allowedNames":{"description":"An array of function/method names that will not have their arguments or return values checked.","items":{"type":"string"},"type":"array"},"allowIIFEs":{"description":"Whether to ignore immediately invoked function expressions (IIFEs).","type":"boolean"}},"additionalProperties":false}]},"@typescript-eslint/explicit-member-accessibility":{"hasSuggestions":true,"type":"problem","docs":{"description":"Require explicit accessibility modifiers on class properties and methods","recommended":false,"url":"https://typescript-eslint.io/rules/explicit-member-accessibility"},"fixable":"code","messages":{"missingAccessibility":"Missing accessibility modifier on {{type}} {{name}}.","unwantedPublicAccessibility":"Public accessibility modifier on {{type}} {{name}}.","addExplicitAccessibility":"Add '{{ type }}' accessibility modifier"},"schema":{"$defs":{"accessibilityLevel":{"oneOf":[{"const":"explicit","description":"Always require an accessor."},{"const":"no-public","description":"Require an accessor except when public."},{"const":"off","description":"Never check whether there is an accessor."}]}},"prefixItems":[{"type":"object","properties":{"accessibility":{"$ref":"#/$defs/accessibilityLevel"},"overrides":{"type":"object","properties":{"accessors":{"$ref":"#/$defs/accessibilityLevel"},"constructors":{"$ref":"#/$defs/accessibilityLevel"},"methods":{"$ref":"#/$defs/accessibilityLevel"},"properties":{"$ref":"#/$defs/accessibilityLevel"},"parameterProperties":{"$ref":"#/$defs/accessibilityLevel"}},"additionalProperties":false},"ignoredMethodNames":{"type":"array","items":{"type":"string"}}},"additionalProperties":false}],"type":"array"}},"@typescript-eslint/explicit-module-boundary-types":{"type":"problem","docs":{"description":"Require explicit return and argument types on exported functions' and classes' public class methods","recommended":false,"url":"https://typescript-eslint.io/rules/explicit-module-boundary-types"},"messages":{"missingReturnType":"Missing return type on function.","missingArgType":"Argument '{{name}}' should be typed.","missingArgTypeUnnamed":"{{type}} argument should be typed.","anyTypedArg":"Argument '{{name}}' should be typed with a non-any type.","anyTypedArgUnnamed":"{{type}} argument should be typed with a non-any type."},"schema":[{"type":"object","properties":{"allowArgumentsExplicitlyTypedAsAny":{"description":"Whether to ignore arguments that are explicitly typed as `any`.","type":"boolean"},"allowDirectConstAssertionInArrowFunctions":{"description":"Whether to ignore return type annotations on body-less arrow functions that return an `as const` type assertion.\nYou must still type the parameters of the function.","type":"boolean"},"allowedNames":{"description":"An array of function/method names that will not have their arguments or return values checked.","items":{"type":"string"},"type":"array"},"allowHigherOrderFunctions":{"description":"Whether to ignore return type annotations on functions immediately returning another function expression.\nYou must still type the parameters of the function.","type":"boolean"},"allowTypedFunctionExpressions":{"description":"Whether to ignore type annotations on the variable of a function expresion.","type":"boolean"},"shouldTrackReferences":{"type":"boolean"}},"additionalProperties":false}]},"@typescript-eslint/func-call-spacing":{"type":"layout","docs":{"description":"Require or disallow spacing between function identifiers and their invocations","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/func-call-spacing"},"fixable":"whitespace","schema":{"anyOf":[{"type":"array","items":[{"enum":["never"]}],"minItems":0,"maxItems":1},{"type":"array","items":[{"enum":["always"]},{"type":"object","properties":{"allowNewlines":{"type":"boolean"}},"additionalProperties":false}],"minItems":0,"maxItems":2}]},"messages":{"unexpectedWhitespace":"Unexpected whitespace between function name and paren.","unexpectedNewline":"Unexpected newline between function name and paren.","missing":"Missing space between function name and paren."}},"@typescript-eslint/indent":{"type":"layout","docs":{"description":"Enforce consistent indentation","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/indent"},"fixable":"whitespace","schema":[{"oneOf":[{"enum":["tab"]},{"type":"integer","minimum":0}]},{"type":"object","properties":{"SwitchCase":{"type":"integer","minimum":0,"default":0},"VariableDeclarator":{"oneOf":[{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},{"type":"object","properties":{"var":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},"let":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},"const":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]}},"additionalProperties":false}]},"outerIIFEBody":{"oneOf":[{"type":"integer","minimum":0},{"enum":["off"]}]},"MemberExpression":{"oneOf":[{"type":"integer","minimum":0},{"enum":["off"]}]},"FunctionDeclaration":{"type":"object","properties":{"parameters":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},"body":{"type":"integer","minimum":0}},"additionalProperties":false},"FunctionExpression":{"type":"object","properties":{"parameters":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},"body":{"type":"integer","minimum":0}},"additionalProperties":false},"StaticBlock":{"type":"object","properties":{"body":{"type":"integer","minimum":0}},"additionalProperties":false},"CallExpression":{"type":"object","properties":{"arguments":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]}},"additionalProperties":false},"ArrayExpression":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},"ObjectExpression":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},"ImportDeclaration":{"oneOf":[{"type":"integer","minimum":0},{"enum":["first","off"]}]},"flatTernaryExpressions":{"type":"boolean","default":false},"offsetTernaryExpressions":{"type":"boolean","default":false},"ignoredNodes":{"type":"array","items":{"type":"string","not":{"pattern":":exit$"}}},"ignoreComments":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"wrongIndentation":"Expected indentation of {{expected}} but found {{actual}}."}},"@typescript-eslint/init-declarations":{"type":"suggestion","docs":{"description":"Require or disallow initialization in variable declarations","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/init-declarations"},"schema":{"anyOf":[{"type":"array","items":[{"enum":["always"]}],"minItems":0,"maxItems":1},{"type":"array","items":[{"enum":["never"]},{"type":"object","properties":{"ignoreForLoopInit":{"type":"boolean"}},"additionalProperties":false}],"minItems":0,"maxItems":2}]},"messages":{"initialized":"Variable '{{idName}}' should be initialized on declaration.","notInitialized":"Variable '{{idName}}' should not be initialized on declaration."}},"@typescript-eslint/key-spacing":{"type":"layout","docs":{"description":"Enforce consistent spacing between property names and type annotations in types and interfaces","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/key-spacing"},"fixable":"whitespace","schema":[{"anyOf":[{"type":"object","properties":{"align":{"anyOf":[{"enum":["colon","value"]},{"type":"object","properties":{"mode":{"enum":["strict","minimum"]},"on":{"enum":["colon","value"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false}]},"mode":{"enum":["strict","minimum"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false},{"type":"object","properties":{"singleLine":{"type":"object","properties":{"mode":{"enum":["strict","minimum"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false},"multiLine":{"type":"object","properties":{"align":{"anyOf":[{"enum":["colon","value"]},{"type":"object","properties":{"mode":{"enum":["strict","minimum"]},"on":{"enum":["colon","value"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false}]},"mode":{"enum":["strict","minimum"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false}},"additionalProperties":false},{"type":"object","properties":{"singleLine":{"type":"object","properties":{"mode":{"enum":["strict","minimum"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false},"multiLine":{"type":"object","properties":{"mode":{"enum":["strict","minimum"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false},"align":{"type":"object","properties":{"mode":{"enum":["strict","minimum"]},"on":{"enum":["colon","value"]},"beforeColon":{"type":"boolean"},"afterColon":{"type":"boolean"}},"additionalProperties":false}},"additionalProperties":false}]}],"messages":{"extraKey":"Extra space after {{computed}}key '{{key}}'.","extraValue":"Extra space before value for {{computed}}key '{{key}}'.","missingKey":"Missing space after {{computed}}key '{{key}}'.","missingValue":"Missing space before value for {{computed}}key '{{key}}'."}},"@typescript-eslint/keyword-spacing":{"type":"layout","docs":{"description":"Enforce consistent spacing before and after keywords","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/keyword-spacing"},"fixable":"whitespace","schema":[{"type":"object","properties":{"before":{"type":"boolean","default":true},"after":{"type":"boolean","default":true},"overrides":{"type":"object","properties":{"abstract":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"as":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"async":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"await":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"boolean":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"break":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"byte":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"case":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"catch":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"char":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"class":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"const":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"continue":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"debugger":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"default":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"delete":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"do":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"double":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"else":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"enum":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"export":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"extends":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"false":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"final":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"finally":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"float":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"for":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"from":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"function":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"get":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"goto":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"if":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"implements":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"import":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"in":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"instanceof":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"int":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"interface":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"let":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"long":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"native":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"new":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"null":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"of":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"package":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"private":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"protected":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"public":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"return":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"set":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"short":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"static":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"super":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"switch":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"synchronized":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"this":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"throw":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"throws":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"transient":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"true":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"try":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"typeof":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"var":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"void":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"volatile":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"while":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"with":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"yield":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"type":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false}},"additionalProperties":false}},"additionalProperties":false}],"messages":{"expectedBefore":"Expected space(s) before \"{{value}}\".","expectedAfter":"Expected space(s) after \"{{value}}\".","unexpectedBefore":"Unexpected space(s) before \"{{value}}\".","unexpectedAfter":"Unexpected space(s) after \"{{value}}\"."}},"@typescript-eslint/lines-around-comment":{"type":"layout","docs":{"description":"Require empty lines around comments","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/lines-around-comment"},"schema":{"type":"array","items":[{"type":"object","properties":{"beforeBlockComment":{"type":"boolean","default":true},"afterBlockComment":{"type":"boolean","default":false},"beforeLineComment":{"type":"boolean","default":false},"afterLineComment":{"type":"boolean","default":false},"allowBlockStart":{"type":"boolean","default":false},"allowBlockEnd":{"type":"boolean","default":false},"allowClassStart":{"type":"boolean"},"allowClassEnd":{"type":"boolean"},"allowObjectStart":{"type":"boolean"},"allowObjectEnd":{"type":"boolean"},"allowArrayStart":{"type":"boolean"},"allowArrayEnd":{"type":"boolean"},"allowInterfaceStart":{"type":"boolean"},"allowInterfaceEnd":{"type":"boolean"},"allowTypeStart":{"type":"boolean"},"allowTypeEnd":{"type":"boolean"},"allowEnumStart":{"type":"boolean"},"allowEnumEnd":{"type":"boolean"},"allowModuleStart":{"type":"boolean"},"allowModuleEnd":{"type":"boolean"},"ignorePattern":{"type":"string"},"applyDefaultIgnorePatterns":{"type":"boolean"}},"additionalProperties":false}]},"fixable":"whitespace","messages":{"after":"Expected line after comment.","before":"Expected line before comment."}},"@typescript-eslint/lines-between-class-members":{"type":"layout","docs":{"description":"Require or disallow an empty line between class members","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/lines-between-class-members"},"fixable":"whitespace","schema":{"0":{"anyOf":[{"type":"object","properties":{"enforce":{"type":"array","items":{"type":"object","properties":{"blankLine":{"enum":["always","never"]},"prev":{"enum":["method","field","*"]},"next":{"enum":["method","field","*"]}},"additionalProperties":false,"required":["blankLine","prev","next"]},"minItems":1}},"additionalProperties":false,"required":["enforce"]},{"enum":["always","never"]}]},"1":{"type":"object","properties":{"exceptAfterSingleLine":{"type":"boolean","default":false}},"additionalProperties":false,"exceptAfterOverload":{"type":"boolean","default":true}}},"messages":{"never":"Unexpected blank line between class members.","always":"Expected blank line between class members."}},"@typescript-eslint/member-delimiter-style":{"type":"layout","docs":{"description":"Require a specific member delimiter style for interfaces and type literals","recommended":false,"url":"https://typescript-eslint.io/rules/member-delimiter-style"},"fixable":"whitespace","messages":{"unexpectedComma":"Unexpected separator (,).","unexpectedSemi":"Unexpected separator (;).","expectedComma":"Expected a comma.","expectedSemi":"Expected a semicolon."},"schema":[{"type":"object","properties":{"multiline":{"type":"object","properties":{"delimiter":{"enum":["none","semi","comma"]},"requireLast":{"type":"boolean"}},"additionalProperties":false},"singleline":{"type":"object","properties":{"delimiter":{"enum":["semi","comma"]},"requireLast":{"type":"boolean"}},"additionalProperties":false},"overrides":{"type":"object","properties":{"interface":{"type":"object","properties":{"multiline":{"type":"object","properties":{"delimiter":{"enum":["none","semi","comma"]},"requireLast":{"type":"boolean"}},"additionalProperties":false},"singleline":{"type":"object","properties":{"delimiter":{"enum":["semi","comma"]},"requireLast":{"type":"boolean"}},"additionalProperties":false}},"additionalProperties":false},"typeLiteral":{"type":"object","properties":{"multiline":{"type":"object","properties":{"delimiter":{"enum":["none","semi","comma"]},"requireLast":{"type":"boolean"}},"additionalProperties":false},"singleline":{"type":"object","properties":{"delimiter":{"enum":["semi","comma"]},"requireLast":{"type":"boolean"}},"additionalProperties":false}},"additionalProperties":false}},"additionalProperties":false},"multilineDetection":{"enum":["brackets","last-member"]}},"additionalProperties":false}]},"@typescript-eslint/member-ordering":{"type":"suggestion","docs":{"description":"Require a consistent member declaration order","recommended":false,"url":"https://typescript-eslint.io/rules/member-ordering"},"messages":{"incorrectOrder":"Member {{member}} should be declared before member {{beforeMember}}.","incorrectGroupOrder":"Member {{name}} should be declared before all {{rank}} definitions.","incorrectRequiredMembersOrder":"Member {{member}} should be declared after all {{optionalOrRequired}} members."},"schema":[{"type":"object","properties":{"default":{"oneOf":[{"type":"string","enum":["never"]},{"type":"array","items":{"oneOf":[{"enum":["readonly-signature","signature","readonly-field","public-readonly-field","public-decorated-readonly-field","decorated-readonly-field","static-readonly-field","public-static-readonly-field","instance-readonly-field","public-instance-readonly-field","abstract-readonly-field","public-abstract-readonly-field","protected-readonly-field","protected-decorated-readonly-field","protected-static-readonly-field","protected-instance-readonly-field","protected-abstract-readonly-field","private-readonly-field","private-decorated-readonly-field","private-static-readonly-field","private-instance-readonly-field","#private-readonly-field","#private-static-readonly-field","#private-instance-readonly-field","field","public-field","public-decorated-field","decorated-field","static-field","public-static-field","instance-field","public-instance-field","abstract-field","public-abstract-field","protected-field","protected-decorated-field","protected-static-field","protected-instance-field","protected-abstract-field","private-field","private-decorated-field","private-static-field","private-instance-field","#private-field","#private-static-field","#private-instance-field","method","public-method","public-decorated-method","decorated-method","static-method","public-static-method","instance-method","public-instance-method","abstract-method","public-abstract-method","protected-method","protected-decorated-method","protected-static-method","protected-instance-method","protected-abstract-method","private-method","private-decorated-method","private-static-method","private-instance-method","#private-method","#private-static-method","#private-instance-method","call-signature","constructor","public-constructor","protected-constructor","private-constructor","get","public-get","public-decorated-get","decorated-get","static-get","public-static-get","instance-get","public-instance-get","abstract-get","public-abstract-get","protected-get","protected-decorated-get","protected-static-get","protected-instance-get","protected-abstract-get","private-get","private-decorated-get","private-static-get","private-instance-get","#private-get","#private-static-get","#private-instance-get","set","public-set","public-decorated-set","decorated-set","static-set","public-static-set","instance-set","public-instance-set","abstract-set","public-abstract-set","protected-set","protected-decorated-set","protected-static-set","protected-instance-set","protected-abstract-set","private-set","private-decorated-set","private-static-set","private-instance-set","#private-set","#private-static-set","#private-instance-set","static-initialization","static-static-initialization","public-static-static-initialization","instance-static-initialization","public-instance-static-initialization","abstract-static-initialization","public-abstract-static-initialization","protected-static-static-initialization","protected-instance-static-initialization","protected-abstract-static-initialization","private-static-static-initialization","private-instance-static-initialization","#private-static-static-initialization","#private-instance-static-initialization"]},{"type":"array","items":{"enum":["readonly-signature","signature","readonly-field","public-readonly-field","public-decorated-readonly-field","decorated-readonly-field","static-readonly-field","public-static-readonly-field","instance-readonly-field","public-instance-readonly-field","abstract-readonly-field","public-abstract-readonly-field","protected-readonly-field","protected-decorated-readonly-field","protected-static-readonly-field","protected-instance-readonly-field","protected-abstract-readonly-field","private-readonly-field","private-decorated-readonly-field","private-static-readonly-field","private-instance-readonly-field","#private-readonly-field","#private-static-readonly-field","#private-instance-readonly-field","field","public-field","public-decorated-field","decorated-field","static-field","public-static-field","instance-field","public-instance-field","abstract-field","public-abstract-field","protected-field","protected-decorated-field","protected-static-field","protected-instance-field","protected-abstract-field","private-field","private-decorated-field","private-static-field","private-instance-field","#private-field","#private-static-field","#private-instance-field","method","public-method","public-decorated-method","decorated-method","static-method","public-static-method","instance-method","public-instance-method","abstract-method","public-abstract-method","protected-method","protected-decorated-method","protected-static-method","protected-instance-method","protected-abstract-method","private-method","private-decorated-method","private-static-method","private-instance-method","#private-method","#private-static-method","#private-instance-method","call-signature","constructor","public-constructor","protected-constructor","private-constructor","get","public-get","public-decorated-get","decorated-get","static-get","public-static-get","instance-get","public-instance-get","abstract-get","public-abstract-get","protected-get","protected-decorated-get","protected-static-get","protected-instance-get","protected-abstract-get","private-get","private-decorated-get","private-static-get","private-instance-get","#private-get","#private-static-get","#private-instance-get","set","public-set","public-decorated-set","decorated-set","static-set","public-static-set","instance-set","public-instance-set","abstract-set","public-abstract-set","protected-set","protected-decorated-set","protected-static-set","protected-instance-set","protected-abstract-set","private-set","private-decorated-set","private-static-set","private-instance-set","#private-set","#private-static-set","#private-instance-set","static-initialization","static-static-initialization","public-static-static-initialization","instance-static-initialization","public-instance-static-initialization","abstract-static-initialization","public-abstract-static-initialization","protected-static-static-initialization","protected-instance-static-initialization","protected-abstract-static-initialization","private-static-static-initialization","private-instance-static-initialization","#private-static-static-initialization","#private-instance-static-initialization"]}}]}},{"type":"object","properties":{"memberTypes":{"oneOf":[{"type":"array","items":{"oneOf":[{"enum":["readonly-signature","signature","readonly-field","public-readonly-field","public-decorated-readonly-field","decorated-readonly-field","static-readonly-field","public-static-readonly-field","instance-readonly-field","public-instance-readonly-field","abstract-readonly-field","public-abstract-readonly-field","protected-readonly-field","protected-decorated-readonly-field","protected-static-readonly-field","protected-instance-readonly-field","protected-abstract-readonly-field","private-readonly-field","private-decorated-readonly-field","private-static-readonly-field","private-instance-readonly-field","#private-readonly-field","#private-static-readonly-field","#private-instance-readonly-field","field","public-field","public-decorated-field","decorated-field","static-field","public-static-field","instance-field","public-instance-field","abstract-field","public-abstract-field","protected-field","protected-decorated-field","protected-static-field","protected-instance-field","protected-abstract-field","private-field","private-decorated-field","private-static-field","private-instance-field","#private-field","#private-static-field","#private-instance-field","method","public-method","public-decorated-method","decorated-method","static-method","public-static-method","instance-method","public-instance-method","abstract-method","public-abstract-method","protected-method","protected-decorated-method","protected-static-method","protected-instance-method","protected-abstract-method","private-method","private-decorated-method","private-static-method","private-instance-method","#private-method","#private-static-method","#private-instance-method","call-signature","constructor","public-constructor","protected-constructor","private-constructor","get","public-get","public-decorated-get","decorated-get","static-get","public-static-get","instance-get","public-instance-get","abstract-get","public-abstract-get","protected-get","protected-decorated-get","protected-static-get","protected-instance-get","protected-abstract-get","private-get","private-decorated-get","private-static-get","private-instance-get","#private-get","#private-static-get","#private-instance-get","set","public-set","public-decorated-set","decorated-set","static-set","public-static-set","instance-set","public-instance-set","abstract-set","public-abstract-set","protected-set","protected-decorated-set","protected-static-set","protected-instance-set","protected-abstract-set","private-set","private-decorated-set","private-static-set","private-instance-set","#private-set","#private-static-set","#private-instance-set","static-initialization","static-static-initialization","public-static-static-initialization","instance-static-initialization","public-instance-static-initialization","abstract-static-initialization","public-abstract-static-initialization","protected-static-static-initialization","protected-instance-static-initialization","protected-abstract-static-initialization","private-static-static-initialization","private-instance-static-initialization","#private-static-static-initialization","#private-instance-static-initialization"]},{"type":"array","items":{"enum":["readonly-signature","signature","readonly-field","public-readonly-field","public-decorated-readonly-field","decorated-readonly-field","static-readonly-field","public-static-readonly-field","instance-readonly-field","public-instance-readonly-field","abstract-readonly-field","public-abstract-readonly-field","protected-readonly-field","protected-decorated-readonly-field","protected-static-readonly-field","protected-instance-readonly-field","protected-abstract-readonly-field","private-readonly-field","private-decorated-readonly-field","private-static-readonly-field","private-instance-readonly-field","#private-readonly-field","#private-static-readonly-field","#private-instance-readonly-field","field","public-field","public-decorated-field","decorated-field","static-field","public-static-field","instance-field","public-instance-field","abstract-field","public-abstract-field","protected-field","protected-decorated-field","protected-static-field","protected-instance-field","protected-abstract-field","private-field","private-decorated-field","private-static-field","private-instance-field","#private-field","#private-static-field","#private-instance-field","method","public-method","public-decorated-method","decorated-method","static-method","public-static-method","instance-method","public-instance-method","abstract-method","public-abstract-method","protected-method","protected-decorated-method","protected-static-method","protected-instance-method","protected-abstract-method","private-method","private-decorated-method","private-static-method","private-instance-method","#private-method","#private-static-method","#private-instance-method","call-signature","constructor","public-constructor","protected-constructor","private-constructor","get","public-get","public-decorated-get","decorated-get","static-get","public-static-get","instance-get","public-instance-get","abstract-get","public-abstract-get","protected-get","protected-decorated-get","protected-static-get","protected-instance-get","protected-abstract-get","private-get","private-decorated-get","private-static-get","private-instance-get","#private-get","#private-static-get","#private-instance-get","set","public-set","public-decorated-set","decorated-set","static-set","public-static-set","instance-set","public-instance-set","abstract-set","public-abstract-set","protected-set","protected-decorated-set","protected-static-set","protected-instance-set","protected-abstract-set","private-set","private-decorated-set","private-static-set","private-instance-set","#private-set","#private-static-set","#private-instance-set","static-initialization","static-static-initialization","public-static-static-initialization","instance-static-initialization","public-instance-static-initialization","abstract-static-initialization","public-abstract-static-initialization","protected-static-static-initialization","protected-instance-static-initialization","protected-abstract-static-initialization","private-static-static-initialization","private-instance-static-initialization","#private-static-static-initialization","#private-instance-static-initialization"]}}]}},{"type":"string","enum":["never"]}]},"order":{"type":"string","enum":["alphabetically","alphabetically-case-insensitive","as-written","natural","natural-case-insensitive"]},"optionalityOrder":{"type":"string","enum":["optional-first","required-first"]}},"additionalProperties":false}]},"classes":{"oneOf":[{"type":"string","enum":["never"]},{"type":"array","items":{"oneOf":[{"enum":["readonly-signature","signature","readonly-field","public-readonly-field","public-decorated-readonly-field","decorated-readonly-field","static-readonly-field","public-static-readonly-field","instance-readonly-field","public-instance-readonly-field","abstract-readonly-field","public-abstract-readonly-field","protected-readonly-field","protected-decorated-readonly-field","protected-static-readonly-field","protected-instance-readonly-field","protected-abstract-readonly-field","private-readonly-field","private-decorated-readonly-field","private-static-readonly-field","private-instance-readonly-field","#private-readonly-field","#private-static-readonly-field","#private-instance-readonly-field","field","public-field","public-decorated-field","decorated-field","static-field","public-static-field","instance-field","public-instance-field","abstract-field","public-abstract-field","protected-field","protected-decorated-field","protected-static-field","protected-instance-field","protected-abstract-field","private-field","private-decorated-field","private-static-field","private-instance-field","#private-field","#private-static-field","#private-instance-field","method","public-method","public-decorated-method","decorated-method","static-method","public-static-method","instance-method","public-instance-method","abstract-method","public-abstract-method","protected-method","protected-decorated-method","protected-static-method","protected-instance-method","protected-abstract-method","private-method","private-decorated-method","private-static-method","private-instance-method","#private-method","#private-static-method","#private-instance-method","call-signature","constructor","public-constructor","protected-constructor","private-constructor","get","public-get","public-decorated-get","decorated-get","static-get","public-static-get","instance-get","public-instance-get","abstract-get","public-abstract-get","protected-get","protected-decorated-get","protected-static-get","protected-instance-get","protected-abstract-get","private-get","private-decorated-get","private-static-get","private-instance-get","#private-get","#private-static-get","#private-instance-get","set","public-set","public-decorated-set","decorated-set","static-set","public-static-set","instance-set","public-instance-set","abstract-set","public-abstract-set","protected-set","protected-decorated-set","protected-static-set","protected-instance-set","protected-abstract-set","private-set","private-decorated-set","private-static-set","private-instance-set","#private-set","#private-static-set","#private-instance-set","static-initialization","static-static-initialization","public-static-static-initialization","instance-static-initialization","public-instance-static-initialization","abstract-static-initialization","public-abstract-static-initialization","protected-static-static-initialization","protected-instance-static-initialization","protected-abstract-static-initialization","private-static-static-initialization","private-instance-static-initialization","#private-static-static-initialization","#private-instance-static-initialization"]},{"type":"array","items":{"enum":["readonly-signature","signature","readonly-field","public-readonly-field","public-decorated-readonly-field","decorated-readonly-field","static-readonly-field","public-static-readonly-field","instance-readonly-field","public-instance-readonly-field","abstract-readonly-field","public-abstract-readonly-field","protected-readonly-field","protected-decorated-readonly-field","protected-static-readonly-field","protected-instance-readonly-field","protected-abstract-readonly-field","private-readonly-field","private-decorated-readonly-field","private-static-readonly-field","private-instance-readonly-field","#private-readonly-field","#private-static-readonly-field","#private-instance-readonly-field","field","public-field","public-decorated-field","decorated-field","static-field","public-static-field","instance-field","public-instance-field","abstract-field","public-abstract-field","protected-field","protected-decorated-field","protected-static-field","protected-instance-field","protected-abstract-field","private-field","private-decorated-field","private-static-field","private-instance-field","#private-field","#private-static-field","#private-instance-field","method","public-method","public-decorated-method","decorated-method","static-method","public-static-method","instance-method","public-instance-method","abstract-method","public-abstract-method","protected-method","protected-decorated-method","protected-static-method","protected-instance-method","protected-abstract-method","private-method","private-decorated-method","private-static-method","private-instance-method","#private-method","#private-static-method","#private-instance-method","call-signature","constructor","public-constructor","protected-constructor","private-constructor","get","public-get","public-decorated-get","decorated-get","static-get","public-static-get","instance-get","public-instance-get","abstract-get","public-abstract-get","protected-get","protected-decorated-get","protected-static-get","protected-instance-get","protected-abstract-get","private-get","private-decorated-get","private-static-get","private-instance-get","#private-get","#private-static-get","#private-instance-get","set","public-set","public-decorated-set","decorated-set","static-set","public-static-set","instance-set","public-instance-set","abstract-set","public-abstract-set","protected-set","protected-decorated-set","protected-static-set","protected-instance-set","protected-abstract-set","private-set","private-decorated-set","private-static-set","private-instance-set","#private-set","#private-static-set","#private-instance-set","static-initialization","static-static-initialization","public-static-static-initialization","instance-static-initialization","public-instance-static-initialization","abstract-static-initialization","public-abstract-static-initialization","protected-static-static-initialization","protected-instance-static-initialization","protected-abstract-static-initialization","private-static-static-initialization","private-instance-static-initialization","#private-static-static-initialization","#private-instance-static-initialization"]}}]}},{"type":"object","properties":{"memberTypes":{"oneOf":[{"type":"array","items":{"oneOf":[{"enum":["readonly-signature","signature","readonly-field","public-readonly-field","public-decorated-readonly-field","decorated-readonly-field","static-readonly-field","public-static-readonly-field","instance-readonly-field","public-instance-readonly-field","abstract-readonly-field","public-abstract-readonly-field","protected-readonly-field","protected-decorated-readonly-field","protected-static-readonly-field","protected-instance-readonly-field","protected-abstract-readonly-field","private-readonly-field","private-decorated-readonly-field","private-static-readonly-field","private-instance-readonly-field","#private-readonly-field","#private-static-readonly-field","#private-instance-readonly-field","field","public-field","public-decorated-field","decorated-field","static-field","public-static-field","instance-field","public-instance-field","abstract-field","public-abstract-field","protected-field","protected-decorated-field","protected-static-field","protected-instance-field","protected-abstract-field","private-field","private-decorated-field","private-static-field","private-instance-field","#private-field","#private-static-field","#private-instance-field","method","public-method","public-decorated-method","decorated-method","static-method","public-static-method","instance-method","public-instance-method","abstract-method","public-abstract-method","protected-method","protected-decorated-method","protected-static-method","protected-instance-method","protected-abstract-method","private-method","private-decorated-method","private-static-method","private-instance-method","#private-method","#private-static-method","#private-instance-method","call-signature","constructor","public-constructor","protected-constructor","private-constructor","get","public-get","public-decorated-get","decorated-get","static-get","public-static-get","instance-get","public-instance-get","abstract-get","public-abstract-get","protected-get","protected-decorated-get","protected-static-get","protected-instance-get","protected-abstract-get","private-get","private-decorated-get","private-static-get","private-instance-get","#private-get","#private-static-get","#private-instance-get","set","public-set","public-decorated-set","decorated-set","static-set","public-static-set","instance-set","public-instance-set","abstract-set","public-abstract-set","protected-set","protected-decorated-set","protected-static-set","protected-instance-set","protected-abstract-set","private-set","private-decorated-set","private-static-set","private-instance-set","#private-set","#private-static-set","#private-instance-set","static-initialization","static-static-initialization","public-static-static-initialization","instance-static-initialization","public-instance-static-initialization","abstract-static-initialization","public-abstract-static-initialization","protected-static-static-initialization","protected-instance-static-initialization","protected-abstract-static-initialization","private-static-static-initialization","private-instance-static-initialization","#private-static-static-initialization","#private-instance-static-initialization"]},{"type":"array","items":{"enum":["readonly-signature","signature","readonly-field","public-readonly-field","public-decorated-readonly-field","decorated-readonly-field","static-readonly-field","public-static-readonly-field","instance-readonly-field","public-instance-readonly-field","abstract-readonly-field","public-abstract-readonly-field","protected-readonly-field","protected-decorated-readonly-field","protected-static-readonly-field","protected-instance-readonly-field","protected-abstract-readonly-field","private-readonly-field","private-decorated-readonly-field","private-static-readonly-field","private-instance-readonly-field","#private-readonly-field","#private-static-readonly-field","#private-instance-readonly-field","field","public-field","public-decorated-field","decorated-field","static-field","public-static-field","instance-field","public-instance-field","abstract-field","public-abstract-field","protected-field","protected-decorated-field","protected-static-field","protected-instance-field","protected-abstract-field","private-field","private-decorated-field","private-static-field","private-instance-field","#private-field","#private-static-field","#private-instance-field","method","public-method","public-decorated-method","decorated-method","static-method","public-static-method","instance-method","public-instance-method","abstract-method","public-abstract-method","protected-method","protected-decorated-method","protected-static-method","protected-instance-method","protected-abstract-method","private-method","private-decorated-method","private-static-method","private-instance-method","#private-method","#private-static-method","#private-instance-method","call-signature","constructor","public-constructor","protected-constructor","private-constructor","get","public-get","public-decorated-get","decorated-get","static-get","public-static-get","instance-get","public-instance-get","abstract-get","public-abstract-get","protected-get","protected-decorated-get","protected-static-get","protected-instance-get","protected-abstract-get","private-get","private-decorated-get","private-static-get","private-instance-get","#private-get","#private-static-get","#private-instance-get","set","public-set","public-decorated-set","decorated-set","static-set","public-static-set","instance-set","public-instance-set","abstract-set","public-abstract-set","protected-set","protected-decorated-set","protected-static-set","protected-instance-set","protected-abstract-set","private-set","private-decorated-set","private-static-set","private-instance-set","#private-set","#private-static-set","#private-instance-set","static-initialization","static-static-initialization","public-static-static-initialization","instance-static-initialization","public-instance-static-initialization","abstract-static-initialization","public-abstract-static-initialization","protected-static-static-initialization","protected-instance-static-initialization","protected-abstract-static-initialization","private-static-static-initialization","private-instance-static-initialization","#private-static-static-initialization","#private-instance-static-initialization"]}}]}},{"type":"string","enum":["never"]}]},"order":{"type":"string","enum":["alphabetically","alphabetically-case-insensitive","as-written","natural","natural-case-insensitive"]},"optionalityOrder":{"type":"string","enum":["optional-first","required-first"]}},"additionalProperties":false}]},"classExpressions":{"oneOf":[{"type":"string","enum":["never"]},{"type":"array","items":{"oneOf":[{"enum":["readonly-signature","signature","readonly-field","public-readonly-field","public-decorated-readonly-field","decorated-readonly-field","static-readonly-field","public-static-readonly-field","instance-readonly-field","public-instance-readonly-field","abstract-readonly-field","public-abstract-readonly-field","protected-readonly-field","protected-decorated-readonly-field","protected-static-readonly-field","protected-instance-readonly-field","protected-abstract-readonly-field","private-readonly-field","private-decorated-readonly-field","private-static-readonly-field","private-instance-readonly-field","#private-readonly-field","#private-static-readonly-field","#private-instance-readonly-field","field","public-field","public-decorated-field","decorated-field","static-field","public-static-field","instance-field","public-instance-field","abstract-field","public-abstract-field","protected-field","protected-decorated-field","protected-static-field","protected-instance-field","protected-abstract-field","private-field","private-decorated-field","private-static-field","private-instance-field","#private-field","#private-static-field","#private-instance-field","method","public-method","public-decorated-method","decorated-method","static-method","public-static-method","instance-method","public-instance-method","abstract-method","public-abstract-method","protected-method","protected-decorated-method","protected-static-method","protected-instance-method","protected-abstract-method","private-method","private-decorated-method","private-static-method","private-instance-method","#private-method","#private-static-method","#private-instance-method","call-signature","constructor","public-constructor","protected-constructor","private-constructor","get","public-get","public-decorated-get","decorated-get","static-get","public-static-get","instance-get","public-instance-get","abstract-get","public-abstract-get","protected-get","protected-decorated-get","protected-static-get","protected-instance-get","protected-abstract-get","private-get","private-decorated-get","private-static-get","private-instance-get","#private-get","#private-static-get","#private-instance-get","set","public-set","public-decorated-set","decorated-set","static-set","public-static-set","instance-set","public-instance-set","abstract-set","public-abstract-set","protected-set","protected-decorated-set","protected-static-set","protected-instance-set","protected-abstract-set","private-set","private-decorated-set","private-static-set","private-instance-set","#private-set","#private-static-set","#private-instance-set","static-initialization","static-static-initialization","public-static-static-initialization","instance-static-initialization","public-instance-static-initialization","abstract-static-initialization","public-abstract-static-initialization","protected-static-static-initialization","protected-instance-static-initialization","protected-abstract-static-initialization","private-static-static-initialization","private-instance-static-initialization","#private-static-static-initialization","#private-instance-static-initialization"]},{"type":"array","items":{"enum":["readonly-signature","signature","readonly-field","public-readonly-field","public-decorated-readonly-field","decorated-readonly-field","static-readonly-field","public-static-readonly-field","instance-readonly-field","public-instance-readonly-field","abstract-readonly-field","public-abstract-readonly-field","protected-readonly-field","protected-decorated-readonly-field","protected-static-readonly-field","protected-instance-readonly-field","protected-abstract-readonly-field","private-readonly-field","private-decorated-readonly-field","private-static-readonly-field","private-instance-readonly-field","#private-readonly-field","#private-static-readonly-field","#private-instance-readonly-field","field","public-field","public-decorated-field","decorated-field","static-field","public-static-field","instance-field","public-instance-field","abstract-field","public-abstract-field","protected-field","protected-decorated-field","protected-static-field","protected-instance-field","protected-abstract-field","private-field","private-decorated-field","private-static-field","private-instance-field","#private-field","#private-static-field","#private-instance-field","method","public-method","public-decorated-method","decorated-method","static-method","public-static-method","instance-method","public-instance-method","abstract-method","public-abstract-method","protected-method","protected-decorated-method","protected-static-method","protected-instance-method","protected-abstract-method","private-method","private-decorated-method","private-static-method","private-instance-method","#private-method","#private-static-method","#private-instance-method","call-signature","constructor","public-constructor","protected-constructor","private-constructor","get","public-get","public-decorated-get","decorated-get","static-get","public-static-get","instance-get","public-instance-get","abstract-get","public-abstract-get","protected-get","protected-decorated-get","protected-static-get","protected-instance-get","protected-abstract-get","private-get","private-decorated-get","private-static-get","private-instance-get","#private-get","#private-static-get","#private-instance-get","set","public-set","public-decorated-set","decorated-set","static-set","public-static-set","instance-set","public-instance-set","abstract-set","public-abstract-set","protected-set","protected-decorated-set","protected-static-set","protected-instance-set","protected-abstract-set","private-set","private-decorated-set","private-static-set","private-instance-set","#private-set","#private-static-set","#private-instance-set","static-initialization","static-static-initialization","public-static-static-initialization","instance-static-initialization","public-instance-static-initialization","abstract-static-initialization","public-abstract-static-initialization","protected-static-static-initialization","protected-instance-static-initialization","protected-abstract-static-initialization","private-static-static-initialization","private-instance-static-initialization","#private-static-static-initialization","#private-instance-static-initialization"]}}]}},{"type":"object","properties":{"memberTypes":{"oneOf":[{"type":"array","items":{"oneOf":[{"enum":["readonly-signature","signature","readonly-field","public-readonly-field","public-decorated-readonly-field","decorated-readonly-field","static-readonly-field","public-static-readonly-field","instance-readonly-field","public-instance-readonly-field","abstract-readonly-field","public-abstract-readonly-field","protected-readonly-field","protected-decorated-readonly-field","protected-static-readonly-field","protected-instance-readonly-field","protected-abstract-readonly-field","private-readonly-field","private-decorated-readonly-field","private-static-readonly-field","private-instance-readonly-field","#private-readonly-field","#private-static-readonly-field","#private-instance-readonly-field","field","public-field","public-decorated-field","decorated-field","static-field","public-static-field","instance-field","public-instance-field","abstract-field","public-abstract-field","protected-field","protected-decorated-field","protected-static-field","protected-instance-field","protected-abstract-field","private-field","private-decorated-field","private-static-field","private-instance-field","#private-field","#private-static-field","#private-instance-field","method","public-method","public-decorated-method","decorated-method","static-method","public-static-method","instance-method","public-instance-method","abstract-method","public-abstract-method","protected-method","protected-decorated-method","protected-static-method","protected-instance-method","protected-abstract-method","private-method","private-decorated-method","private-static-method","private-instance-method","#private-method","#private-static-method","#private-instance-method","call-signature","constructor","public-constructor","protected-constructor","private-constructor","get","public-get","public-decorated-get","decorated-get","static-get","public-static-get","instance-get","public-instance-get","abstract-get","public-abstract-get","protected-get","protected-decorated-get","protected-static-get","protected-instance-get","protected-abstract-get","private-get","private-decorated-get","private-static-get","private-instance-get","#private-get","#private-static-get","#private-instance-get","set","public-set","public-decorated-set","decorated-set","static-set","public-static-set","instance-set","public-instance-set","abstract-set","public-abstract-set","protected-set","protected-decorated-set","protected-static-set","protected-instance-set","protected-abstract-set","private-set","private-decorated-set","private-static-set","private-instance-set","#private-set","#private-static-set","#private-instance-set","static-initialization","static-static-initialization","public-static-static-initialization","instance-static-initialization","public-instance-static-initialization","abstract-static-initialization","public-abstract-static-initialization","protected-static-static-initialization","protected-instance-static-initialization","protected-abstract-static-initialization","private-static-static-initialization","private-instance-static-initialization","#private-static-static-initialization","#private-instance-static-initialization"]},{"type":"array","items":{"enum":["readonly-signature","signature","readonly-field","public-readonly-field","public-decorated-readonly-field","decorated-readonly-field","static-readonly-field","public-static-readonly-field","instance-readonly-field","public-instance-readonly-field","abstract-readonly-field","public-abstract-readonly-field","protected-readonly-field","protected-decorated-readonly-field","protected-static-readonly-field","protected-instance-readonly-field","protected-abstract-readonly-field","private-readonly-field","private-decorated-readonly-field","private-static-readonly-field","private-instance-readonly-field","#private-readonly-field","#private-static-readonly-field","#private-instance-readonly-field","field","public-field","public-decorated-field","decorated-field","static-field","public-static-field","instance-field","public-instance-field","abstract-field","public-abstract-field","protected-field","protected-decorated-field","protected-static-field","protected-instance-field","protected-abstract-field","private-field","private-decorated-field","private-static-field","private-instance-field","#private-field","#private-static-field","#private-instance-field","method","public-method","public-decorated-method","decorated-method","static-method","public-static-method","instance-method","public-instance-method","abstract-method","public-abstract-method","protected-method","protected-decorated-method","protected-static-method","protected-instance-method","protected-abstract-method","private-method","private-decorated-method","private-static-method","private-instance-method","#private-method","#private-static-method","#private-instance-method","call-signature","constructor","public-constructor","protected-constructor","private-constructor","get","public-get","public-decorated-get","decorated-get","static-get","public-static-get","instance-get","public-instance-get","abstract-get","public-abstract-get","protected-get","protected-decorated-get","protected-static-get","protected-instance-get","protected-abstract-get","private-get","private-decorated-get","private-static-get","private-instance-get","#private-get","#private-static-get","#private-instance-get","set","public-set","public-decorated-set","decorated-set","static-set","public-static-set","instance-set","public-instance-set","abstract-set","public-abstract-set","protected-set","protected-decorated-set","protected-static-set","protected-instance-set","protected-abstract-set","private-set","private-decorated-set","private-static-set","private-instance-set","#private-set","#private-static-set","#private-instance-set","static-initialization","static-static-initialization","public-static-static-initialization","instance-static-initialization","public-instance-static-initialization","abstract-static-initialization","public-abstract-static-initialization","protected-static-static-initialization","protected-instance-static-initialization","protected-abstract-static-initialization","private-static-static-initialization","private-instance-static-initialization","#private-static-static-initialization","#private-instance-static-initialization"]}}]}},{"type":"string","enum":["never"]}]},"order":{"type":"string","enum":["alphabetically","alphabetically-case-insensitive","as-written","natural","natural-case-insensitive"]},"optionalityOrder":{"type":"string","enum":["optional-first","required-first"]}},"additionalProperties":false}]},"interfaces":{"oneOf":[{"type":"string","enum":["never"]},{"type":"array","items":{"oneOf":[{"enum":["readonly-signature","signature","readonly-field","field","method","constructor"]},{"type":"array","items":{"enum":["readonly-signature","signature","readonly-field","field","method","constructor"]}}]}},{"type":"object","properties":{"memberTypes":{"oneOf":[{"type":"array","items":{"oneOf":[{"enum":["readonly-signature","signature","readonly-field","field","method","constructor"]},{"type":"array","items":{"enum":["readonly-signature","signature","readonly-field","field","method","constructor"]}}]}},{"type":"string","enum":["never"]}]},"order":{"type":"string","enum":["alphabetically","alphabetically-case-insensitive","as-written","natural","natural-case-insensitive"]},"optionalityOrder":{"type":"string","enum":["optional-first","required-first"]}},"additionalProperties":false}]},"typeLiterals":{"oneOf":[{"type":"string","enum":["never"]},{"type":"array","items":{"oneOf":[{"enum":["readonly-signature","signature","readonly-field","field","method","constructor"]},{"type":"array","items":{"enum":["readonly-signature","signature","readonly-field","field","method","constructor"]}}]}},{"type":"object","properties":{"memberTypes":{"oneOf":[{"type":"array","items":{"oneOf":[{"enum":["readonly-signature","signature","readonly-field","field","method","constructor"]},{"type":"array","items":{"enum":["readonly-signature","signature","readonly-field","field","method","constructor"]}}]}},{"type":"string","enum":["never"]}]},"order":{"type":"string","enum":["alphabetically","alphabetically-case-insensitive","as-written","natural","natural-case-insensitive"]},"optionalityOrder":{"type":"string","enum":["optional-first","required-first"]}},"additionalProperties":false}]}},"additionalProperties":false}]},"@typescript-eslint/method-signature-style":{"type":"suggestion","docs":{"description":"Enforce using a particular method signature syntax","recommended":false,"url":"https://typescript-eslint.io/rules/method-signature-style"},"fixable":"code","messages":{"errorMethod":"Shorthand method signature is forbidden. Use a function property instead.","errorProperty":"Function property signature is forbidden. Use a method shorthand instead."},"schema":[{"enum":["property","method"]}]},"@typescript-eslint/naming-convention":{"docs":{"description":"Enforce naming conventions for everything across a codebase","recommended":false,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/naming-convention"},"type":"suggestion","messages":{"unexpectedUnderscore":"{{type}} name `{{name}}` must not have a {{position}} underscore.","missingUnderscore":"{{type}} name `{{name}}` must have {{count}} {{position}} underscore(s).","missingAffix":"{{type}} name `{{name}}` must have one of the following {{position}}es: {{affixes}}","satisfyCustom":"{{type}} name `{{name}}` must {{regexMatch}} the RegExp: {{regex}}","doesNotMatchFormat":"{{type}} name `{{name}}` must match one of the following formats: {{formats}}","doesNotMatchFormatTrimmed":"{{type}} name `{{name}}` trimmed as `{{processedName}}` must match one of the following formats: {{formats}}"},"schema":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"array","items":{"type":"string","enum":["default","variableLike","memberLike","typeLike","method","property","variable","function","parameter","parameterProperty","accessor","enumMember","classMethod","objectLiteralMethod","typeMethod","classProperty","objectLiteralProperty","typeProperty","class","interface","typeAlias","enum","typeParameter"]},"additionalItems":false},"modifiers":{"type":"array","items":{"type":"string","enum":["const","readonly","static","public","protected","private","#private","abstract","destructured","global","exported","unused","requiresQuotes","override","async"]},"additionalItems":false},"types":{"type":"array","items":{"type":"string","enum":["boolean","string","number","function","array"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["default"]},"modifiers":{"type":"array","items":{"type":"string","enum":["const","readonly","static","public","protected","private","#private","abstract","destructured","global","exported","unused","requiresQuotes","override","async"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["variableLike"]},"modifiers":{"type":"array","items":{"type":"string","enum":["unused","async"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["variable"]},"modifiers":{"type":"array","items":{"type":"string","enum":["const","destructured","exported","global","unused","async"]},"additionalItems":false},"types":{"type":"array","items":{"type":"string","enum":["boolean","string","number","function","array"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["function"]},"modifiers":{"type":"array","items":{"type":"string","enum":["exported","global","unused","async"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["parameter"]},"modifiers":{"type":"array","items":{"type":"string","enum":["destructured","unused"]},"additionalItems":false},"types":{"type":"array","items":{"type":"string","enum":["boolean","string","number","function","array"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["memberLike"]},"modifiers":{"type":"array","items":{"type":"string","enum":["abstract","private","#private","protected","public","readonly","requiresQuotes","static","override","async"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["classProperty"]},"modifiers":{"type":"array","items":{"type":"string","enum":["abstract","private","#private","protected","public","readonly","requiresQuotes","static","override"]},"additionalItems":false},"types":{"type":"array","items":{"type":"string","enum":["boolean","string","number","function","array"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["objectLiteralProperty"]},"modifiers":{"type":"array","items":{"type":"string","enum":["public","requiresQuotes"]},"additionalItems":false},"types":{"type":"array","items":{"type":"string","enum":["boolean","string","number","function","array"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["typeProperty"]},"modifiers":{"type":"array","items":{"type":"string","enum":["public","readonly","requiresQuotes"]},"additionalItems":false},"types":{"type":"array","items":{"type":"string","enum":["boolean","string","number","function","array"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["parameterProperty"]},"modifiers":{"type":"array","items":{"type":"string","enum":["private","protected","public","readonly"]},"additionalItems":false},"types":{"type":"array","items":{"type":"string","enum":["boolean","string","number","function","array"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["property"]},"modifiers":{"type":"array","items":{"type":"string","enum":["abstract","private","#private","protected","public","readonly","requiresQuotes","static","override","async"]},"additionalItems":false},"types":{"type":"array","items":{"type":"string","enum":["boolean","string","number","function","array"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["classMethod"]},"modifiers":{"type":"array","items":{"type":"string","enum":["abstract","private","#private","protected","public","requiresQuotes","static","override","async"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["objectLiteralMethod"]},"modifiers":{"type":"array","items":{"type":"string","enum":["public","requiresQuotes","async"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["typeMethod"]},"modifiers":{"type":"array","items":{"type":"string","enum":["public","requiresQuotes"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["method"]},"modifiers":{"type":"array","items":{"type":"string","enum":["abstract","private","#private","protected","public","requiresQuotes","static","override","async"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["accessor"]},"modifiers":{"type":"array","items":{"type":"string","enum":["abstract","private","protected","public","requiresQuotes","static","override"]},"additionalItems":false},"types":{"type":"array","items":{"type":"string","enum":["boolean","string","number","function","array"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["enumMember"]},"modifiers":{"type":"array","items":{"type":"string","enum":["requiresQuotes"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["typeLike"]},"modifiers":{"type":"array","items":{"type":"string","enum":["abstract","exported","unused"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["class"]},"modifiers":{"type":"array","items":{"type":"string","enum":["abstract","exported","unused"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["interface"]},"modifiers":{"type":"array","items":{"type":"string","enum":["exported","unused"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["typeAlias"]},"modifiers":{"type":"array","items":{"type":"string","enum":["exported","unused"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["enum"]},"modifiers":{"type":"array","items":{"type":"string","enum":["exported","unused"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false},{"type":"object","properties":{"format":{"oneOf":[{"type":"array","items":{"type":"string","enum":["camelCase","strictCamelCase","PascalCase","StrictPascalCase","snake_case","UPPER_CASE"]},"additionalItems":false},{"type":"null"}]},"custom":{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]},"leadingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"trailingUnderscore":{"type":"string","enum":["forbid","allow","require","requireDouble","allowDouble","allowSingleOrDouble"]},"prefix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"suffix":{"type":"array","items":{"type":"string","minLength":1},"additionalItems":false},"failureMessage":{"type":"string"},"filter":{"oneOf":[{"type":"string","minLength":1},{"type":"object","properties":{"match":{"type":"boolean"},"regex":{"type":"string"}},"required":["match","regex"]}]},"selector":{"type":"string","enum":["typeParameter"]},"modifiers":{"type":"array","items":{"type":"string","enum":["unused"]},"additionalItems":false}},"required":["selector","format"],"additionalProperties":false}]},"additionalItems":false}},"@typescript-eslint/no-array-constructor":{"type":"suggestion","docs":{"description":"Disallow generic `Array` constructors","recommended":"error","extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-array-constructor"},"fixable":"code","messages":{"useLiteral":"The array literal notation [] is preferable."},"schema":[]},"@typescript-eslint/no-base-to-string":{"docs":{"description":"Require `.toString()` to only be called on objects which provide useful information when stringified","recommended":"strict","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-base-to-string"},"messages":{"baseToString":"'{{name}}' {{certainty}} evaluate to '[object Object]' when stringified."},"schema":[{"type":"object","properties":{"ignoredTypeNames":{"type":"array","items":{"type":"string"}}},"additionalProperties":false}],"type":"suggestion"},"@typescript-eslint/no-confusing-non-null-assertion":{"type":"problem","docs":{"description":"Disallow non-null assertion in locations that may be confusing","recommended":"strict","url":"https://typescript-eslint.io/rules/no-confusing-non-null-assertion"},"fixable":"code","hasSuggestions":true,"messages":{"confusingEqual":"Confusing combinations of non-null assertion and equal test like \"a! == b\", which looks very similar to not equal \"a !== b\".","confusingAssign":"Confusing combinations of non-null assertion and equal test like \"a! = b\", which looks very similar to not equal \"a != b\".","notNeedInEqualTest":"Unnecessary non-null assertion (!) in equal test.","notNeedInAssign":"Unnecessary non-null assertion (!) in assignment left hand.","wrapUpLeft":"Wrap up left hand to avoid putting non-null assertion \"!\" and \"=\" together."},"schema":[]},"@typescript-eslint/no-confusing-void-expression":{"docs":{"description":"Require expressions of type void to appear in statement position","recommended":false,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-confusing-void-expression"},"messages":{"invalidVoidExpr":"Placing a void expression inside another expression is forbidden. Move it to its own statement instead.","invalidVoidExprWrapVoid":"Void expressions used inside another expression must be moved to its own statement or marked explicitly with the `void` operator.","invalidVoidExprArrow":"Returning a void expression from an arrow function shorthand is forbidden. Please add braces to the arrow function.","invalidVoidExprArrowWrapVoid":"Void expressions returned from an arrow function shorthand must be marked explicitly with the `void` operator.","invalidVoidExprReturn":"Returning a void expression from a function is forbidden. Please move it before the `return` statement.","invalidVoidExprReturnLast":"Returning a void expression from a function is forbidden. Please remove the `return` statement.","invalidVoidExprReturnWrapVoid":"Void expressions returned from a function must be marked explicitly with the `void` operator.","voidExprWrapVoid":"Mark with an explicit `void` operator."},"schema":[{"type":"object","properties":{"ignoreArrowShorthand":{"type":"boolean"},"ignoreVoidOperator":{"type":"boolean"}},"additionalProperties":false}],"type":"problem","fixable":"code","hasSuggestions":true},"@typescript-eslint/no-dupe-class-members":{"type":"problem","docs":{"description":"Disallow duplicate class members","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-dupe-class-members"},"schema":[],"messages":{"unexpected":"Duplicate name '{{name}}'."}},"@typescript-eslint/no-duplicate-enum-values":{"type":"problem","docs":{"description":"Disallow duplicate enum member values","recommended":"strict","url":"https://typescript-eslint.io/rules/no-duplicate-enum-values"},"hasSuggestions":false,"messages":{"duplicateValue":"Duplicate enum member value {{value}}."},"schema":[]},"@typescript-eslint/no-duplicate-imports":{"deprecated":true,"replacedBy":["import/no-duplicates"],"type":"problem","docs":{"description":"Disallow duplicate imports","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-duplicate-imports"},"schema":[{"type":"object","properties":{"includeExports":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"import":"'{{module}}' import is duplicated.","importAs":"'{{module}}' import is duplicated as export.","export":"'{{module}}' export is duplicated.","exportAs":"'{{module}}' export is duplicated as import.","importType":"{{module}} type import is duplicated.","importTypeAs":"{{module}} type import is duplicated as type export.","exportType":"{{module}} type export is duplicated.","exportTypeAs":"{{module}} type export is duplicated as type import."}},"@typescript-eslint/no-duplicate-type-constituents":{"type":"suggestion","docs":{"description":"Disallow duplicate constituents of union or intersection types","recommended":false,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-duplicate-type-constituents"},"fixable":"code","messages":{"duplicate":"{{type}} type constituent is duplicated with {{previous}}."},"schema":[{"additionalProperties":false,"type":"object","properties":{"ignoreIntersections":{"type":"boolean"},"ignoreUnions":{"type":"boolean"}}}]},"@typescript-eslint/no-dynamic-delete":{"docs":{"description":"Disallow using the `delete` operator on computed key expressions","recommended":"strict","url":"https://typescript-eslint.io/rules/no-dynamic-delete"},"fixable":"code","messages":{"dynamicDelete":"Do not delete dynamically computed property keys."},"schema":[],"type":"suggestion"},"@typescript-eslint/no-empty-function":{"type":"suggestion","docs":{"description":"Disallow empty functions","recommended":"error","extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-empty-function"},"schema":[{"type":"object","properties":{"allow":{"type":"array","items":{"enum":["functions","arrowFunctions","generatorFunctions","methods","generatorMethods","getters","setters","constructors","private-constructors","protected-constructors","asyncFunctions","asyncMethods","decoratedFunctions","overrideMethods"]},"uniqueItems":true}},"additionalProperties":false}],"messages":{"unexpected":"Unexpected empty {{name}}."}},"@typescript-eslint/no-empty-interface":{"type":"suggestion","docs":{"description":"Disallow the declaration of empty interfaces","recommended":"error","url":"https://typescript-eslint.io/rules/no-empty-interface"},"fixable":"code","hasSuggestions":true,"messages":{"noEmpty":"An empty interface is equivalent to `{}`.","noEmptyWithSuper":"An interface declaring no members is equivalent to its supertype."},"schema":[{"type":"object","additionalProperties":false,"properties":{"allowSingleExtends":{"type":"boolean"}}}]},"@typescript-eslint/no-explicit-any":{"type":"suggestion","docs":{"description":"Disallow the `any` type","recommended":"warn","url":"https://typescript-eslint.io/rules/no-explicit-any"},"fixable":"code","hasSuggestions":true,"messages":{"unexpectedAny":"Unexpected any. Specify a different type.","suggestUnknown":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."},"schema":[{"type":"object","additionalProperties":false,"properties":{"fixToUnknown":{"description":"Whether to enable auto-fixing in which the `any` type is converted to the `unknown` type.","type":"boolean"},"ignoreRestArgs":{"description":"Whether to ignore rest parameter arrays.","type":"boolean"}}}]},"@typescript-eslint/no-extra-non-null-assertion":{"type":"problem","docs":{"description":"Disallow extra non-null assertions","recommended":"error","url":"https://typescript-eslint.io/rules/no-extra-non-null-assertion"},"fixable":"code","schema":[],"messages":{"noExtraNonNullAssertion":"Forbidden extra non-null assertion."}},"@typescript-eslint/no-extra-parens":{"type":"layout","docs":{"description":"Disallow unnecessary parentheses","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-extra-parens"},"fixable":"code","schema":{"anyOf":[{"type":"array","items":[{"enum":["functions"]}],"minItems":0,"maxItems":1},{"type":"array","items":[{"enum":["all"]},{"type":"object","properties":{"conditionalAssign":{"type":"boolean"},"ternaryOperandBinaryExpressions":{"type":"boolean"},"nestedBinaryExpressions":{"type":"boolean"},"returnAssign":{"type":"boolean"},"ignoreJSX":{"enum":["none","all","single-line","multi-line"]},"enforceForArrowConditionals":{"type":"boolean"},"enforceForSequenceExpressions":{"type":"boolean"},"enforceForNewInMemberExpressions":{"type":"boolean"},"enforceForFunctionPrototypeMethods":{"type":"boolean"},"allowParensAfterCommentPattern":{"type":"string"}},"additionalProperties":false}],"minItems":0,"maxItems":2}]},"messages":{"unexpected":"Unnecessary parentheses around expression."}},"@typescript-eslint/no-extra-semi":{"type":"suggestion","docs":{"description":"Disallow unnecessary semicolons","recommended":"error","extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-extra-semi"},"fixable":"code","schema":[],"messages":{"unexpected":"Unnecessary semicolon."}},"@typescript-eslint/no-extraneous-class":{"type":"suggestion","docs":{"description":"Disallow classes used as namespaces","recommended":"strict","url":"https://typescript-eslint.io/rules/no-extraneous-class"},"schema":[{"type":"object","additionalProperties":false,"properties":{"allowConstructorOnly":{"description":"Whether to allow extraneous classes that contain only a constructor.","type":"boolean"},"allowEmpty":{"description":"Whether to allow extraneous classes that have no body (i.e. are empty).","type":"boolean"},"allowStaticOnly":{"description":"Whether to allow extraneous classes that only contain static members.","type":"boolean"},"allowWithDecorator":{"description":"Whether to allow extraneous classes that include a decorator.","type":"boolean"}}}],"messages":{"empty":"Unexpected empty class.","onlyStatic":"Unexpected class with only static properties.","onlyConstructor":"Unexpected class with only a constructor."}},"@typescript-eslint/no-floating-promises":{"docs":{"description":"Require Promise-like statements to be handled appropriately","recommended":"error","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-floating-promises"},"hasSuggestions":true,"messages":{"floating":"Promises must be awaited, end with a call to .catch, or end with a call to .then with a rejection handler.","floatingFixAwait":"Add await operator.","floatingVoid":"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.","floatingFixVoid":"Add void operator to ignore."},"schema":[{"type":"object","properties":{"ignoreVoid":{"description":"Whether to ignore `void` expressions.","type":"boolean"},"ignoreIIFE":{"description":"Whether to ignore async IIFEs (Immediately Invocated Function Expressions).","type":"boolean"}},"additionalProperties":false}],"type":"problem"},"@typescript-eslint/no-for-in-array":{"docs":{"description":"Disallow iterating over an array with a for-in loop","recommended":"error","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-for-in-array"},"messages":{"forInViolation":"For-in loops over arrays are forbidden. Use for-of or array.forEach instead."},"schema":[],"type":"problem"},"@typescript-eslint/no-implicit-any-catch":{"deprecated":true,"type":"suggestion","docs":{"description":"Disallow usage of the implicit `any` type in catch clauses","recommended":false,"url":"https://typescript-eslint.io/rules/no-implicit-any-catch"},"fixable":"code","hasSuggestions":true,"messages":{"implicitAnyInCatch":"Implicit any in catch clause.","explicitAnyInCatch":"Explicit any in catch clause.","suggestExplicitUnknown":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},"schema":[{"type":"object","additionalProperties":false,"properties":{"allowExplicitAny":{"description":"Whether to disallow specifying `: any` as the error type as well. See also `no-explicit-any`.","type":"boolean"}}}]},"@typescript-eslint/no-implied-eval":{"docs":{"description":"Disallow the use of `eval()`-like methods","recommended":"error","extendsBaseRule":true,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-implied-eval"},"messages":{"noImpliedEvalError":"Implied eval. Consider passing a function.","noFunctionConstructor":"Implied eval. Do not use the Function constructor to create functions."},"schema":[],"type":"suggestion"},"@typescript-eslint/no-import-type-side-effects":{"type":"problem","docs":{"description":"Enforce the use of top-level import type qualifier when an import only has specifiers with inline type qualifiers","recommended":false,"url":"https://typescript-eslint.io/rules/no-import-type-side-effects"},"fixable":"code","messages":{"useTopLevelQualifier":"TypeScript will only remove the inline type specifiers which will leave behind a side effect import at runtime. Convert this to a top-level type qualifier to properly remove the entire import."},"schema":[]},"@typescript-eslint/no-inferrable-types":{"type":"suggestion","docs":{"description":"Disallow explicit type declarations for variables or parameters initialized to a number, string, or boolean","recommended":"error","url":"https://typescript-eslint.io/rules/no-inferrable-types"},"fixable":"code","messages":{"noInferrableType":"Type {{type}} trivially inferred from a {{type}} literal, remove type annotation."},"schema":[{"type":"object","properties":{"ignoreParameters":{"type":"boolean"},"ignoreProperties":{"type":"boolean"}},"additionalProperties":false}]},"@typescript-eslint/no-invalid-this":{"type":"suggestion","docs":{"description":"Disallow `this` keywords outside of classes or class-like objects","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-invalid-this"},"messages":{"unexpectedThis":"Unexpected 'this'."},"schema":[{"type":"object","properties":{"capIsConstructor":{"type":"boolean","default":true}},"additionalProperties":false}]},"@typescript-eslint/no-invalid-void-type":{"type":"problem","docs":{"description":"Disallow `void` type outside of generic or return types","recommended":"strict","url":"https://typescript-eslint.io/rules/no-invalid-void-type"},"messages":{"invalidVoidForGeneric":"{{ generic }} may not have void as a type argument.","invalidVoidNotReturnOrGeneric":"void is only valid as a return type or generic type argument.","invalidVoidNotReturn":"void is only valid as a return type.","invalidVoidNotReturnOrThisParam":"void is only valid as return type or type of `this` parameter.","invalidVoidNotReturnOrThisParamOrGeneric":"void is only valid as a return type or generic type argument or the type of a `this` parameter.","invalidVoidUnionConstituent":"void is not valid as a constituent in a union type"},"schema":[{"type":"object","properties":{"allowInGenericTypeArguments":{"oneOf":[{"type":"boolean"},{"type":"array","items":{"type":"string"},"minLength":1}]},"allowAsThisParameter":{"type":"boolean"}},"additionalProperties":false}]},"@typescript-eslint/no-loop-func":{"type":"suggestion","docs":{"description":"Disallow function declarations that contain unsafe references inside loop statements","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-loop-func"},"schema":[],"messages":{"unsafeRefs":"Function declared in a loop contains unsafe references to variable(s) {{ varNames }}."}},"@typescript-eslint/no-loss-of-precision":{"type":"problem","docs":{"description":"Disallow literal numbers that lose precision","recommended":"error","extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-loss-of-precision"},"schema":[],"messages":{"noLossOfPrecision":"This number literal will lose precision at runtime."}},"@typescript-eslint/no-magic-numbers":{"type":"suggestion","docs":{"description":"Disallow magic numbers","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-magic-numbers"},"schema":[{"type":"object","properties":{"detectObjects":{"type":"boolean","default":false},"enforceConst":{"type":"boolean","default":false},"ignore":{"type":"array","items":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^[+-]?(?:0|[1-9][0-9]*)n$"}]},"uniqueItems":true},"ignoreArrayIndexes":{"type":"boolean","default":false},"ignoreDefaultValues":{"type":"boolean","default":false},"ignoreClassFieldInitialValues":{"type":"boolean","default":false},"ignoreNumericLiteralTypes":{"type":"boolean"},"ignoreEnums":{"type":"boolean"},"ignoreReadonlyClassProperties":{"type":"boolean"},"ignoreTypeIndexes":{"type":"boolean"}},"additionalProperties":false}],"messages":{"useConst":"Number constants declarations must use 'const'.","noMagic":"No magic number: {{raw}}."}},"@typescript-eslint/no-meaningless-void-operator":{"type":"suggestion","docs":{"description":"Disallow the `void` operator except when used to discard a value","recommended":"strict","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-meaningless-void-operator"},"fixable":"code","hasSuggestions":true,"messages":{"meaninglessVoidOperator":"void operator shouldn't be used on {{type}}; it should convey that a return value is being ignored","removeVoid":"Remove 'void'"},"schema":[{"type":"object","properties":{"checkNever":{"type":"boolean","default":false}},"additionalProperties":false}]},"@typescript-eslint/no-misused-new":{"type":"problem","docs":{"description":"Enforce valid definition of `new` and `constructor`","recommended":"error","url":"https://typescript-eslint.io/rules/no-misused-new"},"schema":[],"messages":{"errorMessageInterface":"Interfaces cannot be constructed, only classes.","errorMessageClass":"Class cannot have method named `new`."}},"@typescript-eslint/no-misused-promises":{"docs":{"description":"Disallow Promises in places not designed to handle them","recommended":"error","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-misused-promises"},"messages":{"voidReturnArgument":"Promise returned in function argument where a void return was expected.","voidReturnVariable":"Promise-returning function provided to variable where a void return was expected.","voidReturnProperty":"Promise-returning function provided to property where a void return was expected.","voidReturnReturnValue":"Promise-returning function provided to return value where a void return was expected.","voidReturnAttribute":"Promise-returning function provided to attribute where a void return was expected.","conditional":"Expected non-Promise value in a boolean conditional.","spread":"Expected a non-Promise value to be spreaded in an object."},"schema":[{"type":"object","properties":{"checksConditionals":{"type":"boolean"},"checksVoidReturn":{"oneOf":[{"type":"boolean"},{"additionalProperties":false,"properties":{"arguments":{"type":"boolean"},"attributes":{"type":"boolean"},"properties":{"type":"boolean"},"returns":{"type":"boolean"},"variables":{"type":"boolean"}},"type":"object"}]},"checksSpreads":{"type":"boolean"}}}],"type":"problem"},"@typescript-eslint/no-mixed-enums":{"docs":{"description":"Disallow enums from having both number and string members","recommended":"strict","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-mixed-enums"},"messages":{"mixed":"Mixing number and string enums can be confusing."},"schema":[],"type":"problem"},"@typescript-eslint/no-namespace":{"type":"suggestion","docs":{"description":"Disallow TypeScript namespaces","recommended":"error","url":"https://typescript-eslint.io/rules/no-namespace"},"messages":{"moduleSyntaxIsPreferred":"ES2015 module syntax is preferred over namespaces."},"schema":[{"type":"object","properties":{"allowDeclarations":{"description":"Whether to allow `declare` with custom TypeScript namespaces.","type":"boolean"},"allowDefinitionFiles":{"description":"Whether to allow `declare` with custom TypeScript namespaces inside definition files.","type":"boolean"}},"additionalProperties":false}]},"@typescript-eslint/no-non-null-asserted-nullish-coalescing":{"type":"problem","docs":{"description":"Disallow non-null assertions in the left operand of a nullish coalescing operator","recommended":"strict","url":"https://typescript-eslint.io/rules/no-non-null-asserted-nullish-coalescing"},"messages":{"noNonNullAssertedNullishCoalescing":"The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.","suggestRemovingNonNull":"Remove the non-null assertion."},"schema":[],"hasSuggestions":true},"@typescript-eslint/no-non-null-asserted-optional-chain":{"type":"problem","docs":{"description":"Disallow non-null assertions after an optional chain expression","recommended":"error","url":"https://typescript-eslint.io/rules/no-non-null-asserted-optional-chain"},"hasSuggestions":true,"messages":{"noNonNullOptionalChain":"Optional chain expressions can return undefined by design - using a non-null assertion is unsafe and wrong.","suggestRemovingNonNull":"You should remove the non-null assertion."},"schema":[]},"@typescript-eslint/no-non-null-assertion":{"type":"problem","docs":{"description":"Disallow non-null assertions using the `!` postfix operator","recommended":"warn","url":"https://typescript-eslint.io/rules/no-non-null-assertion"},"hasSuggestions":true,"messages":{"noNonNull":"Forbidden non-null assertion.","suggestOptionalChain":"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator."},"schema":[]},"@typescript-eslint/no-parameter-properties":{"deprecated":true,"replacedBy":["@typescript-eslint/parameter-properties"],"type":"problem","docs":{"description":"Disallow the use of parameter properties in class constructors","recommended":false,"url":"https://typescript-eslint.io/rules/no-parameter-properties"},"messages":{"noParamProp":"Property {{parameter}} cannot be declared in the constructor."},"schema":[{"type":"object","properties":{"allows":{"type":"array","items":{"enum":["readonly","private","protected","public","private readonly","protected readonly","public readonly"]},"minItems":1}},"additionalProperties":false}]},"@typescript-eslint/no-redeclare":{"type":"suggestion","docs":{"description":"Disallow variable redeclaration","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-redeclare"},"schema":[{"type":"object","properties":{"builtinGlobals":{"type":"boolean"},"ignoreDeclarationMerge":{"type":"boolean"}},"additionalProperties":false}],"messages":{"redeclared":"'{{id}}' is already defined.","redeclaredAsBuiltin":"'{{id}}' is already defined as a built-in global variable.","redeclaredBySyntax":"'{{id}}' is already defined by a variable declaration."}},"@typescript-eslint/no-redundant-type-constituents":{"docs":{"description":"Disallow members of unions and intersections that do nothing or override type information","recommended":false,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-redundant-type-constituents"},"messages":{"literalOverridden":"{{literal}} is overridden by {{primitive}} in this union type.","primitiveOverridden":"{{primitive}} is overridden by the {{literal}} in this intersection type.","overridden":"'{{typeName}}' is overridden by other types in this {{container}} type.","overrides":"'{{typeName}}' overrides all other types in this {{container}} type."},"schema":[],"type":"suggestion"},"@typescript-eslint/no-require-imports":{"type":"problem","docs":{"description":"Disallow invocation of `require()`","recommended":false,"url":"https://typescript-eslint.io/rules/no-require-imports"},"schema":[],"messages":{"noRequireImports":"A `require()` style import is forbidden."}},"@typescript-eslint/no-restricted-imports":{"type":"suggestion","docs":{"description":"Disallow specified modules when loaded by `import`","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-restricted-imports"},"messages":{"path":"'{{importSource}}' import is restricted from being used.","pathWithCustomMessage":"'{{importSource}}' import is restricted from being used. {{customMessage}}","patterns":"'{{importSource}}' import is restricted from being used by a pattern.","patternWithCustomMessage":"'{{importSource}}' import is restricted from being used by a pattern. {{customMessage}}","patternAndImportName":"'{{importName}}' import from '{{importSource}}' is restricted from being used by a pattern.","patternAndImportNameWithCustomMessage":"'{{importName}}' import from '{{importSource}}' is restricted from being used by a pattern. {{customMessage}}","patternAndEverything":"* import is invalid because '{{importNames}}' from '{{importSource}}' is restricted from being used by a pattern.","patternAndEverythingWithRegexImportName":"* import is invalid because import name matching '{{importNames}}' pattern from '{{importSource}}' is restricted from being used.","patternAndEverythingWithCustomMessage":"* import is invalid because '{{importNames}}' from '{{importSource}}' is restricted from being used by a pattern. {{customMessage}}","patternAndEverythingWithRegexImportNameAndCustomMessage":"* import is invalid because import name matching '{{importNames}}' pattern from '{{importSource}}' is restricted from being used. {{customMessage}}","everything":"* import is invalid because '{{importNames}}' from '{{importSource}}' is restricted.","everythingWithCustomMessage":"* import is invalid because '{{importNames}}' from '{{importSource}}' is restricted. {{customMessage}}","importName":"'{{importName}}' import from '{{importSource}}' is restricted.","importNameWithCustomMessage":"'{{importName}}' import from '{{importSource}}' is restricted. {{customMessage}}"},"schema":{"anyOf":[{"items":{"anyOf":[{},{"properties":{"allowTypeImports":{"type":"boolean","default":false}}}]}},{"items":{"properties":{"paths":{"items":{"anyOf":[{},{"properties":{"allowTypeImports":{"type":"boolean","default":false}}}]}},"patterns":{"anyOf":[{},{"items":{"properties":{"allowTypeImports":{"type":"boolean","default":false}}}}]}}}}]}},"@typescript-eslint/no-shadow":{"type":"suggestion","docs":{"description":"Disallow variable declarations from shadowing variables declared in the outer scope","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-shadow"},"schema":[{"type":"object","properties":{"builtinGlobals":{"type":"boolean"},"hoist":{"enum":["all","functions","never"]},"allow":{"type":"array","items":{"type":"string"}},"ignoreOnInitialization":{"type":"boolean"},"ignoreTypeValueShadow":{"type":"boolean"},"ignoreFunctionTypeParameterNameValueShadow":{"type":"boolean"}},"additionalProperties":false}],"messages":{"noShadow":"'{{name}}' is already declared in the upper scope on line {{shadowedLine}} column {{shadowedColumn}}.","noShadowGlobal":"'{{name}}' is already a global variable."}},"@typescript-eslint/no-this-alias":{"type":"suggestion","docs":{"description":"Disallow aliasing `this`","recommended":"error","url":"https://typescript-eslint.io/rules/no-this-alias"},"schema":[{"type":"object","additionalProperties":false,"properties":{"allowDestructuring":{"description":"Whether to ignore destructurings, such as `const { props, state } = this`.","type":"boolean"},"allowedNames":{"description":"Names to ignore, such as [\"self\"] for `const self = this;`.","type":"array","items":{"type":"string"}}}}],"messages":{"thisAssignment":"Unexpected aliasing of 'this' to local variable.","thisDestructure":"Unexpected aliasing of members of 'this' to local variables."}},"@typescript-eslint/no-throw-literal":{"type":"problem","docs":{"description":"Disallow throwing literals as exceptions","recommended":"strict","extendsBaseRule":true,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-throw-literal"},"schema":[{"type":"object","properties":{"allowThrowingAny":{"type":"boolean"},"allowThrowingUnknown":{"type":"boolean"}},"additionalProperties":false}],"messages":{"object":"Expected an error object to be thrown.","undef":"Do not throw undefined."}},"@typescript-eslint/no-type-alias":{"type":"suggestion","docs":{"description":"Disallow type aliases","recommended":false,"url":"https://typescript-eslint.io/rules/no-type-alias"},"messages":{"noTypeAlias":"Type {{alias}} are not allowed.","noCompositionAlias":"{{typeName}} in {{compositionType}} types are not allowed."},"schema":[{"type":"object","properties":{"allowAliases":{"description":"Whether to allow direct one-to-one type aliases.","enum":["always","never","in-unions","in-intersections","in-unions-and-intersections"]},"allowCallbacks":{"description":"Whether to allow type aliases for callbacks.","enum":["always","never"]},"allowConditionalTypes":{"description":"Whether to allow type aliases for conditional types.","enum":["always","never"]},"allowConstructors":{"description":"Whether to allow type aliases with constructors.","enum":["always","never"]},"allowLiterals":{"description":"Whether to allow type aliases with object literal types.","enum":["always","never","in-unions","in-intersections","in-unions-and-intersections"]},"allowMappedTypes":{"description":"Whether to allow type aliases with mapped types.","enum":["always","never","in-unions","in-intersections","in-unions-and-intersections"]},"allowTupleTypes":{"description":"Whether to allow type aliases with tuple types.","enum":["always","never","in-unions","in-intersections","in-unions-and-intersections"]},"allowGenerics":{"description":"Whether to allow type aliases with generic types.","enum":["always","never"]}},"additionalProperties":false}]},"@typescript-eslint/no-unnecessary-boolean-literal-compare":{"docs":{"description":"Disallow unnecessary equality comparisons against boolean literals","recommended":"strict","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-unnecessary-boolean-literal-compare"},"fixable":"code","messages":{"direct":"This expression unnecessarily compares a boolean value to a boolean instead of using it directly.","negated":"This expression unnecessarily compares a boolean value to a boolean instead of negating it.","comparingNullableToTrueDirect":"This expression unnecessarily compares a nullable boolean value to true instead of using it directly.","comparingNullableToTrueNegated":"This expression unnecessarily compares a nullable boolean value to true instead of negating it.","comparingNullableToFalse":"This expression unnecessarily compares a nullable boolean value to false instead of using the ?? operator to provide a default."},"schema":[{"type":"object","properties":{"allowComparingNullableBooleansToTrue":{"description":"Whether to allow comparisons between nullable boolean variables and `true`.","type":"boolean"},"allowComparingNullableBooleansToFalse":{"description":"Whether to allow comparisons between nullable boolean variables and `false`.","type":"boolean"}},"additionalProperties":false}],"type":"suggestion"},"@typescript-eslint/no-unnecessary-condition":{"type":"suggestion","docs":{"description":"Disallow conditionals where the type is always truthy or always falsy","recommended":"strict","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-unnecessary-condition"},"schema":[{"type":"object","properties":{"allowConstantLoopConditions":{"description":"Whether to ignore constant loop conditions, such as `while (true)`.","type":"boolean"},"allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing":{"description":"Whether to not error when running with a tsconfig that has strictNullChecks turned.","type":"boolean"}},"additionalProperties":false}],"fixable":"code","messages":{"alwaysTruthy":"Unnecessary conditional, value is always truthy.","alwaysFalsy":"Unnecessary conditional, value is always falsy.","alwaysTruthyFunc":"This callback should return a conditional, but return is always truthy.","alwaysFalsyFunc":"This callback should return a conditional, but return is always falsy.","neverNullish":"Unnecessary conditional, expected left-hand side of `??` operator to be possibly null or undefined.","alwaysNullish":"Unnecessary conditional, left-hand side of `??` operator is always `null` or `undefined`.","literalBooleanExpression":"Unnecessary conditional, both sides of the expression are literal values.","noOverlapBooleanExpression":"Unnecessary conditional, the types have no overlap.","never":"Unnecessary conditional, value is `never`.","neverOptionalChain":"Unnecessary optional chain on a non-nullish value.","noStrictNullCheck":"This rule requires the `strictNullChecks` compiler option to be turned on to function correctly."}},"@typescript-eslint/no-unnecessary-qualifier":{"docs":{"description":"Disallow unnecessary namespace qualifiers","recommended":false,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-unnecessary-qualifier"},"fixable":"code","messages":{"unnecessaryQualifier":"Qualifier is unnecessary since '{{ name }}' is in scope."},"schema":[],"type":"suggestion"},"@typescript-eslint/no-unnecessary-type-arguments":{"docs":{"description":"Disallow type arguments that are equal to the default","recommended":"strict","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-unnecessary-type-arguments"},"fixable":"code","messages":{"unnecessaryTypeParameter":"This is the default value for this type parameter, so it can be omitted."},"schema":[],"type":"suggestion"},"@typescript-eslint/no-unnecessary-type-assertion":{"docs":{"description":"Disallow type assertions that do not change the type of an expression","recommended":"error","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-unnecessary-type-assertion"},"fixable":"code","messages":{"unnecessaryAssertion":"This assertion is unnecessary since it does not change the type of the expression.","contextuallyUnnecessary":"This assertion is unnecessary since the receiver accepts the original type of the expression."},"schema":[{"type":"object","properties":{"typesToIgnore":{"description":"A list of type names to ignore.","type":"array","items":{"type":"string"}}}}],"type":"suggestion"},"@typescript-eslint/no-unnecessary-type-constraint":{"docs":{"description":"Disallow unnecessary constraints on generic types","recommended":"error","url":"https://typescript-eslint.io/rules/no-unnecessary-type-constraint"},"hasSuggestions":true,"messages":{"unnecessaryConstraint":"Constraining the generic type `{{name}}` to `{{constraint}}` does nothing and is unnecessary.","removeUnnecessaryConstraint":"Remove the unnecessary `{{constraint}}` constraint."},"schema":[],"type":"suggestion"},"@typescript-eslint/no-unsafe-argument":{"type":"problem","docs":{"description":"Disallow calling a function with a value with type `any`","recommended":"error","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-unsafe-argument"},"messages":{"unsafeArgument":"Unsafe argument of type `{{sender}}` assigned to a parameter of type `{{receiver}}`.","unsafeTupleSpread":"Unsafe spread of a tuple type. The argument is of type `{{sender}}` and is assigned to a parameter of type `{{receiver}}`.","unsafeArraySpread":"Unsafe spread of an `any` array type.","unsafeSpread":"Unsafe spread of an `any` type."},"schema":[]},"@typescript-eslint/no-unsafe-assignment":{"type":"problem","docs":{"description":"Disallow assigning a value with type `any` to variables and properties","recommended":"error","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-unsafe-assignment"},"messages":{"anyAssignment":"Unsafe assignment of an `any` value.","anyAssignmentThis":"Unsafe assignment of an `any` value. `this` is typed as `any`.\nYou can try to fix this by turning on the `noImplicitThis` compiler option, or adding a `this` parameter to the function.","unsafeArrayPattern":"Unsafe array destructuring of an `any` array value.","unsafeArrayPatternFromTuple":"Unsafe array destructuring of a tuple element with an `any` value.","unsafeAssignment":"Unsafe assignment of type {{sender}} to a variable of type {{receiver}}.","unsafeArraySpread":"Unsafe spread of an `any` value in an array."},"schema":[]},"@typescript-eslint/no-unsafe-call":{"type":"problem","docs":{"description":"Disallow calling a value with type `any`","recommended":"error","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-unsafe-call"},"messages":{"unsafeCall":"Unsafe call of an `any` typed value.","unsafeCallThis":"Unsafe call of an `any` typed value. `this` is typed as `any`.\nYou can try to fix this by turning on the `noImplicitThis` compiler option, or adding a `this` parameter to the function.","unsafeNew":"Unsafe construction of an any type value.","unsafeTemplateTag":"Unsafe any typed template tag."},"schema":[]},"@typescript-eslint/no-unsafe-declaration-merging":{"type":"problem","docs":{"description":"Disallow unsafe declaration merging","recommended":"strict","requiresTypeChecking":false,"url":"https://typescript-eslint.io/rules/no-unsafe-declaration-merging"},"messages":{"unsafeMerging":"Unsafe declaration merging between classes and interfaces."},"schema":[]},"@typescript-eslint/no-unsafe-enum-comparison":{"type":"suggestion","docs":{"description":"Disallow comparing an enum value with a non-enum value","recommended":"strict","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-unsafe-enum-comparison"},"messages":{"mismatched":"The two values in this comparison do not have a shared enum type."},"schema":[]},"@typescript-eslint/no-unsafe-member-access":{"type":"problem","docs":{"description":"Disallow member access on a value with type `any`","recommended":"error","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-unsafe-member-access"},"messages":{"unsafeMemberExpression":"Unsafe member access {{property}} on an `any` value.","unsafeThisMemberExpression":"Unsafe member access {{property}} on an `any` value. `this` is typed as `any`.\nYou can try to fix this by turning on the `noImplicitThis` compiler option, or adding a `this` parameter to the function.","unsafeComputedMemberAccess":"Computed name {{property}} resolves to an any value."},"schema":[]},"@typescript-eslint/no-unsafe-return":{"type":"problem","docs":{"description":"Disallow returning a value with type `any` from a function","recommended":"error","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/no-unsafe-return"},"messages":{"unsafeReturn":"Unsafe return of an `{{type}}` typed value.","unsafeReturnThis":"Unsafe return of an `{{type}}` typed value. `this` is typed as `any`.\nYou can try to fix this by turning on the `noImplicitThis` compiler option, or adding a `this` parameter to the function.","unsafeReturnAssignment":"Unsafe return of type `{{sender}}` from function with return type `{{receiver}}`."},"schema":[]},"@typescript-eslint/no-unused-expressions":{"type":"suggestion","docs":{"description":"Disallow unused expressions","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-unused-expressions"},"schema":[{"type":"object","properties":{"allowShortCircuit":{"type":"boolean","default":false},"allowTernary":{"type":"boolean","default":false},"allowTaggedTemplates":{"type":"boolean","default":false},"enforceForJSX":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"unusedExpression":"Expected an assignment or function call and instead saw an expression."}},"@typescript-eslint/no-unused-vars":{"type":"problem","docs":{"description":"Disallow unused variables","recommended":"warn","extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-unused-vars"},"schema":[{"oneOf":[{"enum":["all","local"]},{"type":"object","properties":{"vars":{"enum":["all","local"]},"varsIgnorePattern":{"type":"string"},"args":{"enum":["all","after-used","none"]},"ignoreRestSiblings":{"type":"boolean"},"argsIgnorePattern":{"type":"string"},"caughtErrors":{"enum":["all","none"]},"caughtErrorsIgnorePattern":{"type":"string"},"destructuredArrayIgnorePattern":{"type":"string"}},"additionalProperties":false}]}],"messages":{"unusedVar":"'{{varName}}' is {{action}} but never used{{additional}}."}},"@typescript-eslint/no-use-before-define":{"type":"problem","docs":{"description":"Disallow the use of variables before they are defined","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-use-before-define"},"messages":{"noUseBeforeDefine":"'{{name}}' was used before it was defined."},"schema":[{"oneOf":[{"enum":["nofunc"]},{"type":"object","properties":{"functions":{"type":"boolean"},"classes":{"type":"boolean"},"enums":{"type":"boolean"},"variables":{"type":"boolean"},"typedefs":{"type":"boolean"},"ignoreTypeReferences":{"type":"boolean"},"allowNamedExports":{"type":"boolean"}},"additionalProperties":false}]}]},"@typescript-eslint/no-useless-constructor":{"type":"problem","docs":{"description":"Disallow unnecessary constructors","recommended":"strict","extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/no-useless-constructor"},"schema":[],"messages":{"noUselessConstructor":"Useless constructor."}},"@typescript-eslint/no-useless-empty-export":{"docs":{"description":"Disallow empty exports that don't change anything in a module file","recommended":false,"url":"https://typescript-eslint.io/rules/no-useless-empty-export"},"fixable":"code","hasSuggestions":false,"messages":{"uselessExport":"Empty export does nothing and can be removed."},"schema":[],"type":"suggestion"},"@typescript-eslint/no-var-requires":{"type":"problem","docs":{"description":"Disallow `require` statements except in import statements","recommended":"error","url":"https://typescript-eslint.io/rules/no-var-requires"},"messages":{"noVarReqs":"Require statement not part of import statement."},"schema":[]},"@typescript-eslint/non-nullable-type-assertion-style":{"docs":{"description":"Enforce non-null assertions over explicit type casts","recommended":"strict","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/non-nullable-type-assertion-style"},"fixable":"code","messages":{"preferNonNullAssertion":"Use a ! assertion to more succinctly remove null and undefined from the type."},"schema":[],"type":"suggestion"},"@typescript-eslint/object-curly-spacing":{"deprecated":true,"replacedBy":[],"type":"layout","docs":{"description":"Enforce consistent spacing inside braces","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/object-curly-spacing"},"fixable":"whitespace","schema":[{"enum":["always","never"]},{"type":"object","properties":{"arraysInObjects":{"type":"boolean"},"objectsInObjects":{"type":"boolean"}},"additionalProperties":false}],"messages":{"requireSpaceBefore":"A space is required before '{{token}}'.","requireSpaceAfter":"A space is required after '{{token}}'.","unexpectedSpaceBefore":"There should be no space before '{{token}}'.","unexpectedSpaceAfter":"There should be no space after '{{token}}'."}},"@typescript-eslint/padding-line-between-statements":{"type":"layout","docs":{"description":"Require or disallow padding lines between statements","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/padding-line-between-statements"},"fixable":"whitespace","hasSuggestions":false,"schema":{"$defs":{"paddingType":{"enum":["any","never","always"]},"statementType":{"anyOf":[{"enum":["*","block-like","exports","require","directive","expression","iife","multiline-block-like","multiline-expression","multiline-const","multiline-let","multiline-var","singleline-const","singleline-let","singleline-var","block","empty","function","break","case","class","const","continue","debugger","default","do","export","for","if","import","let","return","switch","throw","try","var","while","with","interface","type"]},{"type":"array","items":{"enum":["*","block-like","exports","require","directive","expression","iife","multiline-block-like","multiline-expression","multiline-const","multiline-let","multiline-var","singleline-const","singleline-let","singleline-var","block","empty","function","break","case","class","const","continue","debugger","default","do","export","for","if","import","let","return","switch","throw","try","var","while","with","interface","type"]},"minItems":1,"uniqueItems":true,"additionalItems":false}]}},"type":"array","items":{"type":"object","properties":{"blankLine":{"$ref":"#/$defs/paddingType"},"prev":{"$ref":"#/$defs/statementType"},"next":{"$ref":"#/$defs/statementType"}},"additionalProperties":false,"required":["blankLine","prev","next"]},"additionalItems":false},"messages":{"unexpectedBlankLine":"Unexpected blank line before this statement.","expectedBlankLine":"Expected blank line before this statement."}},"@typescript-eslint/parameter-properties":{"type":"problem","docs":{"description":"Require or disallow parameter properties in class constructors","recommended":false,"url":"https://typescript-eslint.io/rules/parameter-properties"},"messages":{"preferClassProperty":"Property {{parameter}} should be declared as a class property.","preferParameterProperty":"Property {{parameter}} should be declared as a parameter property."},"schema":{"$defs":{"modifier":{"enum":["readonly","private","protected","public","private readonly","protected readonly","public readonly"]}},"prefixItems":[{"type":"object","properties":{"allow":{"type":"array","items":{"$ref":"#/$defs/modifier"},"minItems":1},"prefer":{"enum":["class-property","parameter-property"]}},"additionalProperties":false}],"type":"array"}},"@typescript-eslint/prefer-as-const":{"type":"suggestion","docs":{"description":"Enforce the use of `as const` over literal type","recommended":"error","url":"https://typescript-eslint.io/rules/prefer-as-const"},"fixable":"code","hasSuggestions":true,"messages":{"preferConstAssertion":"Expected a `const` instead of a literal type assertion.","variableConstAssertion":"Expected a `const` assertion instead of a literal type annotation.","variableSuggest":"You should use `as const` instead of type annotation."},"schema":[]},"@typescript-eslint/prefer-enum-initializers":{"type":"suggestion","docs":{"description":"Require each enum member value to be explicitly initialized","recommended":false,"url":"https://typescript-eslint.io/rules/prefer-enum-initializers"},"hasSuggestions":true,"messages":{"defineInitializer":"The value of the member '{{ name }}' should be explicitly defined.","defineInitializerSuggestion":"Can be fixed to {{ name }} = {{ suggested }}"},"schema":[]},"@typescript-eslint/prefer-for-of":{"type":"suggestion","docs":{"description":"Enforce the use of `for-of` loop over the standard `for` loop where possible","recommended":"strict","url":"https://typescript-eslint.io/rules/prefer-for-of"},"messages":{"preferForOf":"Expected a `for-of` loop instead of a `for` loop with this simple iteration."},"schema":[]},"@typescript-eslint/prefer-function-type":{"docs":{"description":"Enforce using function types instead of interfaces with call signatures","recommended":"strict","url":"https://typescript-eslint.io/rules/prefer-function-type"},"fixable":"code","messages":{"functionTypeOverCallableType":"{{ literalOrInterface }} only has a call signature, you should use a function type instead.","unexpectedThisOnFunctionOnlyInterface":"`this` refers to the function type '{{ interfaceName }}', did you intend to use a generic `this` parameter like `<Self>(this: Self, ...) => Self` instead?"},"schema":[],"type":"suggestion"},"@typescript-eslint/prefer-includes":{"type":"suggestion","docs":{"description":"Enforce `includes` method over `indexOf` method","recommended":"strict","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/prefer-includes"},"fixable":"code","messages":{"preferIncludes":"Use 'includes()' method instead.","preferStringIncludes":"Use `String#includes()` method with a string instead."},"schema":[]},"@typescript-eslint/prefer-literal-enum-member":{"type":"suggestion","docs":{"description":"Require all enum members to be literal values","recommended":"strict","requiresTypeChecking":false,"url":"https://typescript-eslint.io/rules/prefer-literal-enum-member"},"messages":{"notLiteral":"Explicit enum value must only be a literal value (string, number, boolean, etc)."},"schema":[{"type":"object","properties":{"allowBitwiseExpressions":{"type":"boolean"}},"additionalProperties":false}]},"@typescript-eslint/prefer-namespace-keyword":{"type":"suggestion","docs":{"description":"Require using `namespace` keyword over `module` keyword to declare custom TypeScript modules","recommended":"error","url":"https://typescript-eslint.io/rules/prefer-namespace-keyword"},"fixable":"code","messages":{"useNamespace":"Use 'namespace' instead of 'module' to declare custom TypeScript modules."},"schema":[]},"@typescript-eslint/prefer-nullish-coalescing":{"type":"suggestion","docs":{"description":"Enforce using the nullish coalescing operator instead of logical chaining","recommended":"strict","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/prefer-nullish-coalescing"},"hasSuggestions":true,"messages":{"preferNullishOverOr":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","preferNullishOverTernary":"Prefer using nullish coalescing operator (`??`) instead of a ternary expression, as it is simpler to read.","suggestNullish":"Fix to nullish coalescing operator (`??`).","noStrictNullCheck":"This rule requires the `strictNullChecks` compiler option to be turned on to function correctly."},"schema":[{"type":"object","properties":{"allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing":{"type":"boolean"},"ignoreConditionalTests":{"type":"boolean"},"ignoreMixedLogicalExpressions":{"type":"boolean"},"ignorePrimitives":{"type":"object","properties":{"bigint":{"type":"boolean"},"boolean":{"type":"boolean"},"number":{"type":"boolean"},"string":{"type":"boolean"}}},"ignoreTernaryTests":{"type":"boolean"}},"additionalProperties":false}]},"@typescript-eslint/prefer-optional-chain":{"type":"suggestion","docs":{"description":"Enforce using concise optional chain expressions instead of chained logical ands, negated logical ors, or empty objects","recommended":"strict","url":"https://typescript-eslint.io/rules/prefer-optional-chain"},"hasSuggestions":true,"messages":{"preferOptionalChain":"Prefer using an optional chain expression instead, as it's more concise and easier to read.","optionalChainSuggest":"Change to an optional chain."},"schema":[]},"@typescript-eslint/prefer-readonly":{"docs":{"description":"Require private members to be marked as `readonly` if they're never modified outside of the constructor","recommended":false,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/prefer-readonly"},"fixable":"code","messages":{"preferReadonly":"Member '{{name}}' is never reassigned; mark it as `readonly`."},"schema":[{"allowAdditionalProperties":false,"properties":{"onlyInlineLambdas":{"type":"boolean"}},"type":"object"}],"type":"suggestion"},"@typescript-eslint/prefer-readonly-parameter-types":{"type":"suggestion","docs":{"description":"Require function parameters to be typed as `readonly` to prevent accidental mutation of inputs","recommended":false,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/prefer-readonly-parameter-types"},"schema":[{"type":"object","additionalProperties":false,"properties":{"checkParameterProperties":{"type":"boolean"},"ignoreInferredTypes":{"type":"boolean"},"treatMethodsAsReadonly":{"type":"boolean"}}}],"messages":{"shouldBeReadonly":"Parameter should be a read only type."}},"@typescript-eslint/prefer-reduce-type-parameter":{"type":"problem","docs":{"description":"Enforce using type parameter when calling `Array#reduce` instead of casting","recommended":"strict","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/prefer-reduce-type-parameter"},"messages":{"preferTypeParameter":"Unnecessary cast: Array#reduce accepts a type parameter for the default value."},"fixable":"code","schema":[]},"@typescript-eslint/prefer-regexp-exec":{"type":"suggestion","fixable":"code","docs":{"description":"Enforce `RegExp#exec` over `String#match` if no global flag is provided","recommended":false,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/prefer-regexp-exec"},"messages":{"regExpExecOverStringMatch":"Use the `RegExp#exec()` method instead."},"schema":[]},"@typescript-eslint/prefer-return-this-type":{"type":"suggestion","docs":{"description":"Enforce that `this` is used when only `this` type is returned","recommended":"strict","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/prefer-return-this-type"},"messages":{"useThisType":"Use `this` type instead."},"schema":[],"fixable":"code"},"@typescript-eslint/prefer-string-starts-ends-with":{"type":"suggestion","docs":{"description":"Enforce using `String#startsWith` and `String#endsWith` over other equivalent methods of checking substrings","recommended":"strict","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/prefer-string-starts-ends-with"},"messages":{"preferStartsWith":"Use 'String#startsWith' method instead.","preferEndsWith":"Use the 'String#endsWith' method instead."},"schema":[],"fixable":"code"},"@typescript-eslint/prefer-ts-expect-error":{"type":"problem","docs":{"description":"Enforce using `@ts-expect-error` over `@ts-ignore`","recommended":"strict","url":"https://typescript-eslint.io/rules/prefer-ts-expect-error"},"fixable":"code","messages":{"preferExpectErrorComment":"Use \"@ts-expect-error\" to ensure an error is actually being suppressed."},"schema":[]},"@typescript-eslint/promise-function-async":{"type":"suggestion","fixable":"code","docs":{"description":"Require any function or method that returns a Promise to be marked async","recommended":false,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/promise-function-async"},"messages":{"missingAsync":"Functions that return promises must be async."},"schema":[{"type":"object","properties":{"allowAny":{"description":"Whether to consider `any` and `unknown` to be Promises.","type":"boolean"},"allowedPromiseNames":{"description":"Any extra names of classes or interfaces to be considered Promises.","type":"array","items":{"type":"string"}},"checkArrowFunctions":{"type":"boolean"},"checkFunctionDeclarations":{"type":"boolean"},"checkFunctionExpressions":{"type":"boolean"},"checkMethodDeclarations":{"type":"boolean"}},"additionalProperties":false}]},"@typescript-eslint/quotes":{"type":"layout","docs":{"description":"Enforce the consistent use of either backticks, double, or single quotes","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/quotes"},"fixable":"code","messages":{"wrongQuotes":"Strings must use {{description}}."},"schema":[{"enum":["single","double","backtick"]},{"anyOf":[{"enum":["avoid-escape"]},{"type":"object","properties":{"avoidEscape":{"type":"boolean"},"allowTemplateLiterals":{"type":"boolean"}},"additionalProperties":false}]}]},"@typescript-eslint/require-array-sort-compare":{"type":"problem","docs":{"description":"Require `Array#sort` calls to always provide a `compareFunction`","recommended":false,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/require-array-sort-compare"},"messages":{"requireCompare":"Require 'compare' argument."},"schema":[{"type":"object","properties":{"ignoreStringArrays":{"description":"Whether to ignore arrays in which all elements are strings.","type":"boolean"}}}]},"@typescript-eslint/require-await":{"type":"suggestion","docs":{"description":"Disallow async functions which have no `await` expression","recommended":"error","requiresTypeChecking":true,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/require-await"},"schema":[],"messages":{"missingAwait":"{{name}} has no 'await' expression."}},"@typescript-eslint/restrict-plus-operands":{"type":"problem","docs":{"description":"Require both operands of addition to be the same type and be `bigint`, `number`, or `string`","recommended":"error","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/restrict-plus-operands"},"messages":{"bigintAndNumber":"Numeric '+' operations must either be both bigints or both numbers. Got `{{left}}` + `{{right}}`.","invalid":"Invalid operand for a '+' operation. Operands must each be a number or {{stringLike}}. Got `{{type}}`.","mismatched":"Operands of '+' operations must be a number or {{stringLike}}. Got `{{left}}` + `{{right}}`."},"schema":[{"type":"object","additionalProperties":false,"properties":{"allowAny":{"description":"Whether to allow `any` typed values.","type":"boolean"},"allowBoolean":{"description":"Whether to allow `boolean` typed values.","type":"boolean"},"allowNullish":{"description":"Whether to allow potentially `null` or `undefined` typed values.","type":"boolean"},"allowNumberAndString":{"description":"Whether to allow `bigint`/`number` typed values and `string` typed values to be added together.","type":"boolean"},"allowRegExp":{"description":"Whether to allow `regexp` typed values.","type":"boolean"},"checkCompoundAssignments":{"description":"Whether to check compound assignments such as `+=`.","type":"boolean"}}}]},"@typescript-eslint/restrict-template-expressions":{"type":"problem","docs":{"description":"Enforce template literal expressions to be of `string` type","recommended":"error","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/restrict-template-expressions"},"messages":{"invalidType":"Invalid type \"{{type}}\" of template literal expression."},"schema":[{"type":"object","properties":{"allowAny":{"description":"Whether to allow `any` typed values in template expressions.","type":"boolean"},"allowBoolean":{"description":"Whether to allow `boolean` typed values in template expressions.","type":"boolean"},"allowNullish":{"description":"Whether to allow `nullish` typed values in template expressions.","type":"boolean"},"allowNumber":{"description":"Whether to allow `number` typed values in template expressions.","type":"boolean"},"allowRegExp":{"description":"Whether to allow `regexp` typed values in template expressions.","type":"boolean"},"allowNever":{"description":"Whether to allow `never` typed values in template expressions.","type":"boolean"}}}]},"@typescript-eslint/return-await":{"docs":{"description":"Enforce consistent returning of awaited values","recommended":false,"requiresTypeChecking":true,"extendsBaseRule":"no-return-await","url":"https://typescript-eslint.io/rules/return-await"},"fixable":"code","hasSuggestions":true,"type":"problem","messages":{"nonPromiseAwait":"Returning an awaited value that is not a promise is not allowed.","disallowedPromiseAwait":"Returning an awaited promise is not allowed in this context.","requiredPromiseAwait":"Returning an awaited promise is required in this context."},"schema":[{"enum":["in-try-catch","always","never"]}]},"@typescript-eslint/semi":{"type":"layout","docs":{"description":"Require or disallow semicolons instead of ASI","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/semi"},"fixable":"code","schema":{"anyOf":[{"type":"array","items":[{"enum":["never"]},{"type":"object","properties":{"beforeStatementContinuationChars":{"enum":["always","any","never"]}},"additionalProperties":false}],"minItems":0,"maxItems":2},{"type":"array","items":[{"enum":["always"]},{"type":"object","properties":{"omitLastInOneLineBlock":{"type":"boolean"},"omitLastInOneLineClassBody":{"type":"boolean"}},"additionalProperties":false}],"minItems":0,"maxItems":2}]},"messages":{"missingSemi":"Missing semicolon.","extraSemi":"Extra semicolon."}},"@typescript-eslint/sort-type-constituents":{"type":"suggestion","docs":{"description":"Enforce constituents of a type union/intersection to be sorted alphabetically","recommended":false,"url":"https://typescript-eslint.io/rules/sort-type-constituents"},"fixable":"code","hasSuggestions":true,"messages":{"notSorted":"{{type}} type constituents must be sorted.","notSortedNamed":"{{type}} type {{name}} constituents must be sorted.","suggestFix":"Sort constituents of type (removes all comments)."},"schema":[{"type":"object","properties":{"checkIntersections":{"description":"Whether to check intersection types.","type":"boolean"},"checkUnions":{"description":"Whether to check union types.","type":"boolean"},"groupOrder":{"description":"Ordering of the groups.","type":"array","items":{"type":"string","enum":["conditional","function","import","intersection","keyword","nullish","literal","named","object","operator","tuple","union"]}}}}]},"@typescript-eslint/sort-type-union-intersection-members":{"deprecated":true,"type":"suggestion","docs":{"description":"Enforce members of a type union/intersection to be sorted alphabetically","recommended":false,"url":"https://typescript-eslint.io/rules/sort-type-union-intersection-members"},"fixable":"code","hasSuggestions":true,"messages":{"notSorted":"{{type}} type members must be sorted.","notSortedNamed":"{{type}} type {{name}} members must be sorted.","suggestFix":"Sort members of type (removes all comments)."},"replacedBy":["@typescript-eslint/sort-type-constituents"],"schema":[{"type":"object","properties":{"checkIntersections":{"description":"Whether to check intersection types.","type":"boolean"},"checkUnions":{"description":"Whether to check union types.","type":"boolean"},"groupOrder":{"description":"Ordering of the groups.","type":"array","items":{"type":"string","enum":["conditional","function","import","intersection","keyword","nullish","literal","named","object","operator","tuple","union"]}}}}]},"@typescript-eslint/space-before-blocks":{"type":"layout","docs":{"description":"Enforce consistent spacing before blocks","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/space-before-blocks"},"fixable":"whitespace","schema":[{"oneOf":[{"enum":["always","never"]},{"type":"object","properties":{"keywords":{"enum":["always","never","off"]},"functions":{"enum":["always","never","off"]},"classes":{"enum":["always","never","off"]}},"additionalProperties":false}]}],"messages":{"unexpectedSpace":"Unexpected space before opening brace.","missingSpace":"Missing space before opening brace."}},"@typescript-eslint/space-before-function-paren":{"type":"layout","docs":{"description":"Enforce consistent spacing before function parenthesis","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/space-before-function-paren"},"fixable":"whitespace","schema":[{"oneOf":[{"enum":["always","never"]},{"type":"object","properties":{"anonymous":{"enum":["always","never","ignore"]},"named":{"enum":["always","never","ignore"]},"asyncArrow":{"enum":["always","never","ignore"]}},"additionalProperties":false}]}],"messages":{"unexpected":"Unexpected space before function parentheses.","missing":"Missing space before function parentheses."}},"@typescript-eslint/space-infix-ops":{"type":"layout","docs":{"description":"Require spacing around infix operators","recommended":false,"extendsBaseRule":true,"url":"https://typescript-eslint.io/rules/space-infix-ops"},"fixable":"whitespace","schema":[{"type":"object","properties":{"int32Hint":{"type":"boolean","default":false}},"additionalProperties":false}],"messages":{"missingSpace":"Operator '{{operator}}' must be spaced."}},"@typescript-eslint/strict-boolean-expressions":{"type":"suggestion","fixable":"code","hasSuggestions":true,"docs":{"description":"Disallow certain types in boolean expressions","recommended":false,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/strict-boolean-expressions"},"schema":[{"type":"object","properties":{"allowString":{"type":"boolean"},"allowNumber":{"type":"boolean"},"allowNullableObject":{"type":"boolean"},"allowNullableBoolean":{"type":"boolean"},"allowNullableString":{"type":"boolean"},"allowNullableNumber":{"type":"boolean"},"allowNullableEnum":{"type":"boolean"},"allowAny":{"type":"boolean"},"allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing":{"type":"boolean"}},"additionalProperties":false}],"messages":{"conditionErrorOther":"Unexpected value in conditional. A boolean expression is required.","conditionErrorAny":"Unexpected any value in conditional. An explicit comparison or type cast is required.","conditionErrorNullish":"Unexpected nullish value in conditional. The condition is always false.","conditionErrorNullableBoolean":"Unexpected nullable boolean value in conditional. Please handle the nullish case explicitly.","conditionErrorString":"Unexpected string value in conditional. An explicit empty string check is required.","conditionErrorNullableString":"Unexpected nullable string value in conditional. Please handle the nullish/empty cases explicitly.","conditionErrorNumber":"Unexpected number value in conditional. An explicit zero/NaN check is required.","conditionErrorNullableNumber":"Unexpected nullable number value in conditional. Please handle the nullish/zero/NaN cases explicitly.","conditionErrorObject":"Unexpected object value in conditional. The condition is always true.","conditionErrorNullableObject":"Unexpected nullable object value in conditional. An explicit null check is required.","conditionErrorNullableEnum":"Unexpected nullable enum value in conditional. Please handle the nullish/zero/NaN cases explicitly.","noStrictNullCheck":"This rule requires the `strictNullChecks` compiler option to be turned on to function correctly.","conditionFixDefaultFalse":"Explicitly treat nullish value the same as false (`value ?? false`)","conditionFixDefaultEmptyString":"Explicitly treat nullish value the same as an empty string (`value ?? \"\"`)","conditionFixDefaultZero":"Explicitly treat nullish value the same as 0 (`value ?? 0`)","conditionFixCompareNullish":"Change condition to check for null/undefined (`value != null`)","conditionFixCastBoolean":"Explicitly cast value to a boolean (`Boolean(value)`)","conditionFixCompareTrue":"Change condition to check if true (`value === true`)","conditionFixCompareFalse":"Change condition to check if false (`value === false`)","conditionFixCompareStringLength":"Change condition to check string's length (`value.length !== 0`)","conditionFixCompareEmptyString":"Change condition to check for empty string (`value !== \"\"`)","conditionFixCompareZero":"Change condition to check for 0 (`value !== 0`)","conditionFixCompareNaN":"Change condition to check for NaN (`!Number.isNaN(value)`)"}},"@typescript-eslint/switch-exhaustiveness-check":{"type":"suggestion","docs":{"description":"Require switch-case statements to be exhaustive with union type","recommended":false,"requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/switch-exhaustiveness-check"},"hasSuggestions":true,"schema":[],"messages":{"switchIsNotExhaustive":"Switch is not exhaustive. Cases not matched: {{missingBranches}}","addMissingCases":"Add branches for missing cases."}},"@typescript-eslint/triple-slash-reference":{"type":"suggestion","docs":{"description":"Disallow certain triple slash directives in favor of ES6-style import declarations","recommended":"error","url":"https://typescript-eslint.io/rules/triple-slash-reference"},"messages":{"tripleSlashReference":"Do not use a triple slash reference for {{module}}, use `import` style instead."},"schema":[{"type":"object","properties":{"lib":{"enum":["always","never"]},"path":{"enum":["always","never"]},"types":{"enum":["always","never","prefer-import"]}},"additionalProperties":false}]},"@typescript-eslint/type-annotation-spacing":{"type":"layout","docs":{"description":"Require consistent spacing around type annotations","recommended":false,"url":"https://typescript-eslint.io/rules/type-annotation-spacing"},"fixable":"whitespace","messages":{"expectedSpaceAfter":"Expected a space after the '{{type}}'.","expectedSpaceBefore":"Expected a space before the '{{type}}'.","unexpectedSpaceAfter":"Unexpected space after the '{{type}}'.","unexpectedSpaceBefore":"Unexpected space before the '{{type}}'.","unexpectedSpaceBetween":"Unexpected space between the '{{previousToken}}' and the '{{type}}'."},"schema":[{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"},"overrides":{"type":"object","properties":{"colon":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"arrow":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"variable":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"parameter":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"property":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false},"returnType":{"type":"object","properties":{"before":{"type":"boolean"},"after":{"type":"boolean"}},"additionalProperties":false}},"additionalProperties":false}},"additionalProperties":false}]},"@typescript-eslint/typedef":{"docs":{"description":"Require type annotations in certain places","recommended":false,"url":"https://typescript-eslint.io/rules/typedef"},"messages":{"expectedTypedef":"Expected a type annotation.","expectedTypedefNamed":"Expected {{name}} to have a type annotation."},"schema":[{"type":"object","properties":{"arrayDestructuring":{"type":"boolean"},"arrowParameter":{"type":"boolean"},"memberVariableDeclaration":{"type":"boolean"},"objectDestructuring":{"type":"boolean"},"parameter":{"type":"boolean"},"propertyDeclaration":{"type":"boolean"},"variableDeclaration":{"type":"boolean"},"variableDeclarationIgnoreFunction":{"type":"boolean"}}}],"type":"suggestion"},"@typescript-eslint/unbound-method":{"docs":{"description":"Enforce unbound methods are called with their expected scope","recommended":"error","requiresTypeChecking":true,"url":"https://typescript-eslint.io/rules/unbound-method"},"messages":{"unbound":"Avoid referencing unbound methods which may cause unintentional scoping of `this`.","unboundWithoutThisAnnotation":"Avoid referencing unbound methods which may cause unintentional scoping of `this`.\nIf your function does not access `this`, you can annotate it with `this: void`, or consider using an arrow function instead."},"schema":[{"type":"object","properties":{"ignoreStatic":{"description":"Whether to skip checking whether `static` methods are correctly bound.","type":"boolean"}},"additionalProperties":false}],"type":"problem"},"@typescript-eslint/unified-signatures":{"docs":{"description":"Disallow two overloads that could be unified into one with a union or an optional/rest parameter","recommended":"strict","url":"https://typescript-eslint.io/rules/unified-signatures"},"type":"suggestion","messages":{"omittingRestParameter":"{{failureStringStart}} with a rest parameter.","omittingSingleParameter":"{{failureStringStart}} with an optional parameter.","singleParameterDifference":"{{failureStringStart}} taking `{{type1}} | {{type2}}`."},"schema":[{"additionalProperties":false,"properties":{"ignoreDifferentlyNamedParameters":{"description":"Whether two parameters with different names at the same index should be considered different even if their types are the same.","type":"boolean"}},"type":"object"}]},"prettier/prettier":{"docs":{"url":"https://github.com/prettier/eslint-plugin-prettier#options"},"type":"layout","fixable":"code","schema":[{"type":"object","properties":{},"additionalProperties":true},{"type":"object","properties":{"usePrettierrc":{"type":"boolean"},"fileInfoOptions":{"type":"object","properties":{},"additionalProperties":true}},"additionalProperties":true}],"messages":{"insert":"Insert `{{ insertText }}`","delete":"Delete `{{ deleteText }}`","replace":"Replace `{{ deleteText }}` with `{{ insertText }}`"}}}}}
